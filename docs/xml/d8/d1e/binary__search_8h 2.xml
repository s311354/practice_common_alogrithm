<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d8/d1e/binary__search_8h" kind="file" language="C++">
    <compoundname>binary_search.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">queue</includes>
    <includedby refid="dd/d7c/binary__search_8cc" local="yes">binary_search/binary_search.cc</includedby>
    <includedby refid="d0/dd3/binary__search_2main_8cc" local="yes">binary_search/main.cc</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>binary_search/binary_search.h</label>
        <link refid="d8/d1e/binary__search_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>binary_search/binary_search.h</label>
        <link refid="d8/d1e/binary__search_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>binary_search/main.cc</label>
        <link refid="d0/dd3/binary__search_2main_8cc"/>
      </node>
      <node id="2">
        <label>binary_search/binary_search.cc</label>
        <link refid="dd/d7c/binary__search_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d3/d2e/classcommon_1_1BinarySearch" prot="public">common::BinarySearch</innerclass>
    <innerclass refid="d2/dbd/structcommon_1_1BSTNode" prot="public">common::BSTNode</innerclass>
    <innernamespace refid="d9/d0c/namespacecommon">common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BINARY_SEARCH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINARY_SEARCH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/iostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">iostream</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/queue" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">queue</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/d0c/namespacecommon" kindref="compound">common</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d2/dbd/structcommon_1_1BSTNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref><sp/>{</highlight></codeline>
<codeline lineno="11" refid="d2/dbd/structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="12" refid="d2/dbd/structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d2/dbd/structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="13" refid="d2/dbd/structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d2/dbd/structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="d3/d2e/classcommon_1_1BinarySearch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d2e/classcommon_1_1BinarySearch" kindref="compound">BinarySearch</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="d3/d2e/classcommon_1_1BinarySearch_1a0bae2549747f1ba11bbc62946f933b05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a0bae2549747f1ba11bbc62946f933b05" kindref="member">BinarySearch</ref>(){};</highlight></codeline>
<codeline lineno="24" refid="d3/d2e/classcommon_1_1BinarySearch_1a5e7fb1e4bba49438990654b773b5eea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a5e7fb1e4bba49438990654b773b5eea6" kindref="member">~BinarySearch</ref>(){};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d3/d2e/classcommon_1_1BinarySearch_1a355b65e2dceea1526bf0e97ae8f503bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a355b65e2dceea1526bf0e97ae8f503bb" kindref="member">BinarySearchGetNewNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>new<sp/>node<sp/>for<sp/>our<sp/>BST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a518555c24c8d42b37d27456f597fc6a3" kindref="member">GetNewNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>node<sp/>with<sp/>insert<sp/>new<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a123c53dcbf6b8e9c8d8238a4c5dc7ef4" kindref="member">Insert</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>given<sp/>value<sp/>is<sp/>in<sp/>our<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1af966dc3312822c8ffb9dd6b47a86323c" kindref="member">Search</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>tree<sp/>is<sp/>binary<sp/>search<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1ac809cfc7dabff0711f0d1884493ceeed" kindref="member">IsBinarySearchTree</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>all<sp/>items<sp/>in<sp/>the<sp/>given<sp/>tree<sp/>are<sp/>between<sp/>the<sp/>given<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1af71b6343ea75fcc8ce8378d73fa9c6ae" kindref="member">IsBetween</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>minimum<sp/>node<sp/>stored<sp/>in<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1abf445f56b34200993f66b829b9481bee" kindref="member">GetMinNode</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>minimum<sp/>value<sp/>stored<sp/>in<sp/>the<sp/>tree<sp/>or<sp/>-1<sp/>if<sp/>tree<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1ae76b080c03adc9d4bbeebd9289bca634" kindref="member">GetMin</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>maximum<sp/>node<sp/>stored<sp/>in<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a90d8c5c674ca02edcd70302f9687cddc" kindref="member">GetMaxNode</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>maximum<sp/>value<sp/>stored<sp/>in<sp/>the<sp/>tree<sp/>or<sp/>-1<sp/>if<sp/>tree<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a2cf0ec9ac9e01874db222e61d6196d73" kindref="member">GetMax</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>height<sp/>of<sp/>the<sp/>tree,<sp/>0<sp/>if<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1af5da473ef8f59204d9378229ad96d74c" kindref="member">GetHeight</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>a<sp/>specific<sp/>node<sp/>from<sp/>the<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a9286e68d71049b4c0225698f5584b720" kindref="member">DeleteValue</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Frees<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a20e8cb86f51e3cc02bfc138b7d86bf37" kindref="member">DeleteTree</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>items<sp/>in<sp/>the<sp/>tree<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1aff88341eff3205aa298d54252dcf12e6" kindref="member">PrintInOrder</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>items<sp/>in<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d3/d2e/classcommon_1_1BinarySearch_1a5b9b8c7fe6e6e3610fb67959b8268a2b" kindref="member">PrintBFS</ref>(<ref refid="d2/dbd/structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BINARY_SEARCH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="binary_search/binary_search.h"/>
  </compounddef>
</doxygen>

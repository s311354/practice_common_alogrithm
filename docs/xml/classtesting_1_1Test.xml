<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtesting_1_1Test" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>testing::Test</compoundname>
    <includes refid="gtest_8h" local="no">gtest.h</includes>
    <innerclass refid="structtesting_1_1Test_1_1Setup__should__be__spelled__SetUp" prot="package">testing::Test::Setup_should_be_spelled_SetUp</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1Test_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TestInfo</definition>
        <argsstring></argsstring>
        <name>TestInfo</name>
        <param>
          <type><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="373" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="classtesting_1_1Test_1a63782796b486177d406ecc55a978fccc" prot="package" static="no" mutable="no">
        <type></type>
        <definition>testing::Test::__pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <bitfield>SetUpTestCaseFunc SetUpTestCaseFunc</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="377" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1Test_1a11d67dfd180c2d33e5f3cafb11b843a4" prot="package" static="no" mutable="no">
        <type></type>
        <definition>testing::Test::__pad1__</definition>
        <argsstring></argsstring>
        <name>__pad1__</name>
        <bitfield>TearDownTestCaseFunc TearDownTestCaseFunc</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="378" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1Test_1a313d292a9982b2895c1987b9b7dccc44" prot="package" static="no" mutable="no">
        <type></type>
        <definition>testing::Test::__pad2__</definition>
        <argsstring></argsstring>
        <name>__pad2__</name>
        <bitfield>scoped_ptr&lt; GTEST_FLAG_SAVER_ &gt; gtest_flag_saver_</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="455" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="classtesting_1_1Test_1a5d18da7437b0d6ca32dcad90a21f9b6b" prot="package" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::Test::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(Test)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1Test" kindref="compound">Test</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="477" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a65c1626d50b7dd1a1d759dc6c3f72d4c" prot="package" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structtesting_1_1Test_1_1Setup__should__be__spelled__SetUp" kindref="compound">Setup_should_be_spelled_SetUp</ref> *</type>
        <definition>virtual Setup_should_be_spelled_SetUp* testing::Test::Setup</definition>
        <argsstring>()</argsstring>
        <name>Setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="474" column="41" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="474" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1afc75dfea37533866035b0d97cd11483e" prot="package" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>testing::Test::~Test</definition>
        <argsstring>()</argsstring>
        <name>~Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="381" column="11" bodyfile="lib/googletest/src/gtest.cc" bodystart="2221" bodyend="2222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef kind="function" id="classtesting_1_1Test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::Test::HasFailure</definition>
        <argsstring>()</argsstring>
        <name>HasFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="407" column="15" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="407" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1aa8d0725cfb519f82eaf4fd2d2f46d97d" prot="package" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::Test::HasFatalFailure</definition>
        <argsstring>()</argsstring>
        <name>HasFatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="400" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2487" bodyend="2489"/>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1aba3caef4ad23ce98be80250aeb0cc787" compoundref="gtest_8cc" startline="4932" endline="4935">testing::internal::UnitTestImpl::current_test_result</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">testing::internal::GetUnitTestImpl</references>
        <references refid="classtesting_1_1TestResult_1a30e00d4076ae07fb5ad7b623d9dc1fe4" compoundref="gtest_8cc" startline="2184" endline="2186">testing::TestResult::HasFatalFailure</references>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a3b933cea62eff67a05e23aa07f38bf29" prot="package" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::Test::HasNonfatalFailure</definition>
        <argsstring>()</argsstring>
        <name>HasNonfatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="403" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2492" bodyend="2495"/>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1aba3caef4ad23ce98be80250aeb0cc787" compoundref="gtest_8cc" startline="4932" endline="4935">testing::internal::UnitTestImpl::current_test_result</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">testing::internal::GetUnitTestImpl</references>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a7b20a48c0bbc9dd1fe96715e4a5c0164" prot="package" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::Test::RecordProperty</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="422" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2237" bodyend="2239"/>
        <references refid="classtesting_1_1UnitTest_1a24192400b70b3b946746954e9574fb8e" compoundref="gtest_8cc" startline="3972" endline="3991">testing::UnitTest::GetInstance</references>
        <references refid="classtesting_1_1UnitTest_1a2c96a4a02c34095e07c6999e7686367f" compoundref="gtest_8cc" startline="4175" endline="4178">testing::UnitTest::RecordProperty</references>
        <referencedby refid="classtesting_1_1Test_1afb8d29af28e48dc65b2b743f1874ccfe" compoundref="gtest_8cc" startline="2242" endline="2246">RecordProperty</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1afb8d29af28e48dc65b2b743f1874ccfe" prot="package" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::Test::RecordProperty</definition>
        <argsstring>(const std::string &amp;key, int value)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="423" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2242" bodyend="2246"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <references refid="classtesting_1_1Test_1a7b20a48c0bbc9dd1fe96715e4a5c0164" compoundref="gtest_8cc" startline="2237" endline="2239">RecordProperty</references>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::Test::SetUpTestCase</definition>
        <argsstring>()</argsstring>
        <name>SetUpTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="389" column="15" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="package" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::Test::TearDownTestCase</definition>
        <argsstring>()</argsstring>
        <name>TearDownTestCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="397" column="15" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="397" bodyend="397"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtesting_1_1Test_1a57a4116f39f6636a80710ded7d42e889" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void testing::Test::SetUp</definition>
        <argsstring>()</argsstring>
        <name>SetUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="430" column="16" bodyfile="lib/googletest/src/gtest.cc" bodystart="2227" bodyend="2228"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a2889fd829b6c712d98fb3896d28f64a3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void testing::Test::TearDown</definition>
        <argsstring>()</argsstring>
        <name>TearDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="433" column="16" bodyfile="lib/googletest/src/gtest.cc" bodystart="2233" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a68b7618abd1fc6d13382738b0d3b5c7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::Test::Test</definition>
        <argsstring>()</argsstring>
        <name>Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="427" column="3" bodyfile="lib/googletest/src/gtest.cc" bodystart="2214" bodyend="2216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1Test_1a5daca5a35e33e8fbdf36b7b666668b34" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::Test::HasSameFixtureClass</definition>
        <argsstring>()</argsstring>
        <name>HasSameFixtureClass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="438" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2269" bodyend="2328"/>
        <references refid="gtest_8h_1adc16b5b0a740c39084ea5c9e960e3063" compoundref="gtest_8h" startline="1808">ADD_FAILURE</references>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1ae1f98925197cf344a23a7400deeee4dc" compoundref="gtest-internal-inl_8h" startline="733" endline="733">testing::internal::UnitTestImpl::current_test_case</references>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1a8d303ebdcf5989e96d3ed96fb7255102" compoundref="gtest-internal-inl_8h" startline="734" endline="734">testing::internal::UnitTestImpl::current_test_info</references>
        <references refid="namespacetesting_1_1internal_1a1e85cf16bb95b60f879d48ba1fbfc1c9" compoundref="gtest_8cc" startline="620" endline="622">testing::internal::GetTestTypeId</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">testing::internal::GetUnitTestImpl</references>
        <references refid="classtesting_1_1TestInfo_1afa5d6513647d3c56f190065584133ab0" compoundref="gtest_8h" startline="717">testing::TestInfo::name</references>
        <references refid="classtesting_1_1TestInfo_1a036a20710c8c2252889544daba9a8ff9" compoundref="gtest_8h" startline="651" endline="651">testing::TestInfo::test_case_name</references>
        <references refid="classtesting_1_1TestCase_1adbfcf952eb18dc82d4b20f6bc31aee04" compoundref="gtest_8h" startline="856" endline="856">testing::TestCase::test_info_list</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1Test_1a3116f1f98ac889b11f1e3d981b8c6ca1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::Test::DeleteSelf_</definition>
        <argsstring>()</argsstring>
        <name>DeleteSelf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="453" column="8" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="453" bodyend="453"/>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a939ae280a6f2f1c3d43708ec616684ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::Test::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="449" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2465" bodyend="2484"/>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">testing::internal::GetUnitTestImpl</references>
        <references refid="namespacetesting_1_1internal_1addb2ed165b92b74e25fe9ebe9e46b9f9" compoundref="gtest_8cc" startline="2410" endline="2460">testing::internal::HandleExceptionsInMethodIfSupported</references>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1a71753679854f7fbba6c1568eb422fecb" compoundref="gtest_8cc" startline="4918" endline="4928">testing::internal::UnitTestImpl::os_stack_trace_getter</references>
        <references refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a791bd120428b5a53d5eeba1b27296a39">testing::internal::OsStackTraceGetterInterface::UponLeavingGTest</references>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1Test_1a146a4a5d9854e676d625a0ef67409794" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void testing::Test::TestBody</definition>
        <argsstring>()=0</argsstring>
        <name>TestBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="446" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>testing::Test</label>
        <link refid="classtesting_1_1Test"/>
      </node>
    </collaborationgraph>
    <location file="lib/googletest/include/gtest/gtest.h" line="371" column="1" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="371" bodyend="478"/>
    <listofallmembers>
      <member refid="classtesting_1_1Test_1a63782796b486177d406ecc55a978fccc" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>__pad0__</name></member>
      <member refid="classtesting_1_1Test_1a11d67dfd180c2d33e5f3cafb11b843a4" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>__pad1__</name></member>
      <member refid="classtesting_1_1Test_1a313d292a9982b2895c1987b9b7dccc44" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>__pad2__</name></member>
      <member refid="classtesting_1_1Test_1a3116f1f98ac889b11f1e3d981b8c6ca1" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>DeleteSelf_</name></member>
      <member refid="classtesting_1_1Test_1a5d18da7437b0d6ca32dcad90a21f9b6b" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1Test_1a7a00be7dd0a6bfdc8d47a1b784623613" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>HasFailure</name></member>
      <member refid="classtesting_1_1Test_1aa8d0725cfb519f82eaf4fd2d2f46d97d" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a3b933cea62eff67a05e23aa07f38bf29" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1Test_1a5daca5a35e33e8fbdf36b7b666668b34" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>HasSameFixtureClass</name></member>
      <member refid="classtesting_1_1Test_1a7b20a48c0bbc9dd1fe96715e4a5c0164" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1Test_1afb8d29af28e48dc65b2b743f1874ccfe" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1Test_1a939ae280a6f2f1c3d43708ec616684ed" prot="private" virt="non-virtual"><scope>testing::Test</scope><name>Run</name></member>
      <member refid="classtesting_1_1Test_1a65c1626d50b7dd1a1d759dc6c3f72d4c" prot="package" virt="virtual"><scope>testing::Test</scope><name>Setup</name></member>
      <member refid="classtesting_1_1Test_1a57a4116f39f6636a80710ded7d42e889" prot="protected" virt="virtual"><scope>testing::Test</scope><name>SetUp</name></member>
      <member refid="classtesting_1_1Test_1a5ccbac42fee8c5b00b0bfe89b6c49d79" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>SetUpTestCase</name></member>
      <member refid="classtesting_1_1Test_1a2889fd829b6c712d98fb3896d28f64a3" prot="protected" virt="virtual"><scope>testing::Test</scope><name>TearDown</name></member>
      <member refid="classtesting_1_1Test_1af374706cbaf0ffc460f4fd04e7c150f1" prot="package" virt="non-virtual"><scope>testing::Test</scope><name>TearDownTestCase</name></member>
      <member refid="classtesting_1_1Test_1a68b7618abd1fc6d13382738b0d3b5c7c" prot="protected" virt="non-virtual"><scope>testing::Test</scope><name>Test</name></member>
      <member refid="classtesting_1_1Test_1a146a4a5d9854e676d625a0ef67409794" prot="private" virt="pure-virtual"><scope>testing::Test</scope><name>TestBody</name></member>
      <member refid="classtesting_1_1Test_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="public" virt="non-virtual"><scope>testing::Test</scope><name>TestInfo</name></member>
      <member refid="classtesting_1_1Test_1afc75dfea37533866035b0d97cd11483e" prot="package" virt="virtual"><scope>testing::Test</scope><name>~Test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

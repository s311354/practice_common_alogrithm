<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtesting_1_1TestResult" kind="class" language="C++" prot="package">
    <compoundname>testing::TestResult</compoundname>
    <includes refid="gtest_8h" local="no">gtest.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtesting_1_1TestResult_1abae39633da9932847b41cb80efd62115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::DefaultGlobalTestPartResultReporter</definition>
        <argsstring></argsstring>
        <name>internal::DefaultGlobalTestPartResultReporter</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" kindref="compound">internal::DefaultGlobalTestPartResultReporter</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="567" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1adf5553cae6aea6f8648d47e299237e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::ExecDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::ExecDeathTest</name>
        <param>
          <type>internal::ExecDeathTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="568" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::TestResultAccessor</definition>
        <argsstring></argsstring>
        <name>internal::TestResultAccessor</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1TestResultAccessor" kindref="compound">internal::TestResultAccessor</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="569" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::UnitTestImpl</definition>
        <argsstring></argsstring>
        <name>internal::UnitTestImpl</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">internal::UnitTestImpl</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="570" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class internal::WindowsDeathTest</definition>
        <argsstring></argsstring>
        <name>internal::WindowsDeathTest</name>
        <param>
          <type>internal::WindowsDeathTest</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="571" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1aff779e55b06adfa7c0088bd10253f0f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TestCase</definition>
        <argsstring></argsstring>
        <name>TestCase</name>
        <param>
          <type><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="565" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TestInfo</definition>
        <argsstring></argsstring>
        <name>TestInfo</name>
        <param>
          <type><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="564" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtesting_1_1TestResult_1a832b4d233efee1a32feb0f4190b30d39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class UnitTest</definition>
        <argsstring></argsstring>
        <name>UnitTest</name>
        <param>
          <type><ref refid="classtesting_1_1UnitTest" kindref="compound">UnitTest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="566" column="3" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesting_1_1TestResult_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count_</definition>
        <argsstring></argsstring>
        <name>death_test_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="625" column="7" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="625" bodyend="-1"/>
        <referencedby refid="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" compoundref="gtest_8cc" startline="2162" endline="2167">Clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1TestResult_1a739a8ca54db4be004ba748b11e82b056" prot="private" static="no" mutable="no">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time_</definition>
        <argsstring></argsstring>
        <name>elapsed_time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="627" column="16" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="627" bodyend="-1"/>
        <referencedby refid="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" compoundref="gtest_8cc" startline="2162" endline="2167">Clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &gt;</type>
        <definition>std::vector&lt;TestPartResult&gt; testing::TestResult::test_part_results_</definition>
        <argsstring></argsstring>
        <name>test_part_results_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="621" column="15" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="621" bodyend="-1"/>
        <referencedby refid="classtesting_1_1TestResult_1ac28e9821ad3e9314c4fe41b119c5b44d" compoundref="gtest_8cc" startline="2050" endline="2052">AddTestPartResult</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" compoundref="gtest_8cc" startline="2162" endline="2167">Clear</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1aa11ed718e0a76a39e6380e5ddce7cae2" compoundref="gtest_8cc" startline="2045" endline="2047">ClearTestPartResults</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" compoundref="gtest_8cc" startline="2029" endline="2033">GetTestPartResult</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a30e00d4076ae07fb5ad7b623d9dc1fe4" compoundref="gtest_8cc" startline="2184" endline="2186">HasFatalFailure</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a510564fa67b485ed4589a259f2a032d6" compoundref="gtest_8cc" startline="2194" endline="2196">HasNonfatalFailure</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a6174aa4019dcda7c34d776b5741c9032" compoundref="gtest_8cc" startline="2200" endline="2202">total_part_count</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1TestResult_1a58d7d97bd16a04b932e2863153c13dff" prot="private" static="no" mutable="no">
        <type><ref refid="classtesting_1_1internal_1_1Mutex" kindref="compound">internal::Mutex</ref></type>
        <definition>internal::Mutex testing::TestResult::test_properites_mutex_</definition>
        <argsstring></argsstring>
        <name>test_properites_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="618" column="19" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="618" bodyend="-1"/>
        <referencedby refid="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" compoundref="gtest_8cc" startline="2057" endline="2071">RecordProperty</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref> &gt;</type>
        <definition>std::vector&lt;TestProperty&gt; testing::TestResult::test_properties_</definition>
        <argsstring></argsstring>
        <name>test_properties_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="623" column="15" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="623" bodyend="-1"/>
        <referencedby refid="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" compoundref="gtest_8cc" startline="2162" endline="2167">Clear</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a6c2f478dbce36b57d18bedded46d70af" compoundref="gtest_8cc" startline="2038" endline="2042">GetTestProperty</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" compoundref="gtest_8cc" startline="2057" endline="2071">RecordProperty</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1afe4523257bbea8bc63b0950b702790be" compoundref="gtest_8cc" startline="2205" endline="2207">test_property_count</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesting_1_1TestResult_1a717e05e00d4af5cb809433e343ab63af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TimeInMillis</type>
        <definition>TimeInMillis testing::TestResult::elapsed_time</definition>
        <argsstring>() const</argsstring>
        <name>elapsed_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="551" column="16" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="551" bodyend="551"/>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1af642843faed4cd28c77d688f6f2820d7" compoundref="gtest_8cc" startline="3625" endline="3672">testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1afacc37e8b43c8574e4101bc61723c769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Failed</definition>
        <argsstring>() const</argsstring>
        <name>Failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="542" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2170" bodyend="2176"/>
        <references refid="classtesting_1_1TestPartResult_1aa04b377c3e7ed57d39e882df5561ac90" compoundref="gtest-test-part_8h" startline="94" endline="94">testing::TestPartResult::failed</references>
        <references refid="classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" compoundref="gtest_8cc" startline="2029" endline="2033">GetTestPartResult</references>
        <references refid="classtesting_1_1TestResult_1a6174aa4019dcda7c34d776b5741c9032" compoundref="gtest_8cc" startline="2200" endline="2202">total_part_count</references>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a5922884cb8b4819e869146dc315a1ac1" compoundref="gtest_8h" startline="899" endline="901">testing::TestCase::TestFailed</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &amp;</type>
        <definition>const TestPartResult &amp; testing::TestResult::GetTestPartResult</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestPartResult</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="556" column="24" bodyfile="lib/googletest/src/gtest.cc" bodystart="2029" bodyend="2033"/>
        <references refid="namespacetesting_1_1internal_1_1posix_1a69b8278c59359dd6a6f941b4643db9fb" compoundref="gtest-port_8h" startline="2410" endline="2410">testing::internal::posix::Abort</references>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <references refid="classtesting_1_1TestResult_1a6174aa4019dcda7c34d776b5741c9032" compoundref="gtest_8cc" startline="2200" endline="2202">total_part_count</references>
        <referencedby refid="classtesting_1_1TestResult_1afacc37e8b43c8574e4101bc61723c769" compoundref="gtest_8cc" startline="2170" endline="2176">Failed</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1af642843faed4cd28c77d688f6f2820d7" compoundref="gtest_8cc" startline="3625" endline="3672">testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a6c2f478dbce36b57d18bedded46d70af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref> &amp;</type>
        <definition>const TestProperty &amp; testing::TestResult::GetTestProperty</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetTestProperty</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="561" column="22" bodyfile="lib/googletest/src/gtest.cc" bodystart="2038" bodyend="2042"/>
        <references refid="namespacetesting_1_1internal_1_1posix_1a69b8278c59359dd6a6f941b4643db9fb" compoundref="gtest-port_8h" startline="2410" endline="2410">testing::internal::posix::Abort</references>
        <references refid="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" compoundref="gtest_8h" startline="623">test_properties_</references>
        <references refid="classtesting_1_1TestResult_1afe4523257bbea8bc63b0950b702790be" compoundref="gtest_8cc" startline="2205" endline="2207">test_property_count</references>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1aaac4f1352a2cc46f6a69994d45999f0b" compoundref="gtest_8cc" startline="3741" endline="3750">testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasFatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasFatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="545" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2184" bodyend="2186"/>
        <references refid="namespacetesting_1_1internal_1a1e77a774d910346eff11a86d8df783a5" compoundref="gtest-internal-inl_8h" startline="283" endline="292">testing::internal::CountIf</references>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <references refid="namespacetesting_1a9f19442d566c7eaec0702b9fcf282b63" compoundref="gtest_8cc" startline="2179" endline="2181">testing::TestPartFatallyFailed</references>
        <referencedby refid="classtesting_1_1Test_1aa8d0725cfb519f82eaf4fd2d2f46d97d" compoundref="gtest_8cc" startline="2487" endline="2489">testing::Test::HasFatalFailure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a510564fa67b485ed4589a259f2a032d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::HasNonfatalFailure</definition>
        <argsstring>() const</argsstring>
        <name>HasNonfatalFailure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="548" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2194" bodyend="2196"/>
        <references refid="namespacetesting_1_1internal_1a1e77a774d910346eff11a86d8df783a5" compoundref="gtest-internal-inl_8h" startline="283" endline="292">testing::internal::CountIf</references>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <references refid="namespacetesting_1af256d104ca665115eb291f762bb659e3" compoundref="gtest_8cc" startline="2189" endline="2191">testing::TestPartNonfatallyFailed</references>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::Passed</definition>
        <argsstring>() const</argsstring>
        <name>Passed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="539" column="8" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="539" bodyend="539"/>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1aca5a9dc08998948e293b307d931b3f86" compoundref="gtest_8cc" startline="3169" endline="3191">testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1ad8d9e1ebc410000b679002ba71d78686" compoundref="gtest_8h" startline="894" endline="896">testing::TestCase::TestPassed</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1afe4523257bbea8bc63b0950b702790be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::test_property_count</definition>
        <argsstring>() const</argsstring>
        <name>test_property_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="536" column="7" bodyfile="lib/googletest/src/gtest.cc" bodystart="2205" bodyend="2207"/>
        <references refid="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" compoundref="gtest_8h" startline="623">test_properties_</references>
        <referencedby refid="classtesting_1_1TestResult_1a6c2f478dbce36b57d18bedded46d70af" compoundref="gtest_8cc" startline="2038" endline="2042">GetTestProperty</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1aaac4f1352a2cc46f6a69994d45999f0b" compoundref="gtest_8cc" startline="3741" endline="3750">testing::internal::XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::TestResult</definition>
        <argsstring>()</argsstring>
        <name>TestResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="526" column="3" bodyfile="lib/googletest/src/gtest.cc" bodystart="2017" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a6174aa4019dcda7c34d776b5741c9032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::total_part_count</definition>
        <argsstring>() const</argsstring>
        <name>total_part_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="533" column="7" bodyfile="lib/googletest/src/gtest.cc" bodystart="2200" bodyend="2202"/>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <referencedby refid="classtesting_1_1TestResult_1afacc37e8b43c8574e4101bc61723c769" compoundref="gtest_8cc" startline="2170" endline="2176">Failed</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" compoundref="gtest_8cc" startline="2029" endline="2033">GetTestPartResult</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1af642843faed4cd28c77d688f6f2820d7" compoundref="gtest_8cc" startline="3625" endline="3672">testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a41f407680b725b75d7eadc3230bc3315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::~TestResult</definition>
        <argsstring>()</argsstring>
        <name>~TestResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="529" column="3" bodyfile="lib/googletest/src/gtest.cc" bodystart="2023" bodyend="2024"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesting_1_1TestResult_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::AddTestPartResult</definition>
        <argsstring>(const TestPartResult &amp;test_part_result)</argsstring>
        <name>AddTestPartResult</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &amp;</type>
          <declname>test_part_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="602" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2050" bodyend="2052"/>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <referencedby refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1a6081576a23b964cfecab1e424d8044fc" compoundref="gtest_8cc" startline="689" endline="693">testing::internal::DefaultGlobalTestPartResultReporter::ReportTestPartResult</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="614" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2162" bodyend="2167"/>
        <references refid="classtesting_1_1TestResult_1a3810b34e68f5dca9ad1237a5bde7fa21" compoundref="gtest_8h" startline="625">death_test_count_</references>
        <references refid="classtesting_1_1TestResult_1a739a8ca54db4be004ba748b11e82b056" compoundref="gtest_8h" startline="627">elapsed_time_</references>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <references refid="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" compoundref="gtest_8h" startline="623">test_properties_</references>
        <referencedby refid="classtesting_1_1TestCase_1a4d0498738f8903130a8d0400932e8b54" compoundref="gtest_8cc" startline="2787" endline="2790">testing::TestCase::ClearResult</referencedby>
        <referencedby refid="classtesting_1_1TestInfo_1ac6d80865a3e68478aaf167058e6ca5c2" compoundref="gtest_8h" startline="746" endline="748">testing::TestInfo::ClearTestResult</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::ClearTestPartResults</definition>
        <argsstring>()</argsstring>
        <name>ClearTestPartResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="611" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2045" bodyend="2047"/>
        <references refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" compoundref="gtest_8h" startline="621">test_part_results_</references>
        <referencedby refid="classtesting_1_1internal_1_1TestResultAccessor_1a53c626632bac65d82d88e432072b866b" compoundref="gtest-internal-inl_8h" startline="1022" endline="1024">testing::internal::TestResultAccessor::ClearTestPartResults</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a827cb78135ac375d81d89ffedc3eca52" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::death_test_count</definition>
        <argsstring>() const</argsstring>
        <name>death_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="605" column="7" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="605" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1ad04e1d5d9eb623ba1d9fc82cdff43af4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::TestResult::GTEST_DISALLOW_COPY_AND_ASSIGN_</definition>
        <argsstring>(TestResult)</argsstring>
        <name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name>
        <param>
          <type><ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="630" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::TestResult::increment_death_test_count</definition>
        <argsstring>()</argsstring>
        <name>increment_death_test_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="608" column="7" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="608" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::RecordProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>RecordProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="592" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2057" bodyend="2071"/>
        <references refid="cpp/algorithm/find_1">std::find_if</references>
        <references refid="classtesting_1_1TestProperty_1ad60435d4ad04ac030487d8998fc61c5f" compoundref="gtest_8h" startline="496" endline="498">testing::TestProperty::key</references>
        <references refid="classtesting_1_1TestResult_1a58d7d97bd16a04b932e2863153c13dff" compoundref="gtest_8h" startline="618">test_properites_mutex_</references>
        <references refid="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" compoundref="gtest_8h" startline="623">test_properties_</references>
        <references refid="classtesting_1_1TestResult_1a818c06cd2bfc00d6c81b0cebca044cb1" compoundref="gtest_8cc" startline="2155" endline="2159">ValidateTestProperty</references>
        <references refid="classtesting_1_1TestProperty_1ad423a07af33c88b0c9ed33ee74815a63" compoundref="gtest_8h" startline="501" endline="503">testing::TestProperty::value</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a15e4af4df167d2504decbc8fcc108a6f" compoundref="gtest_8cc" startline="4372" endline="4387">testing::internal::UnitTestImpl::RecordProperty</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1TestResultAccessor_1abcc4b32d1b201eeef92f0ec0ae161cf9" compoundref="gtest-internal-inl_8h" startline="1016" endline="1020">testing::internal::TestResultAccessor::RecordProperty</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1aa345325e5dea41609d17d7c614bf2b18" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::TestResult::set_elapsed_time</definition>
        <argsstring>(TimeInMillis elapsed)</argsstring>
        <name>set_elapsed_time</name>
        <param>
          <type>TimeInMillis</type>
          <declname>elapsed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="584" column="8" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="584" bodyend="584"/>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a2964c3a12ef6ef9bcb47599374514432" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;TestPartResult&gt;&amp; testing::TestResult::test_part_results</definition>
        <argsstring>() const</argsstring>
        <name>test_part_results</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="574" column="21" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="574" bodyend="576"/>
        <referencedby refid="classtesting_1_1internal_1_1TestResultAccessor_1a55d771904317c1b0cc380104d175f1db" compoundref="gtest-internal-inl_8h" startline="1026" endline="1029">testing::internal::TestResultAccessor::test_part_results</referencedby>
      </memberdef>
      <memberdef kind="function" id="classtesting_1_1TestResult_1a8c94e8e89c616abe5d33024a6b54f218" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;TestProperty&gt;&amp; testing::TestResult::test_properties</definition>
        <argsstring>() const</argsstring>
        <name>test_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="579" column="21" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="579" bodyend="581"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classtesting_1_1TestResult_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::TestResult::ValidateTestProperty</definition>
        <argsstring>(const std::string &amp;xml_element, const TestProperty &amp;test_property)</argsstring>
        <name>ValidateTestProperty</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>xml_element</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref> &amp;</type>
          <declname>test_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="598" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="2155" bodyend="2159"/>
        <references refid="namespacetesting_1acb3fdfadf475a3c2f5e22a3dae73532a" compoundref="gtest_8cc" startline="2112" endline="2125">testing::GetReservedAttributesForElement</references>
        <references refid="classtesting_1_1TestProperty_1ad60435d4ad04ac030487d8998fc61c5f" compoundref="gtest_8h" startline="496" endline="498">testing::TestProperty::key</references>
        <references refid="namespacetesting_1a4c9bd414747bf0563bfdb32a2307dcdf" compoundref="gtest_8cc" startline="2141" endline="2151">testing::ValidateTestPropertyName</references>
        <referencedby refid="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" compoundref="gtest_8cc" startline="2057" endline="2071">RecordProperty</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>T</label>
      </node>
      <node id="7">
        <label>std::vector&lt; T &gt;</label>
        <link refid="cpp/container/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
        <childnode refid="8" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
        <link refid="cpp/string/basic_string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="9">
        <label>testing::internal::Mutex</label>
        <link refid="classtesting_1_1internal_1_1Mutex"/>
      </node>
      <node id="5">
        <label>std::basic_string&lt; char &gt;</label>
        <link refid="cpp/string/basic_string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; char &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>testing::TestResult</label>
        <link refid="classtesting_1_1TestResult"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-test_part_results_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-test_properites_mutex_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-test_properties_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>testing::TestProperty</label>
        <link refid="classtesting_1_1TestProperty"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-key_</edgelabel>
          <edgelabel>-value_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>testing::TestPartResult</label>
        <link refid="classtesting_1_1TestPartResult"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-file_name_</edgelabel>
          <edgelabel>-message_</edgelabel>
          <edgelabel>-summary_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; testing::TestPartResult &gt;</label>
        <link refid="cpp/container/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; testing::TestPartResult &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; testing::TestProperty &gt;</label>
        <link refid="cpp/container/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; testing::TestProperty &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <link refid="cpp/string/basic_string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="lib/googletest/include/gtest/gtest.h" line="523" column="1" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="523" bodyend="631"/>
    <listofallmembers>
      <member refid="classtesting_1_1TestResult_1ac28e9821ad3e9314c4fe41b119c5b44d" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>AddTestPartResult</name></member>
      <member refid="classtesting_1_1TestResult_1a5371bc2e69435b4cb1fdad9ca81759a6" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>Clear</name></member>
      <member refid="classtesting_1_1TestResult_1aa11ed718e0a76a39e6380e5ddce7cae2" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>ClearTestPartResults</name></member>
      <member refid="classtesting_1_1TestResult_1a827cb78135ac375d81d89ffedc3eca52" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>death_test_count</name></member>
      <member refid="classtesting_1_1TestResult_1a3810b34e68f5dca9ad1237a5bde7fa21" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>death_test_count_</name></member>
      <member refid="classtesting_1_1TestResult_1a717e05e00d4af5cb809433e343ab63af" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>elapsed_time</name></member>
      <member refid="classtesting_1_1TestResult_1a739a8ca54db4be004ba748b11e82b056" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>elapsed_time_</name></member>
      <member refid="classtesting_1_1TestResult_1afacc37e8b43c8574e4101bc61723c769" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>Failed</name></member>
      <member refid="classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>GetTestPartResult</name></member>
      <member refid="classtesting_1_1TestResult_1a6c2f478dbce36b57d18bedded46d70af" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>GetTestProperty</name></member>
      <member refid="classtesting_1_1TestResult_1ad04e1d5d9eb623ba1d9fc82cdff43af4" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>GTEST_DISALLOW_COPY_AND_ASSIGN_</name></member>
      <member refid="classtesting_1_1TestResult_1a30e00d4076ae07fb5ad7b623d9dc1fe4" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>HasFatalFailure</name></member>
      <member refid="classtesting_1_1TestResult_1a510564fa67b485ed4589a259f2a032d6" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>HasNonfatalFailure</name></member>
      <member refid="classtesting_1_1TestResult_1a07faaa1d16a991f34222d02e10c75dc2" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>increment_death_test_count</name></member>
      <member refid="classtesting_1_1TestResult_1abae39633da9932847b41cb80efd62115" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::DefaultGlobalTestPartResultReporter</name></member>
      <member refid="classtesting_1_1TestResult_1adf5553cae6aea6f8648d47e299237e34" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::ExecDeathTest</name></member>
      <member refid="classtesting_1_1TestResult_1ae762da04e74a0d3b0daded3c5bd4a8e8" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::TestResultAccessor</name></member>
      <member refid="classtesting_1_1TestResult_1acc0a5e7573fd6ae7ad1878613bb86853" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::UnitTestImpl</name></member>
      <member refid="classtesting_1_1TestResult_1a6aeedc04a0590fcc1b3c5f687dbb0f9f" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>internal::WindowsDeathTest</name></member>
      <member refid="classtesting_1_1TestResult_1acf7e6e72f05a0545c48ea48e7f8851df" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>Passed</name></member>
      <member refid="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>RecordProperty</name></member>
      <member refid="classtesting_1_1TestResult_1aa345325e5dea41609d17d7c614bf2b18" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>set_elapsed_time</name></member>
      <member refid="classtesting_1_1TestResult_1a2964c3a12ef6ef9bcb47599374514432" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_part_results</name></member>
      <member refid="classtesting_1_1TestResult_1af17c00fae1435d344b318eb6bbb56cff" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_part_results_</name></member>
      <member refid="classtesting_1_1TestResult_1a58d7d97bd16a04b932e2863153c13dff" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properites_mutex_</name></member>
      <member refid="classtesting_1_1TestResult_1a8c94e8e89c616abe5d33024a6b54f218" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properties</name></member>
      <member refid="classtesting_1_1TestResult_1a29cde491988faff4ef2d9f9b6c13d9fa" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>test_properties_</name></member>
      <member refid="classtesting_1_1TestResult_1afe4523257bbea8bc63b0950b702790be" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>test_property_count</name></member>
      <member refid="classtesting_1_1TestResult_1aff779e55b06adfa7c0088bd10253f0f0" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>TestCase</name></member>
      <member refid="classtesting_1_1TestResult_1a4c49c2cdb6c328e6b709b4542f23de3c" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>TestInfo</name></member>
      <member refid="classtesting_1_1TestResult_1a5cf5dd6f416b7334ea601aab21a2fda5" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>TestResult</name></member>
      <member refid="classtesting_1_1TestResult_1a6174aa4019dcda7c34d776b5741c9032" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>total_part_count</name></member>
      <member refid="classtesting_1_1TestResult_1a832b4d233efee1a32feb0f4190b30d39" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>UnitTest</name></member>
      <member refid="classtesting_1_1TestResult_1a818c06cd2bfc00d6c81b0cebca044cb1" prot="private" virt="non-virtual"><scope>testing::TestResult</scope><name>ValidateTestProperty</name></member>
      <member refid="classtesting_1_1TestResult_1a41f407680b725b75d7eadc3230bc3315" prot="public" virt="non-virtual"><scope>testing::TestResult</scope><name>~TestResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

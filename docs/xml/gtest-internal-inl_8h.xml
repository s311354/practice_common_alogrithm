<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="gtest-internal-inl_8h" kind="file" language="C++">
    <compoundname>gtest-internal-inl.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="gtest-port_8h" local="yes">gtest/internal/gtest-port.h</includes>
    <includes refid="gtest_8h" local="yes">gtest/gtest.h</includes>
    <includes refid="gtest-spi_8h" local="yes">gtest/gtest-spi.h</includes>
    <includedby refid="gtest-death-test_8cc" local="yes">lib/googletest/src/gtest-death-test.cc</includedby>
    <includedby refid="gtest-test-part_8cc" local="yes">lib/googletest/src/gtest-test-part.cc</includedby>
    <includedby refid="gtest-port_8cc" local="yes">lib/googletest/src/gtest-port.cc</includedby>
    <includedby refid="gtest_8cc" local="yes">lib/googletest/src/gtest.cc</includedby>
    <incdepgraph>
      <node id="13">
        <label>sys/stat.h</label>
      </node>
      <node id="39">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="gtest-param-util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>gtest/gtest.h</label>
        <link refid="gtest_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>typeinfo</label>
        <link refid="cpp/header/typeinfo" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>lib/googletest/src/gtest-internal-inl.h</label>
        <link refid="gtest-internal-inl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>assert.h</label>
      </node>
      <node id="28">
        <label>float.h</label>
      </node>
      <node id="46">
        <label>gtest/gtest_prod.h</label>
        <link refid="gtest__prod_8h"/>
      </node>
      <node id="17">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="gtest-port-arch_8h"/>
      </node>
      <node id="26">
        <label>ostream</label>
        <link refid="cpp/header/ostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="34">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="gtest-filepath_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="45">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="gtest-param-util-generated_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>errno.h</label>
      </node>
      <node id="29">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="31">
        <label>set</label>
        <link refid="cpp/header/set" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="33">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="gtest-string_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="gtest-internal_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gtest/gtest-death-test.h</label>
        <link refid="gtest-death-test_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="23">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="gtest-tuple_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="48">
        <label>iosfwd</label>
        <link refid="cpp/header/iosfwd" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="35">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="gtest-type-util_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="12">
        <label>sys/types.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="gtest-port_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="gtest-typed-test_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="internal_2custom_2gtest-printers_8h"/>
      </node>
      <node id="19">
        <label>unistd.h</label>
      </node>
      <node id="25">
        <label>limits</label>
        <link refid="cpp/header/limits" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>utility</label>
        <link refid="cpp/header/utility" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="37">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="gtest-death-test-internal_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
        <link refid="cpp/header/string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="32">
        <label>gtest/gtest-message.h</label>
        <link refid="gtest-message_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>strings.h</label>
      </node>
      <node id="40">
        <label>iterator</label>
        <link refid="cpp/header/iterator" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>ctype.h</label>
      </node>
      <node id="51">
        <label>gtest/gtest-spi.h</label>
        <link refid="gtest-spi_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="50">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="gtest__pred__impl_8h"/>
      </node>
      <node id="47">
        <label>gtest/gtest-test-part.h</label>
        <link refid="gtest-test-part_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gtest/gtest-param-test.h</label>
        <link refid="gtest-param-test_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="41">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="gtest-linked__ptr_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>regex.h</label>
      </node>
      <node id="18">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="custom_2gtest-port_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="43">
        <label>gtest/gtest-printers.h</label>
        <link refid="gtest-printers_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>map</label>
        <link refid="cpp/header/map" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>lib/googletest/src/gtest-internal-inl.h</label>
        <link refid="gtest-internal-inl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/googletest/src/gtest-all.cc</label>
        <link refid="gtest-all_8cc"/>
      </node>
      <node id="2">
        <label>lib/googletest/src/gtest-death-test.cc</label>
        <link refid="gtest-death-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/googletest/src/gtest.cc</label>
        <link refid="gtest_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/googletest/src/gtest-test-part.cc</label>
        <link refid="gtest-test-part_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lib/googletest/src/gtest-port.cc</label>
        <link refid="gtest-port_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" prot="public">testing::internal::DefaultGlobalTestPartResultReporter</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter" prot="public">testing::internal::DefaultPerThreadTestPartResultReporter</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TestResultAccessor" prot="public">testing::internal::TestResultAccessor</innerclass>
    <innerclass refid="structtesting_1_1internal_1_1TraceInfo" prot="public">testing::internal::TraceInfo</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1UnitTestImpl" prot="public">testing::internal::UnitTestImpl</innerclass>
    <innernamespace refid="namespacetesting">testing</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal">testing::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2005,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utility<sp/>functions<sp/>and<sp/>classes<sp/>used<sp/>by<sp/>the<sp/>Google<sp/>C++<sp/>testing<sp/>framework.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>purely<sp/>Google<sp/>Test&apos;s<sp/>internal<sp/>implementation.<sp/><sp/>Please</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DO<sp/>NOT<sp/>#INCLUDE<sp/>IT<sp/>IN<sp/>A<sp/>USER<sp/>PROGRAM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_SRC_GTEST_INTERNAL_INL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_SRC_GTEST_INTERNAL_INL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GTEST_IMPLEMENTATION_<sp/>is<sp/>defined<sp/>to<sp/>1<sp/>iff<sp/>the<sp/>current<sp/>translation<sp/>unit<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>Google<sp/>Test&apos;s<sp/>implementation;<sp/>otherwise<sp/>it&apos;s<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!GTEST_IMPLEMENTATION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>file<sp/>is<sp/>included<sp/>from<sp/>the<sp/>user&apos;s<sp/>code,<sp/>just<sp/>say<sp/>no.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>&quot;gtest-internal-inl.h<sp/>is<sp/>part<sp/>of<sp/>Google<sp/>Test&apos;s<sp/>internal<sp/>implementation.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>&quot;It<sp/>must<sp/>not<sp/>be<sp/>included<sp/>except<sp/>by<sp/>Google<sp/>Test<sp/>itself.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_IMPLEMENTATION_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32_WCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!_WIN32_WCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>strtoll/_strtoul64/malloc/free.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>memmove.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/algorithm" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">algorithm</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">string</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cpp/header/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">vector</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gtest-port_8h" kindref="compound">gtest/internal/gtest-port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_CAN_STREAM_RESULTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;netdb.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gtest_8h" kindref="compound">gtest/gtest.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gtest-spi_8h" kindref="compound">gtest/gtest-spi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declares<sp/>the<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>the<sp/>users<sp/>to<sp/>modify<sp/>this<sp/>flag<sp/>in<sp/>the<sp/>code,<sp/>but<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test&apos;s<sp/>own<sp/>unit<sp/>tests<sp/>to<sp/>be<sp/>able<sp/>to<sp/>access<sp/>it.<sp/>Therefore<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>declare<sp/>it<sp/>here<sp/>as<sp/>opposed<sp/>to<sp/>in<sp/>gtest.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="namespacetesting_1a534f0743e7c42c55d27dcd0dd3d38f18" refkind="member"><highlight class="normal"><ref refid="namespacetesting_1a534f0743e7c42c55d27dcd0dd3d38f18" kindref="member">GTEST_DECLARE_bool_</ref>(death_test_use_fork);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>of<sp/>GetTestTypeId()<sp/>as<sp/>seen<sp/>from<sp/>within<sp/>the<sp/>Google<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>library.<sp/><sp/>This<sp/>is<sp/>solely<sp/>for<sp/>testing<sp/>GetTestTypeId().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" kindref="member">TypeId</ref><sp/><ref refid="namespacetesting_1_1internal_1acac7993efabbd9dd62c1e9c7d143a72f" kindref="member">kTestTypeIdInGoogleTest</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Names<sp/>of<sp/>the<sp/>flags<sp/>(needed<sp/>for<sp/>parsing<sp/>Google<sp/>Test<sp/>flags).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespacetesting_1_1internal_1ad5882ed0ceadc0f23090f0f08b5d495b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ad5882ed0ceadc0f23090f0f08b5d495b" kindref="member">kAlsoRunDisabledTestsFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;also_run_disabled_tests&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90" refid="namespacetesting_1_1internal_1a804c907155bfee3a6616ae3ca04048d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a804c907155bfee3a6616ae3ca04048d0" kindref="member">kBreakOnFailureFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;break_on_failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91" refid="namespacetesting_1_1internal_1af4bb309802e83df0927097e6e4201a38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1af4bb309802e83df0927097e6e4201a38" kindref="member">kCatchExceptionsFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;catch_exceptions&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92" refid="namespacetesting_1_1internal_1a884ff13b75232fbe7daa0caf46f1de66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a884ff13b75232fbe7daa0caf46f1de66" kindref="member">kColorFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;color&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93" refid="namespacetesting_1_1internal_1a8cb8ee7fe7659e6916a0108dffa2f7dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a8cb8ee7fe7659e6916a0108dffa2f7dc" kindref="member">kFilterFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;filter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94" refid="namespacetesting_1_1internal_1a1d3cfebffefbf35f7033d4941493a8ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a1d3cfebffefbf35f7033d4941493a8ff" kindref="member">kListTestsFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;list_tests&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95" refid="namespacetesting_1_1internal_1abd5368e00a31d175c6696cf76cbbde10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1abd5368e00a31d175c6696cf76cbbde10" kindref="member">kOutputFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96" refid="namespacetesting_1_1internal_1aa6c13109bb4c78740ddb082b1ec0de56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1aa6c13109bb4c78740ddb082b1ec0de56" kindref="member">kPrintTimeFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;print_time&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97" refid="namespacetesting_1_1internal_1a964ad71443cfda304b3208bf5d2daa75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a964ad71443cfda304b3208bf5d2daa75" kindref="member">kRandomSeedFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;random_seed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98" refid="namespacetesting_1_1internal_1a764ee423d39ebb8e10c53ab9b685cd9b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a764ee423d39ebb8e10c53ab9b685cd9b" kindref="member">kRepeatFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeat&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99" refid="namespacetesting_1_1internal_1affd2c1118505cb97d8ff728c95fc722b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1affd2c1118505cb97d8ff728c95fc722b" kindref="member">kShuffleFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;shuffle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100" refid="namespacetesting_1_1internal_1ad6f90e66d431ca3a9084408878c2cc77" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ad6f90e66d431ca3a9084408878c2cc77" kindref="member">kStackTraceDepthFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stack_trace_depth&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101" refid="namespacetesting_1_1internal_1a84f8a2102d45c8b2b35be06d14ffefb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a84f8a2102d45c8b2b35be06d14ffefb8" kindref="member">kStreamResultToFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;stream_result_to&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102" refid="namespacetesting_1_1internal_1ad9efcf363de3483afd91c7393a4fefb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ad9efcf363de3483afd91c7393a4fefb8" kindref="member">kThrowOnFailureFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;throw_on_failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103" refid="namespacetesting_1_1internal_1aa1ffe15dea227d4dded912e43a8eed84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1aa1ffe15dea227d4dded912e43a8eed84" kindref="member">kFlagfileFlag</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;flagfile&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>valid<sp/>random<sp/>seed<sp/>must<sp/>be<sp/>in<sp/>[1,<sp/>kMaxRandomSeed].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" kindref="member">kMaxRandomSeed</ref><sp/>=<sp/>99999;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>g_help_flag<sp/>is<sp/>true<sp/>iff<sp/>the<sp/>--help<sp/>flag<sp/>or<sp/>an<sp/>equivalent<sp/>form<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified<sp/>on<sp/>the<sp/>command<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a93a772f5e51973b105d91cbb66a203f4" kindref="member">g_help_flag</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>time<sp/>in<sp/>milliseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/><ref refid="namespacetesting_1_1internal_1ae66b46943a429e6efb1db456d4cae90c" kindref="member">GetTimeInMillis</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>Google<sp/>Test<sp/>should<sp/>use<sp/>colors<sp/>in<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ac1db1b4603967a6c4404f31cbbac31a6" kindref="member">ShouldUseColor</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stdout_is_tty);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Formats<sp/>the<sp/>given<sp/>time<sp/>in<sp/>milliseconds<sp/>as<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetesting_1_1internal_1a904485f27a54be8a5a92856e2d838797" kindref="member">FormatTimeInMillisAsSeconds</ref>(<ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/>ms);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>the<sp/>given<sp/>time<sp/>in<sp/>milliseconds<sp/>to<sp/>a<sp/>date<sp/>string<sp/>in<sp/>the<sp/>ISO<sp/>8601</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>format,<sp/>without<sp/>the<sp/>timezone<sp/>information.<sp/><sp/>N.B.:<sp/>due<sp/>to<sp/>the<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-reentrant<sp/>localtime()<sp/>function,<sp/>this<sp/>function<sp/>is<sp/>not<sp/>thread<sp/>safe.<sp/><sp/>Do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>use<sp/>it<sp/>in<sp/>any<sp/>code<sp/>that<sp/>can<sp/>be<sp/>called<sp/>from<sp/>multiple<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetesting_1_1internal_1a5ef227c4a610e7ff638b12dfb25b068e" kindref="member">FormatEpochTimeInMillisAsIso8601</ref>(<ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/>ms);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>a<sp/>string<sp/>for<sp/>an<sp/>Int32<sp/>flag,<sp/>in<sp/>the<sp/>form<sp/>of<sp/>&quot;--flag=value&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>stores<sp/>the<sp/>value<sp/>of<sp/>the<sp/>flag<sp/>in<sp/>*value,<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true.<sp/><sp/>On<sp/>failure,<sp/>returns<sp/>false<sp/>without<sp/>changing<sp/>*value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" kindref="member">ParseInt32Flag</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>flag,<sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref>*<sp/>value);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>random<sp/>seed<sp/>in<sp/>range<sp/>[1,<sp/>kMaxRandomSeed]<sp/>based<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>--gtest_random_seed<sp/>flag<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="namespacetesting_1_1internal_1ae74fedbdaebaac8d1202192266243b9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1ae74fedbdaebaac8d1202192266243b9e" kindref="member">GetRandomSeedFromFlag</ref>(<ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref><sp/>random_seed_flag)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>raw_seed<sp/>=<sp/>(random_seed_flag<sp/>==<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesting_1_1internal_1ae66b46943a429e6efb1db456d4cae90c" kindref="member">GetTimeInMillis</ref>())<sp/>:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(random_seed_flag);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalizes<sp/>the<sp/>actual<sp/>seed<sp/>to<sp/>range<sp/>[1,<sp/>kMaxRandomSeed]<sp/>such<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>easy<sp/>to<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>normalized_seed<sp/>=</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((raw_seed<sp/>-<sp/>1U)<sp/>%</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" kindref="member">kMaxRandomSeed</ref>))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalized_seed;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>first<sp/>valid<sp/>random<sp/>seed<sp/>after<sp/>&apos;seed&apos;.<sp/><sp/>The<sp/>behavior<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>undefined<sp/>if<sp/>&apos;seed&apos;<sp/>is<sp/>invalid.<sp/><sp/>The<sp/>seed<sp/>after<sp/>kMaxRandomSeed<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>considered<sp/>to<sp/>be<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="namespacetesting_1_1internal_1a6e07a655cb987d131cd8fbeba9a7f1eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a6e07a655cb987d131cd8fbeba9a7f1eb" kindref="member">GetNextRandomSeed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(1<sp/>&lt;=<sp/>seed<sp/>&amp;&amp;<sp/>seed<sp/>&lt;=<sp/><ref refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" kindref="member">kMaxRandomSeed</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>random<sp/>seed<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>seed<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>must<sp/>be<sp/>in<sp/>[1,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" kindref="member">kMaxRandomSeed</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_seed<sp/>=<sp/>seed<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(next_seed<sp/>&gt;<sp/><ref refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" kindref="member">kMaxRandomSeed</ref>)<sp/>?<sp/>1<sp/>:<sp/>next_seed;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>saves<sp/>the<sp/>values<sp/>of<sp/>all<sp/>Google<sp/>Test<sp/>flags<sp/>in<sp/>its<sp/>c&apos;tor,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>restores<sp/>them<sp/>in<sp/>its<sp/>d&apos;tor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classtesting_1_1internal_1_1GTestFlagSaver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1GTestFlagSaver" kindref="compound">GTestFlagSaver</ref><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>c&apos;tor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad94262f7765927bbe9a08e25f9c67530" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad94262f7765927bbe9a08e25f9c67530" kindref="member">GTestFlagSaver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad940f8cb0287f0498abfbb8cd3f63676" kindref="member">also_run_disabled_tests_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(also_run_disabled_tests);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a63eb38f3e9f048128314129a6eadfbaf" kindref="member">break_on_failure_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(break_on_failure);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a7ea119ac4f2b4410bb97a85aaa753ff2" kindref="member">catch_exceptions_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(catch_exceptions);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a0ea1a453d5a44ba56a80b7e9c3ce9097" kindref="member">color_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(color);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1aaafc84990f1c135a56f8a1e5009adf7e" kindref="member">death_test_style_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(death_test_style);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9b243970df7a8d33764537f358ebe384" kindref="member">death_test_use_fork_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(death_test_use_fork);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac4de0e4e127f7b08112dfbd564f24000" kindref="member">filter_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(filter);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac609bb5e1a2433d5d1bec59305b363b1" kindref="member">internal_run_death_test_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(internal_run_death_test);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac9cdb0db488527001acc3f34f066cce3" kindref="member">list_tests_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(list_tests);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a65da6ec2943af0a71343efc0e5e96286" kindref="member">output_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(output);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a3a5791fa995e8fd348683afa1d5b0150" kindref="member">print_time_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(print_time);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a58abf7990f96e4c8ebee143fbcbb8840" kindref="member">random_seed_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(random_seed);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a4c6949cb53b5a89568649d34f8abb5f6" kindref="member">repeat_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(repeat);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1af69cb62f7ee26542dd8588507142b478" kindref="member">shuffle_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(shuffle);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a42573c1d61af50aae7e855cb1be07d8d" kindref="member">stack_trace_depth_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(stack_trace_depth);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a603db2b9ec601e80c18af84b4f5faa13" kindref="member">stream_result_to_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(stream_result_to);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9fc0b96db6debd9ff80032eb4c84dc28" kindref="member">throw_on_failure_</ref><sp/>=<sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(throw_on_failure);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>d&apos;tor<sp/>is<sp/>not<sp/>virtual.<sp/><sp/>DO<sp/>NOT<sp/>INHERIT<sp/>FROM<sp/>THIS<sp/>CLASS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a5f00786b5c9045fd5dd7c42fd7dd1476" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a5f00786b5c9045fd5dd7c42fd7dd1476" kindref="member">~GTestFlagSaver</ref>()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(also_run_disabled_tests)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad940f8cb0287f0498abfbb8cd3f63676" kindref="member">also_run_disabled_tests_</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(break_on_failure)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a63eb38f3e9f048128314129a6eadfbaf" kindref="member">break_on_failure_</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(catch_exceptions)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a7ea119ac4f2b4410bb97a85aaa753ff2" kindref="member">catch_exceptions_</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(color)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a0ea1a453d5a44ba56a80b7e9c3ce9097" kindref="member">color_</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(death_test_style)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1aaafc84990f1c135a56f8a1e5009adf7e" kindref="member">death_test_style_</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(death_test_use_fork)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9b243970df7a8d33764537f358ebe384" kindref="member">death_test_use_fork_</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(filter)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac4de0e4e127f7b08112dfbd564f24000" kindref="member">filter_</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(internal_run_death_test)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac609bb5e1a2433d5d1bec59305b363b1" kindref="member">internal_run_death_test_</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(list_tests)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac9cdb0db488527001acc3f34f066cce3" kindref="member">list_tests_</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(output)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a65da6ec2943af0a71343efc0e5e96286" kindref="member">output_</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(print_time)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a3a5791fa995e8fd348683afa1d5b0150" kindref="member">print_time_</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(random_seed)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a58abf7990f96e4c8ebee143fbcbb8840" kindref="member">random_seed_</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(repeat)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a4c6949cb53b5a89568649d34f8abb5f6" kindref="member">repeat_</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(shuffle)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1af69cb62f7ee26542dd8588507142b478" kindref="member">shuffle_</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(stack_trace_depth)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a42573c1d61af50aae7e855cb1be07d8d" kindref="member">stack_trace_depth_</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(stream_result_to)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a603db2b9ec601e80c18af84b4f5faa13" kindref="member">stream_result_to_</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" kindref="member">GTEST_FLAG</ref>(throw_on_failure)<sp/>=<sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9fc0b96db6debd9ff80032eb4c84dc28" kindref="member">throw_on_failure_</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fields<sp/>for<sp/>saving<sp/>the<sp/>original<sp/>values<sp/>of<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad940f8cb0287f0498abfbb8cd3f63676" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ad940f8cb0287f0498abfbb8cd3f63676" kindref="member">also_run_disabled_tests_</ref>;</highlight></codeline>
<codeline lineno="209" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a63eb38f3e9f048128314129a6eadfbaf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a63eb38f3e9f048128314129a6eadfbaf" kindref="member">break_on_failure_</ref>;</highlight></codeline>
<codeline lineno="210" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a7ea119ac4f2b4410bb97a85aaa753ff2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a7ea119ac4f2b4410bb97a85aaa753ff2" kindref="member">catch_exceptions_</ref>;</highlight></codeline>
<codeline lineno="211" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a0ea1a453d5a44ba56a80b7e9c3ce9097" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a0ea1a453d5a44ba56a80b7e9c3ce9097" kindref="member">color_</ref>;</highlight></codeline>
<codeline lineno="212" refid="classtesting_1_1internal_1_1GTestFlagSaver_1aaafc84990f1c135a56f8a1e5009adf7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1aaafc84990f1c135a56f8a1e5009adf7e" kindref="member">death_test_style_</ref>;</highlight></codeline>
<codeline lineno="213" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9b243970df7a8d33764537f358ebe384" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9b243970df7a8d33764537f358ebe384" kindref="member">death_test_use_fork_</ref>;</highlight></codeline>
<codeline lineno="214" refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac4de0e4e127f7b08112dfbd564f24000" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac4de0e4e127f7b08112dfbd564f24000" kindref="member">filter_</ref>;</highlight></codeline>
<codeline lineno="215" refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac609bb5e1a2433d5d1bec59305b363b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac609bb5e1a2433d5d1bec59305b363b1" kindref="member">internal_run_death_test_</ref>;</highlight></codeline>
<codeline lineno="216" refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac9cdb0db488527001acc3f34f066cce3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1ac9cdb0db488527001acc3f34f066cce3" kindref="member">list_tests_</ref>;</highlight></codeline>
<codeline lineno="217" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a65da6ec2943af0a71343efc0e5e96286" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a65da6ec2943af0a71343efc0e5e96286" kindref="member">output_</ref>;</highlight></codeline>
<codeline lineno="218" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a3a5791fa995e8fd348683afa1d5b0150" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a3a5791fa995e8fd348683afa1d5b0150" kindref="member">print_time_</ref>;</highlight></codeline>
<codeline lineno="219" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a58abf7990f96e4c8ebee143fbcbb8840" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">internal::Int32</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a58abf7990f96e4c8ebee143fbcbb8840" kindref="member">random_seed_</ref>;</highlight></codeline>
<codeline lineno="220" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a4c6949cb53b5a89568649d34f8abb5f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">internal::Int32</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a4c6949cb53b5a89568649d34f8abb5f6" kindref="member">repeat_</ref>;</highlight></codeline>
<codeline lineno="221" refid="classtesting_1_1internal_1_1GTestFlagSaver_1af69cb62f7ee26542dd8588507142b478" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1af69cb62f7ee26542dd8588507142b478" kindref="member">shuffle_</ref>;</highlight></codeline>
<codeline lineno="222" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a42573c1d61af50aae7e855cb1be07d8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">internal::Int32</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a42573c1d61af50aae7e855cb1be07d8d" kindref="member">stack_trace_depth_</ref>;</highlight></codeline>
<codeline lineno="223" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a603db2b9ec601e80c18af84b4f5faa13" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a603db2b9ec601e80c18af84b4f5faa13" kindref="member">stream_result_to_</ref>;</highlight></codeline>
<codeline lineno="224" refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9fc0b96db6debd9ff80032eb4c84dc28" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1GTestFlagSaver_1a9fc0b96db6debd9ff80032eb4c84dc28" kindref="member">throw_on_failure_</ref>;</highlight></codeline>
<codeline lineno="225" refid="namespacetesting_1_1internal_1a38b1c2b86c7f68ebd5cf95d9ac7d4108" refkind="member"><highlight class="normal">}<sp/><ref refid="namespacetesting_1_1internal_1a38b1c2b86c7f68ebd5cf95d9ac7d4108" kindref="member">GTEST_ATTRIBUTE_UNUSED_</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>Unicode<sp/>code<sp/>point<sp/>to<sp/>a<sp/>narrow<sp/>string<sp/>in<sp/>UTF-8<sp/>encoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>code_point<sp/>parameter<sp/>is<sp/>of<sp/>type<sp/>UInt32<sp/>because<sp/>wchar_t<sp/>may<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wide<sp/>enough<sp/>to<sp/>contain<sp/>a<sp/>code<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>code_point<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>Unicode<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(i.e.<sp/>outside<sp/>of<sp/>Unicode<sp/>range<sp/>U+0<sp/>to<sp/>U+10FFFF)<sp/>it<sp/>will<sp/>be<sp/>converted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>&quot;(Invalid<sp/>Unicode<sp/>0xXXXXXXXX)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" kindref="member">CodePointToUtf8</ref>(<ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref><sp/>code_point);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>wide<sp/>string<sp/>to<sp/>a<sp/>narrow<sp/>string<sp/>in<sp/>UTF-8<sp/>encoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>wide<sp/>string<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>the<sp/>following<sp/>encoding:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>UTF-16<sp/>if<sp/>sizeof(wchar_t)<sp/>==<sp/>2<sp/>(on<sp/>Windows,<sp/>Cygwin,<sp/>Symbian<sp/>OS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>UTF-32<sp/>if<sp/>sizeof(wchar_t)<sp/>==<sp/>4<sp/>(on<sp/>Linux)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameter<sp/>str<sp/>points<sp/>to<sp/>a<sp/>null-terminated<sp/>wide<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameter<sp/>num_chars<sp/>may<sp/>additionally<sp/>limit<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>wchar_t<sp/>characters<sp/>processed.<sp/>-1<sp/>is<sp/>used<sp/>when<sp/>the<sp/>entire<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>string<sp/>contains<sp/>code<sp/>points<sp/>that<sp/>are<sp/>not<sp/>valid<sp/>Unicode<sp/>code<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(i.e.<sp/>outside<sp/>of<sp/>Unicode<sp/>range<sp/>U+0<sp/>to<sp/>U+10FFFF)<sp/>they<sp/>will<sp/>be<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>&apos;(Invalid<sp/>Unicode<sp/>0xXXXXXXXX)&apos;.<sp/>If<sp/>the<sp/>string<sp/>is<sp/>in<sp/>UTF16<sp/>encoding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>contains<sp/>invalid<sp/>UTF-16<sp/>surrogate<sp/>pairs,<sp/>values<sp/>in<sp/>those<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>encoded<sp/>as<sp/>individual<sp/>Unicode<sp/>characters<sp/>from<sp/>Basic<sp/>Normal<sp/>Plane.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" kindref="member">WideStringToUtf8</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_chars);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>the<sp/>GTEST_SHARD_STATUS_FILE<sp/>environment<sp/>variable,<sp/>and<sp/>creates<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>variable<sp/>is<sp/>present.<sp/>If<sp/>a<sp/>file<sp/>already<sp/>exists<sp/>at<sp/>this<sp/>location,<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>will<sp/>write<sp/>over<sp/>it.<sp/>If<sp/>the<sp/>variable<sp/>is<sp/>present,<sp/>but<sp/>the<sp/>file<sp/>cannot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>created,<sp/>prints<sp/>an<sp/>error<sp/>and<sp/>exits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a19b35b39782d41e6ef76e1910a3a502e" kindref="member">WriteToShardStatusFileIfNeeded</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Checks<sp/>whether<sp/>sharding<sp/>is<sp/>enabled<sp/>by<sp/>examining<sp/>the<sp/>relevant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>environment<sp/>variable<sp/>values.<sp/>If<sp/>the<sp/>variables<sp/>are<sp/>present,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>inconsistent<sp/>(e.g.,<sp/>shard_index<sp/>&gt;=<sp/>total_shards),<sp/>prints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>error<sp/>and<sp/>exits.<sp/>If<sp/>in_subprocess_for_death_test,<sp/>sharding<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>disabled<sp/>because<sp/>it<sp/>must<sp/>only<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>original<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>process.<sp/>Otherwise,<sp/>we<sp/>could<sp/>filter<sp/>out<sp/>death<sp/>tests<sp/>we<sp/>intended<sp/>to<sp/>execute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a0fe41657b1d1ab7ec4e37ec07403ee6c" kindref="member">ShouldShard</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>total_shards_str,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>shard_index_str,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>in_subprocess_for_death_test);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>the<sp/>environment<sp/>variable<sp/>var<sp/>as<sp/>an<sp/>Int32.<sp/>If<sp/>it<sp/>is<sp/>unset,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>default_val.<sp/>If<sp/>it<sp/>is<sp/>not<sp/>an<sp/>Int32,<sp/>prints<sp/>an<sp/>error<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>aborts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref><sp/><ref refid="namespacetesting_1_1internal_1aaa576613655c2f380278c255c3ec5fef" kindref="member">Int32FromEnvOrDie</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>env_var,<sp/><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref><sp/>default_val);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>total<sp/>number<sp/>of<sp/>shards,<sp/>the<sp/>shard<sp/>index,<sp/>and<sp/>the<sp/>test<sp/>id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>iff<sp/>the<sp/>test<sp/>should<sp/>be<sp/>run<sp/>on<sp/>this<sp/>shard.<sp/>The<sp/>test<sp/>id<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>arbitrary<sp/>but<sp/>unique<sp/>non-negative<sp/>integer<sp/>assigned<sp/>to<sp/>each<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method.<sp/>Assumes<sp/>that<sp/>0<sp/>&lt;=<sp/>shard_index<sp/>&lt;<sp/>total_shards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a437bd89f5bc532778d7467600e210395" kindref="member">ShouldRunTestOnShard</ref>(</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_shards,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shard_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_id);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL<sp/>container<sp/>utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>given<sp/>container<sp/>that<sp/>satisfy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>predicate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Predicate&gt;</highlight></codeline>
<codeline lineno="283" refid="namespacetesting_1_1internal_1a1e77a774d910346eff11a86d8df783a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a1e77a774d910346eff11a86d8df783a5" kindref="member">CountIf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>c,<sp/>Predicate<sp/>predicate)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implemented<sp/>as<sp/>an<sp/>explicit<sp/>loop<sp/>since<sp/>std::count_if()<sp/>in<sp/>libCstd<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Solaris<sp/>has<sp/>a<sp/>non-standard<sp/>signature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container::const_iterator<sp/>it<sp/>=<sp/>c.begin();<sp/>it<sp/>!=<sp/>c.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predicate(*it))</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applies<sp/>a<sp/>function/functor<sp/>to<sp/>each<sp/>element<sp/>in<sp/>the<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="296" refid="namespacetesting_1_1internal_1a52f5504ed65d116201ccb8f99a44fd7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a52f5504ed65d116201ccb8f99a44fd7e" kindref="member">ForEach</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>c,<sp/>Functor<sp/>functor)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="cpp/algorithm/for_each" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::for_each</ref>(c.begin(),<sp/>c.end(),<sp/>functor);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>i-th<sp/>element<sp/>of<sp/>the<sp/>vector,<sp/>or<sp/>default_value<sp/>if<sp/>i<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>range<sp/>[0,<sp/>v.size()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="303" refid="namespacetesting_1_1internal_1a71fdd20a0686bea3dc0cdcd95e0bca1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>E<sp/><ref refid="namespacetesting_1_1internal_1a71fdd20a0686bea3dc0cdcd95e0bca1c" kindref="member">GetElementOr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;E&gt;</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>E<sp/>default_value)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>0<sp/>||<sp/>i<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v.<ref refid="cpp/container/vector/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">size</ref>()))<sp/>?<sp/>default_value<sp/>:<sp/>v[i];</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>an<sp/>in-place<sp/>shuffle<sp/>of<sp/>a<sp/>range<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;begin&apos;<sp/>and<sp/>&apos;end&apos;<sp/>are<sp/>element<sp/>indices<sp/>as<sp/>an<sp/>STL-style<sp/>range;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>i.e.<sp/>[begin,<sp/>end)<sp/>are<sp/>shuffled,<sp/>where<sp/>&apos;end&apos;<sp/>==<sp/>size()<sp/>means<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shuffle<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="312" refid="namespacetesting_1_1internal_1a0e1d3dc36138a591769412d4c7779861" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a0e1d3dc36138a591769412d4c7779861" kindref="member">ShuffleRange</ref>(<ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref>*<sp/>random,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;E&gt;</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v-&gt;<ref refid="cpp/container/vector/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">size</ref>());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(0<sp/>&lt;=<sp/>begin<sp/>&amp;&amp;<sp/>begin<sp/>&lt;=<sp/>size)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>shuffle<sp/>range<sp/>start<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>begin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>must<sp/>be<sp/>in<sp/>range<sp/>[0,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(begin<sp/>&lt;=<sp/>end<sp/>&amp;&amp;<sp/>end<sp/>&lt;=<sp/>size)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>shuffle<sp/>range<sp/>finish<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>end<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>must<sp/>be<sp/>in<sp/>range<sp/>[&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>begin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;].&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fisher-Yates<sp/>shuffle,<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>http://en.wikipedia.org/wiki/Fisher-Yates_shuffle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range_width<sp/>=<sp/>end<sp/>-<sp/>begin;<sp/>range_width<sp/>&gt;=<sp/>2;<sp/>range_width--)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_in_range<sp/>=<sp/>begin<sp/>+<sp/>range_width<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>begin<sp/>+<sp/>random-&gt;<ref refid="classtesting_1_1internal_1_1Random_1a9315b7fb621cbcfdf92ed4b5e584c0db" kindref="member">Generate</ref>(range_width);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/algorithm/swap" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::swap</ref>((*v)[selected],<sp/>(*v)[last_in_range]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>an<sp/>in-place<sp/>shuffle<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="333" refid="namespacetesting_1_1internal_1a90d9e6ffe8522a7eb1b2ce9b1a0c4673" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a90d9e6ffe8522a7eb1b2ce9b1a0c4673" kindref="member">Shuffle</ref>(<ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref>*<sp/>random,<sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;E&gt;</ref>*<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a0e1d3dc36138a591769412d4c7779861" kindref="member">ShuffleRange</ref>(random,<sp/>0,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(v-&gt;<ref refid="cpp/container/vector/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">size</ref>()),<sp/>v);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>function<sp/>for<sp/>deleting<sp/>an<sp/>object.<sp/><sp/>Handy<sp/>for<sp/>being<sp/>used<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="340" refid="namespacetesting_1_1internal_1a1e7045e09392aece10aea4517458b7ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a1e7045e09392aece10aea4517458b7ed" kindref="member">Delete</ref>(T*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>predicate<sp/>that<sp/>checks<sp/>the<sp/>key<sp/>of<sp/>a<sp/>TestProperty<sp/>against<sp/>a<sp/>known<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TestPropertyKeyIs<sp/>is<sp/>copyable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classtesting_1_1internal_1_1TestPropertyKeyIs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs" kindref="compound">TestPropertyKeyIs</ref><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TestPropertyKeyIs<sp/>has<sp/>NO<sp/>default<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a509ed1271caa1032e40c5d811b3da385" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a509ed1271caa1032e40c5d811b3da385" kindref="member">TestPropertyKeyIs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>key)<sp/>:<sp/><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a857f42b8753df8efccc8f38196b150b9" kindref="member">key_</ref>(key)<sp/>{}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>test<sp/>name<sp/>of<sp/>test<sp/>property<sp/>matches<sp/>on<sp/>key_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1abf5eb5bf22065e0614ffe36d093e885e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1abf5eb5bf22065e0614ffe36d093e885e" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref>&amp;<sp/>test_property)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_property.<ref refid="classtesting_1_1TestProperty_1ad60435d4ad04ac030487d8998fc61c5f" kindref="member">key</ref>()<sp/>==<sp/><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a857f42b8753df8efccc8f38196b150b9" kindref="member">key_</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="360" refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a857f42b8753df8efccc8f38196b150b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="classtesting_1_1internal_1_1TestPropertyKeyIs_1a857f42b8753df8efccc8f38196b150b9" kindref="member">key_</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>UnitTestOptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>contains<sp/>functions<sp/>for<sp/>processing<sp/>options<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specifies<sp/>when<sp/>running<sp/>the<sp/>tests.<sp/><sp/>It<sp/>has<sp/>only<sp/>static<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>most<sp/>cases,<sp/>the<sp/>user<sp/>can<sp/>specify<sp/>an<sp/>option<sp/>using<sp/>either<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>environment<sp/>variable<sp/>or<sp/>a<sp/>command<sp/>line<sp/>flag.<sp/><sp/>E.g.<sp/>you<sp/>can<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test<sp/>filter<sp/>using<sp/>either<sp/>GTEST_FILTER<sp/>or<sp/>--gtest_filter.<sp/><sp/>If<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>variable<sp/>and<sp/>the<sp/>flag<sp/>are<sp/>present,<sp/>the<sp/>latter<sp/>overrides<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>former.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classtesting_1_1internal_1_1UnitTestOptions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestOptions" kindref="compound">UnitTestOptions</ref><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>for<sp/>processing<sp/>the<sp/>gtest_output<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>output<sp/>format,<sp/>or<sp/>&quot;&quot;<sp/>for<sp/>normal<sp/>printed<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>GetOutputFormat();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>absolute<sp/>path<sp/>of<sp/>the<sp/>requested<sp/>output<sp/>file,<sp/>or<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>(test_detail.xml<sp/>in<sp/>the<sp/>original<sp/>working<sp/>directory)<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>none<sp/>was<sp/>explicitly<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>GetAbsolutePathToOutputFile();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>for<sp/>processing<sp/>the<sp/>gtest_filter<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>wildcard<sp/>pattern<sp/>matches<sp/>the<sp/>string.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>&apos;:&apos;<sp/>or<sp/>&apos;\0&apos;<sp/>character<sp/>in<sp/>pattern<sp/>marks<sp/>the<sp/>end<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>recursive<sp/>algorithm<sp/>isn&apos;t<sp/>very<sp/>efficient,<sp/>but<sp/>is<sp/>clear<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>works<sp/>well<sp/>enough<sp/>for<sp/>matching<sp/>test<sp/>names,<sp/>which<sp/>are<sp/>short.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PatternMatchesString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>user-specified<sp/>filter<sp/>matches<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>and<sp/>the<sp/>test<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FilterMatchesTest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>&amp;test_case_name,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>&amp;test_name);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>for<sp/>supporting<sp/>the<sp/>gtest_catch_exception<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>EXCEPTION_EXECUTE_HANDLER<sp/>if<sp/>Google<sp/>Test<sp/>should<sp/>handle<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>SEH<sp/>exception,<sp/>or<sp/>EXCEPTION_CONTINUE_SEARCH<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>useful<sp/>as<sp/>an<sp/>__except<sp/>condition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GTestShouldProcessSEH(DWORD<sp/>exception_code);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>&quot;name&quot;<sp/>matches<sp/>the<sp/>&apos;:&apos;<sp/>separated<sp/>list<sp/>of<sp/>glob-style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filters<sp/>in<sp/>&quot;filter&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MatchesFilter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filter);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">};</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>application&apos;s<sp/>name,<sp/>removing<sp/>directory<sp/>path<sp/>if<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>present.<sp/><sp/>Used<sp/>by<sp/>UnitTestOptions::GetOutputFile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="classtesting_1_1internal_1_1FilePath" kindref="compound">FilePath</ref><sp/><ref refid="namespacetesting_1_1internal_1a7a2bbf069f75bc99873976ad6fc356ad" kindref="member">GetCurrentExecutableName</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>role<sp/>interface<sp/>for<sp/>getting<sp/>the<sp/>OS<sp/>stack<sp/>trace<sp/>as<sp/>a<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="420" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1afbe9eb0ca8775fbb98ff0720011b6708" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1afbe9eb0ca8775fbb98ff0720011b6708" kindref="member">OsStackTraceGetterInterface</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="421" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a193f4a1de4af9b78010c659912df5a15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a193f4a1de4af9b78010c659912df5a15" kindref="member">~OsStackTraceGetterInterface</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>OS<sp/>stack<sp/>trace<sp/>as<sp/>an<sp/>std::string.<sp/><sp/>Parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>max_depth<sp/><sp/>-<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>stack<sp/>frames<sp/>to<sp/>be<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>trace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>skip_count<sp/>-<sp/>the<sp/>number<sp/>of<sp/>top<sp/>frames<sp/>to<sp/>be<sp/>skipped;<sp/>doesn&apos;t<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>against<sp/>max_depth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a6965eadb9b340808718fab9f1475c49a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a6965eadb9b340808718fab9f1475c49a" kindref="member">CurrentStackTrace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip_count)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UponLeavingGTest()<sp/>should<sp/>be<sp/>called<sp/>immediately<sp/>before<sp/>Google<sp/>Test<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>code.<sp/>It<sp/>saves<sp/>some<sp/>information<sp/>about<sp/>the<sp/>current<sp/>stack<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CurrentStackTrace()<sp/>will<sp/>use<sp/>to<sp/>find<sp/>and<sp/>hide<sp/>Google<sp/>Test<sp/>stack<sp/>frames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a791bd120428b5a53d5eeba1b27296a39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a791bd120428b5a53d5eeba1b27296a39" kindref="member">UponLeavingGTest</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>string<sp/>is<sp/>inserted<sp/>in<sp/>place<sp/>of<sp/>stack<sp/>frames<sp/>that<sp/>are<sp/>part<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Google<sp/>Test&apos;s<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a669c49ce9ae05935e70bddb35a81ceb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a669c49ce9ae05935e70bddb35a81ceb8" kindref="member">kElidedFramesMarker</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="441" refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a7c3ad7c30af28080d7be852886ac3af0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface_1a7c3ad7c30af28080d7be852886ac3af0" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>working<sp/>implementation<sp/>of<sp/>the<sp/>OsStackTraceGetterInterface<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classtesting_1_1internal_1_1OsStackTraceGetter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1OsStackTraceGetter" kindref="compound">OsStackTraceGetter</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447" refid="classtesting_1_1internal_1_1OsStackTraceGetter_1aa40b3120c0ae4ec640de8b577ab7da17" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetter_1aa40b3120c0ae4ec640de8b577ab7da17" kindref="member">OsStackTraceGetter</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetter_1ad85d7766a222befa3e7f3c6932046ac2" kindref="member">CurrentStackTrace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip_count);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetter_1a8ae0237629b6b5672b4b5ef8e292205c" kindref="member">UponLeavingGTest</ref>();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="453" refid="classtesting_1_1internal_1_1OsStackTraceGetter_1a51caf2b97d8ef86e5e279387bbab1278" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetter_1a51caf2b97d8ef86e5e279387bbab1278" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1OsStackTraceGetter" kindref="compound">OsStackTraceGetter</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal">};</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Information<sp/>about<sp/>a<sp/>Google<sp/>Test<sp/>trace<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="structtesting_1_1internal_1_1TraceInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesting_1_1internal_1_1TraceInfo" kindref="compound">TraceInfo</ref><sp/>{</highlight></codeline>
<codeline lineno="458" refid="structtesting_1_1internal_1_1TraceInfo_1a5d801209d3c0840aa55cfd4b67504254" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structtesting_1_1internal_1_1TraceInfo_1a5d801209d3c0840aa55cfd4b67504254" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="459" refid="structtesting_1_1internal_1_1TraceInfo_1ae9d269de1b77f4a3180d0d34acb4d7ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtesting_1_1internal_1_1TraceInfo_1ae9d269de1b77f4a3180d0d34acb4d7ff" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="460" refid="structtesting_1_1internal_1_1TraceInfo_1a39e74f39ce6d5fdbac799abdb1c27f90" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="structtesting_1_1internal_1_1TraceInfo_1a39e74f39ce6d5fdbac799abdb1c27f90" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>default<sp/>global<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>used<sp/>in<sp/>UnitTestImpl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>should<sp/>only<sp/>be<sp/>used<sp/>by<sp/>UnitTestImpl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" kindref="compound">DefaultGlobalTestPartResultReporter</ref></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1a3900ea7f34b34afd48c7d1d0312a1488" kindref="member">DefaultGlobalTestPartResultReporter</ref>(<ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>*<sp/>unit_test);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implements<sp/>the<sp/>TestPartResultReporterInterface.<sp/>Reports<sp/>the<sp/>test<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>in<sp/>the<sp/>current<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1a6081576a23b964cfecab1e424d8044fc" kindref="member">ReportTestPartResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref>&amp;<sp/>result);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="474" refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1a9cf6282b104ca45d1abae6940708e0bb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1a9cf6282b104ca45d1abae6940708e0bb" kindref="member">unit_test_</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1ae7ea4be351ec342fe323546d9e2c00d9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter_1ae7ea4be351ec342fe323546d9e2c00d9" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" kindref="compound">DefaultGlobalTestPartResultReporter</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>default<sp/>per<sp/>thread<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UnitTestImpl.<sp/>This<sp/>class<sp/>should<sp/>only<sp/>be<sp/>used<sp/>by<sp/>UnitTestImpl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter" kindref="compound">DefaultPerThreadTestPartResultReporter</ref></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1a968a846e5a90d2ffea8b2ce2746099bd" kindref="member">DefaultPerThreadTestPartResultReporter</ref>(<ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>*<sp/>unit_test);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implements<sp/>the<sp/>TestPartResultReporterInterface.<sp/>The<sp/>implementation<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delegates<sp/>to<sp/>the<sp/>current<sp/>global<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>of<sp/>*unit_test_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1ac6dc08eadc4e5a2a64a91d0b6c6b3aad" kindref="member">ReportTestPartResult</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref>&amp;<sp/>result);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="490" refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1a44f8ce831e79b6b25197ce8e4f2e08d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1a44f8ce831e79b6b25197ce8e4f2e08d6" kindref="member">unit_test_</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1a2fe14f3349de63daee187dff7a431cd8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter_1a2fe14f3349de63daee187dff7a431cd8" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter" kindref="compound">DefaultPerThreadTestPartResultReporter</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">};</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>private<sp/>implementation<sp/>of<sp/>the<sp/>UnitTest<sp/>class.<sp/><sp/>We<sp/>don&apos;t<sp/>protect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>methods<sp/>under<sp/>a<sp/>mutex,<sp/>as<sp/>this<sp/>class<sp/>is<sp/>not<sp/>accessible<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user<sp/>and<sp/>the<sp/>UnitTest<sp/>class<sp/>that<sp/>delegates<sp/>work<sp/>to<sp/>this<sp/>class<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>proper<sp/>locking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="classtesting_1_1internal_1_1UnitTestImpl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>(<ref refid="classtesting_1_1UnitTest" kindref="compound">UnitTest</ref>*<sp/>parent);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>different<sp/>ways<sp/>to<sp/>register<sp/>your<sp/>own<sp/>TestPartResultReporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>register<sp/>your<sp/>own<sp/>repoter<sp/>to<sp/>listen<sp/>either<sp/>only<sp/>for<sp/>test<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>current<sp/>thread<sp/>or<sp/>for<sp/>results<sp/>from<sp/>all<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>each<sp/>per-thread<sp/>test<sp/>result<sp/>repoter<sp/>just<sp/>passes<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TestPartResult<sp/>to<sp/>the<sp/>global<sp/>test<sp/>result<sp/>reporter,<sp/>which<sp/>registers<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>part<sp/>result<sp/>for<sp/>the<sp/>currently<sp/>running<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>global<sp/>test<sp/>part<sp/>result<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/>GetGlobalTestPartResultReporter();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>global<sp/>test<sp/>part<sp/>result<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetGlobalTestPartResultReporter(</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/>reporter);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>for<sp/>the<sp/>current<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/>GetTestPartResultReporterForCurrentThread();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>for<sp/>the<sp/>current<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTestPartResultReporterForCurrentThread(</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/>reporter);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>successful<sp/>test<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>successful_test_case_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>failed<sp/>test<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed_test_case_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>all<sp/>test<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_test_case_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>all<sp/>test<sp/>cases<sp/>that<sp/>contain<sp/>at<sp/>least<sp/>one<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>should<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_case_to_run_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>successful<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>successful_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>failed<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>failed_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>disabled<sp/>tests<sp/>that<sp/>will<sp/>be<sp/>reported<sp/>in<sp/>the<sp/>XML<sp/>report.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reportable_disabled_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>disabled<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>disabled_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>tests<sp/>to<sp/>be<sp/>printed<sp/>in<sp/>the<sp/>XML<sp/>report.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reportable_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>all<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_test_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>tests<sp/>that<sp/>should<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_to_run_count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>time<sp/>of<sp/>the<sp/>test<sp/>program<sp/>start,<sp/>in<sp/>ms<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UNIX<sp/>epoch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="classtesting_1_1internal_1_1UnitTestImpl_1abb02dfd689760c6323acec725d9631d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1abb02dfd689760c6323acec725d9631d5" kindref="member">start_timestamp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_timestamp_;<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>elapsed<sp/>time,<sp/>in<sp/>milliseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="classtesting_1_1internal_1_1UnitTestImpl_1a4376881063f945dcc8ec4dbb38b5ecc1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a4376881063f945dcc8ec4dbb38b5ecc1" kindref="member">elapsed_time</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elapsed_time_;<sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>unit<sp/>test<sp/>passed<sp/>(i.e.<sp/>all<sp/>test<sp/>cases<sp/>passed).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="classtesting_1_1internal_1_1UnitTestImpl_1ae8e461369acfec902da382bc02297fe5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ae8e461369acfec902da382bc02297fe5" kindref="member">Passed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!Failed();<sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>unit<sp/>test<sp/>failed<sp/>(i.e.<sp/>some<sp/>test<sp/>case<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>something<sp/>outside<sp/>of<sp/>all<sp/>tests<sp/>failed).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="classtesting_1_1internal_1_1UnitTestImpl_1a0c95d1b56b5f33057afc516db05ac313" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a0c95d1b56b5f33057afc516db05ac313" kindref="member">Failed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failed_test_case_count()<sp/>&gt;<sp/>0<sp/>||<sp/>ad_hoc_test_result()-&gt;Failed();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>i-th<sp/>test<sp/>case<sp/>among<sp/>all<sp/>the<sp/>test<sp/>cases.<sp/>i<sp/>can<sp/>range<sp/>from<sp/>0<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>total_test_case_count()<sp/>-<sp/>1.<sp/>If<sp/>i<sp/>is<sp/>not<sp/>in<sp/>that<sp/>range,<sp/>returns<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="classtesting_1_1internal_1_1UnitTestImpl_1a6438e18ea4904d239a3db7b036a52229" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a6438e18ea4904d239a3db7b036a52229" kindref="member">GetTestCase</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespacetesting_1_1internal_1a71fdd20a0686bea3dc0cdcd95e0bca1c" kindref="member">GetElementOr</ref>(test_case_indices_,<sp/>i,<sp/>-1);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/>0<sp/>?<sp/>NULL<sp/>:<sp/>test_cases_[i];</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>i-th<sp/>test<sp/>case<sp/>among<sp/>all<sp/>the<sp/>test<sp/>cases.<sp/>i<sp/>can<sp/>range<sp/>from<sp/>0<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>total_test_case_count()<sp/>-<sp/>1.<sp/>If<sp/>i<sp/>is<sp/>not<sp/>in<sp/>that<sp/>range,<sp/>returns<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="classtesting_1_1internal_1_1UnitTestImpl_1a2ca71a08060037357fc7e1a406b89add" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a2ca71a08060037357fc7e1a406b89add" kindref="member">GetMutableTestCase</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespacetesting_1_1internal_1a71fdd20a0686bea3dc0cdcd95e0bca1c" kindref="member">GetElementOr</ref>(test_case_indices_,<sp/>i,<sp/>-1);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&lt;<sp/>0<sp/>?<sp/>NULL<sp/>:<sp/>test_cases_[index];</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Provides<sp/>access<sp/>to<sp/>the<sp/>event<sp/>listener<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classtesting_1_1internal_1_1UnitTestImpl_1a67211f8475936f88d0e4d30f841c0da4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestEventListeners" kindref="compound">TestEventListeners</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a67211f8475936f88d0e4d30f841c0da4" kindref="member">listeners</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;listeners_;<sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>TestResult<sp/>for<sp/>the<sp/>test<sp/>that&apos;s<sp/>currently<sp/>running,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>TestResult<sp/>for<sp/>the<sp/>ad<sp/>hoc<sp/>test<sp/>if<sp/>no<sp/>test<sp/>is<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref>*<sp/>current_test_result();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>TestResult<sp/>for<sp/>the<sp/>ad<sp/>hoc<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="classtesting_1_1internal_1_1UnitTestImpl_1a8be26dc90e0fac8f8be3552ffd98c69c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a8be26dc90e0fac8f8be3552ffd98c69c" kindref="member">ad_hoc_test_result</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;ad_hoc_test_result_;<sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>OS<sp/>stack<sp/>trace<sp/>getter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>nothing<sp/>if<sp/>the<sp/>input<sp/>and<sp/>the<sp/>current<sp/>OS<sp/>stack<sp/>trace<sp/>getter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>the<sp/>same;<sp/>otherwise,<sp/>deletes<sp/>the<sp/>old<sp/>getter<sp/>and<sp/>makes<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>the<sp/>current<sp/>getter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_os_stack_trace_getter(<ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref>*<sp/>getter);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>OS<sp/>stack<sp/>trace<sp/>getter<sp/>if<sp/>it<sp/>is<sp/>not<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>creates<sp/>an<sp/>OsStackTraceGetter,<sp/>makes<sp/>it<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getter,<sp/>and<sp/>returns<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref>*<sp/>os_stack_trace_getter();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>OS<sp/>stack<sp/>trace<sp/>as<sp/>an<sp/>std::string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>stack<sp/>frames<sp/>to<sp/>be<sp/>included<sp/>is<sp/>specified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>gtest_stack_trace_depth<sp/>flag.<sp/><sp/>The<sp/>skip_count<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specifies<sp/>the<sp/>number<sp/>of<sp/>top<sp/>frames<sp/>to<sp/>be<sp/>skipped,<sp/>which<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>against<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>to<sp/>be<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>if<sp/>Foo()<sp/>calls<sp/>Bar(),<sp/>which<sp/>in<sp/>turn<sp/>calls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CurrentOsStackTraceExceptTop(1),<sp/>Foo()<sp/>will<sp/>be<sp/>included<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>trace<sp/>but<sp/>Bar()<sp/>and<sp/>CurrentOsStackTraceExceptTop()<sp/>won&apos;t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>CurrentOsStackTraceExceptTop(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skip_count)<sp/><ref refid="gtest-port_8h_1a9945cbd967fbccb15f8de711f58955c7" kindref="member">GTEST_NO_INLINE_</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>returns<sp/>a<sp/>TestCase<sp/>with<sp/>the<sp/>given<sp/>name.<sp/><sp/>If<sp/>one<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exist,<sp/>creates<sp/>one<sp/>and<sp/>returns<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arguments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>test_case_name:<sp/>name<sp/>of<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>type_param:<sp/><sp/><sp/><sp/><sp/>the<sp/>name<sp/>of<sp/>the<sp/>test&apos;s<sp/>type<sp/>parameter,<sp/>or<sp/>NULL<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>not<sp/>a<sp/>typed<sp/>or<sp/>a<sp/>type-parameterized<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set_up_tc:<sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>that<sp/>sets<sp/>up<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>tear_down_tc:<sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>that<sp/>tears<sp/>down<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/>GetTestCase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>test_case_name,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_param,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1a30037044c0b57cdd647c7e2e97cb2cff" kindref="member">Test::SetUpTestCaseFunc</ref><sp/>set_up_tc,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1a085e31321d0d029c04d2a79234f60c1a" kindref="member">Test::TearDownTestCaseFunc</ref><sp/>tear_down_tc);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>TestInfo<sp/>to<sp/>the<sp/>unit<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Arguments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>set_up_tc:<sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>that<sp/>sets<sp/>up<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>tear_down_tc:<sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>that<sp/>tears<sp/>down<sp/>the<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>test_info:<sp/><sp/><sp/><sp/>the<sp/>TestInfo<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="classtesting_1_1internal_1_1UnitTestImpl_1a1cc87dfc91377ebec4a3ff4192dfcba9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a1cc87dfc91377ebec4a3ff4192dfcba9" kindref="member">AddTestInfo</ref>(<ref refid="namespacetesting_1_1internal_1a30037044c0b57cdd647c7e2e97cb2cff" kindref="member">Test::SetUpTestCaseFunc</ref><sp/>set_up_tc,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1a085e31321d0d029c04d2a79234f60c1a" kindref="member">Test::TearDownTestCaseFunc</ref><sp/>tear_down_tc,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref>*<sp/>test_info)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>support<sp/>thread-safe<sp/>death<sp/>tests,<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>the<sp/>original<sp/>working<sp/>directory<sp/>when<sp/>the<sp/>test<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>was<sp/>first<sp/>invoked.<sp/><sp/>We<sp/>cannot<sp/>do<sp/>this<sp/>in<sp/>RUN_ALL_TESTS(),<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>user<sp/>may<sp/>have<sp/>changed<sp/>the<sp/>current<sp/>directory<sp/>before<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RUN_ALL_TESTS().<sp/><sp/>Therefore<sp/>we<sp/>capture<sp/>the<sp/>current<sp/>directory<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AddTestInfo(),<sp/>which<sp/>is<sp/>called<sp/>to<sp/>register<sp/>a<sp/>TEST<sp/>or<sp/>TEST_F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>main()<sp/>is<sp/>reached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(original_working_dir_.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>original_working_dir_.Set(<ref refid="classtesting_1_1internal_1_1FilePath_1aaff39ccd7bfb7a1c09c0220a64326387" kindref="member">FilePath::GetCurrentDir</ref>());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(!original_working_dir_.IsEmpty())</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>the<sp/>current<sp/>working<sp/>directory.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>GetTestCase(test_info-&gt;<ref refid="classtesting_1_1TestInfo_1a036a20710c8c2252889544daba9a8ff9" kindref="member">test_case_name</ref>(),</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_info-&gt;<ref refid="classtesting_1_1TestInfo_1a942c68285165e3bb7e6e53feaf4be53d" kindref="member">type_param</ref>(),</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_up_tc,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tear_down_tc)-&gt;AddTestInfo(test_info);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>ParameterizedTestCaseRegistry<sp/>object<sp/>used<sp/>to<sp/>keep<sp/>track<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value-parameterized<sp/>tests<sp/>and<sp/>instantiate<sp/>and<sp/>register<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>internal::ParameterizedTestCaseRegistry&amp;<sp/>parameterized_test_registry()<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameterized_test_registry_;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>TestCase<sp/>object<sp/>for<sp/>the<sp/>test<sp/>that&apos;s<sp/>currently<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classtesting_1_1internal_1_1UnitTestImpl_1a7f0e79bdabd28819cc857e316a36a350" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a7f0e79bdabd28819cc857e316a36a350" kindref="member">set_current_test_case</ref>(<ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/>a_current_test_case)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>current_test_case_<sp/>=<sp/>a_current_test_case;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>TestInfo<sp/>object<sp/>for<sp/>the<sp/>test<sp/>that&apos;s<sp/>currently<sp/>running.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current_test_info<sp/>is<sp/>NULL,<sp/>the<sp/>assertion<sp/>results<sp/>will<sp/>be<sp/>stored<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ad_hoc_test_result_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="classtesting_1_1internal_1_1UnitTestImpl_1ab72211c99ce4427dfb472d6ecea62989" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ab72211c99ce4427dfb472d6ecea62989" kindref="member">set_current_test_info</ref>(<ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref>*<sp/>a_current_test_info)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>current_test_info_<sp/>=<sp/>a_current_test_info;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Registers<sp/>all<sp/>parameterized<sp/>tests<sp/>defined<sp/>using<sp/>TEST_P<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>INSTANTIATE_TEST_CASE_P,<sp/>creating<sp/>regular<sp/>tests<sp/>for<sp/>each<sp/>test/parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>combination.<sp/>This<sp/>method<sp/>can<sp/>be<sp/>called<sp/>more<sp/>then<sp/>once;<sp/>it<sp/>has<sp/>guards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>protecting<sp/>from<sp/>registering<sp/>the<sp/>tests<sp/>more<sp/>then<sp/>once.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value-parameterized<sp/>tests<sp/>are<sp/>disabled,<sp/>RegisterParameterizedTests<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>present<sp/>but<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RegisterParameterizedTests();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Runs<sp/>all<sp/>tests<sp/>in<sp/>this<sp/>UnitTest<sp/>object,<sp/>prints<sp/>the<sp/>result,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>all<sp/>tests<sp/>are<sp/>successful.<sp/><sp/>If<sp/>any<sp/>exception<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thrown<sp/>during<sp/>a<sp/>test,<sp/>this<sp/>test<sp/>is<sp/>considered<sp/>to<sp/>be<sp/>failed,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>tests<sp/>will<sp/>still<sp/>be<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RunAllTests();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clears<sp/>the<sp/>results<sp/>of<sp/>all<sp/>tests,<sp/>except<sp/>the<sp/>ad<sp/>hoc<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="classtesting_1_1internal_1_1UnitTestImpl_1a96c2a5b23541ef01020c402644563ba1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a96c2a5b23541ef01020c402644563ba1" kindref="member">ClearNonAdHocTestResult</ref>()<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1a52f5504ed65d116201ccb8f99a44fd7e" kindref="member">ForEach</ref>(test_cases_,<sp/><ref refid="classtesting_1_1TestCase_1a1c05fe33863b79b1b1ed19e665a1cea7" kindref="member">TestCase::ClearTestCaseResult</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clears<sp/>the<sp/>results<sp/>of<sp/>ad-hoc<sp/>test<sp/>assertions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="classtesting_1_1internal_1_1UnitTestImpl_1ac44629cc4fa12b788779d4aa76939510" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ac44629cc4fa12b788779d4aa76939510" kindref="member">ClearAdHocTestResult</ref>()<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>ad_hoc_test_result_.Clear();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>TestProperty<sp/>to<sp/>the<sp/>current<sp/>TestResult<sp/>object<sp/>when<sp/>invoked<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>context<sp/>of<sp/>a<sp/>test<sp/>or<sp/>a<sp/>test<sp/>case,<sp/>or<sp/>to<sp/>the<sp/>global<sp/>property<sp/>set.<sp/>If<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>already<sp/>contains<sp/>a<sp/>property<sp/>with<sp/>the<sp/>same<sp/>key,<sp/>the<sp/>value<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RecordProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref>&amp;<sp/>test_property);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="classtesting_1_1internal_1_1UnitTestImpl_1acc5ffd3f9bc2e87bb3dba4218f58af43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1acc5ffd3f9bc2e87bb3dba4218f58af43" kindref="member">ReactionToSharding</ref><sp/>{</highlight></codeline>
<codeline lineno="718" refid="classtesting_1_1internal_1_1UnitTestImpl_1acc5ffd3f9bc2e87bb3dba4218f58af43abec11f1c4bb8a3e2b99fa8328bccd58c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1acc5ffd3f9bc2e87bb3dba4218f58af43abec11f1c4bb8a3e2b99fa8328bccd58c" kindref="member">HONOR_SHARDING_PROTOCOL</ref>,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>IGNORE_SHARDING_PROTOCOL</highlight></codeline>
<codeline lineno="720" refid="classtesting_1_1internal_1_1UnitTestImpl_1acc5ffd3f9bc2e87bb3dba4218f58af43a68bd0b7e6a7bead14c93d1a42144095a" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Matches<sp/>the<sp/>full<sp/>name<sp/>of<sp/>each<sp/>test<sp/>against<sp/>the<sp/>user-specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>to<sp/>decide<sp/>whether<sp/>the<sp/>test<sp/>should<sp/>run,<sp/>then<sp/>records<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>result<sp/>in<sp/>each<sp/>TestCase<sp/>and<sp/>TestInfo<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>shard_tests<sp/>==<sp/>HONOR_SHARDING_PROTOCOL,<sp/>further<sp/>filters<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>sharding<sp/>variables<sp/>in<sp/>the<sp/>environment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>tests<sp/>that<sp/>should<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FilterTests(ReactionToSharding<sp/>shard_tests);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>the<sp/>names<sp/>of<sp/>the<sp/>tests<sp/>matching<sp/>the<sp/>user-specified<sp/>filter<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ListTestsMatchingFilter();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="classtesting_1_1internal_1_1UnitTestImpl_1ae1f98925197cf344a23a7400deeee4dc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ae1f98925197cf344a23a7400deeee4dc" kindref="member">current_test_case</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_test_case_;<sp/>}</highlight></codeline>
<codeline lineno="734" refid="classtesting_1_1internal_1_1UnitTestImpl_1a8d303ebdcf5989e96d3ed96fb7255102" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a8d303ebdcf5989e96d3ed96fb7255102" kindref="member">current_test_info</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_test_info_;<sp/>}</highlight></codeline>
<codeline lineno="735" refid="classtesting_1_1internal_1_1UnitTestImpl_1a5e4cc3139e60371bd7898033c9b1c56d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a5e4cc3139e60371bd7898033c9b1c56d" kindref="member">current_test_info</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_test_info_;<sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>vector<sp/>of<sp/>environments<sp/>that<sp/>need<sp/>to<sp/>be<sp/>set-up/torn-down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before/after<sp/>the<sp/>tests<sp/>are<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739" refid="classtesting_1_1internal_1_1UnitTestImpl_1aa1489e6a2378d64d68bc01963ea5db4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;Environment*&gt;</ref>&amp;<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1aa1489e6a2378d64d68bc01963ea5db4a" kindref="member">environments</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>environments_;<sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters<sp/>for<sp/>the<sp/>per-thread<sp/>Google<sp/>Test<sp/>trace<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742" refid="classtesting_1_1internal_1_1UnitTestImpl_1af8c7c0a0c954e36d83e6e4690d3fb938" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;TraceInfo&gt;</ref>&amp;<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1af8c7c0a0c954e36d83e6e4690d3fb938" kindref="member">gtest_trace_stack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(gtest_trace_stack_.pointer());</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745" refid="classtesting_1_1internal_1_1UnitTestImpl_1ad82fed50f13f13f11867af9dad4a2cf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;TraceInfo&gt;</ref>&amp;<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ad82fed50f13f13f11867af9dad4a2cf6" kindref="member">gtest_trace_stack</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gtest_trace_stack_.get();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitDeathTestSubprocessControlInfo()<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_run_death_test_flag_.reset(ParseInternalRunDeathTestFlag());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>parsed<sp/>--gtest_internal_run_death_test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flag,<sp/>or<sp/>NULL<sp/>if<sp/>that<sp/>flag<sp/>was<sp/>not<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>information<sp/>is<sp/>useful<sp/>only<sp/>in<sp/>a<sp/>death<sp/>test<sp/>child<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>not<sp/>be<sp/>called<sp/>before<sp/>a<sp/>call<sp/>to<sp/>InitGoogleTest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InternalRunDeathTestFlag*<sp/>internal_run_death_test_flag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internal_run_death_test_flag_.get();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>current<sp/>death<sp/>test<sp/>factory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>internal::DeathTestFactory*<sp/>death_test_factory()<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>death_test_factory_.get();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SuppressTestEventsIfInSubprocess();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReplaceDeathTestFactory;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>event<sp/>listener<sp/>performing<sp/>XML<sp/>output<sp/>as<sp/>specified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UnitTestOptions.<sp/>Must<sp/>not<sp/>be<sp/>called<sp/>before<sp/>InitGoogleTest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigureXmlOutput();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_CAN_STREAM_RESULTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>event<sp/>listener<sp/>for<sp/>streaming<sp/>test<sp/>results<sp/>to<sp/>a<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>not<sp/>be<sp/>called<sp/>before<sp/>InitGoogleTest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConfigureStreamingOutput();</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Performs<sp/>initialization<sp/>dependent<sp/>upon<sp/>flag<sp/>values<sp/>obtained<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ParseGoogleTestFlagsOnly.<sp/><sp/>Is<sp/>called<sp/>from<sp/>InitGoogleTest<sp/>after<sp/>the<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ParseGoogleTestFlagsOnly.<sp/><sp/>In<sp/>case<sp/>a<sp/>user<sp/>neglects<sp/>to<sp/>call<sp/>InitGoogleTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>is<sp/>also<sp/>called<sp/>from<sp/>RunAllTests.<sp/><sp/>Since<sp/>this<sp/>function<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>more<sp/>than<sp/>once,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>idempotent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PostFlagParsingInit();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>random<sp/>seed<sp/>used<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>test<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="classtesting_1_1internal_1_1UnitTestImpl_1a625b9fb6d17b008c44fc902255e6343c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a625b9fb6d17b008c44fc902255e6343c" kindref="member">random_seed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>random_seed_;<sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="classtesting_1_1internal_1_1UnitTestImpl_1ab3b45b5eb4d583219a3602011ea44347" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ab3b45b5eb4d583219a3602011ea44347" kindref="member">random</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;random_;<sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shuffles<sp/>all<sp/>test<sp/>cases,<sp/>and<sp/>the<sp/>tests<sp/>within<sp/>each<sp/>test<sp/>case,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>making<sp/>sure<sp/>that<sp/>death<sp/>tests<sp/>are<sp/>still<sp/>run<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShuffleTests();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restores<sp/>the<sp/>test<sp/>cases<sp/>and<sp/>tests<sp/>to<sp/>their<sp/>order<sp/>before<sp/>the<sp/>first<sp/>shuffle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UnshuffleTests();</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>value<sp/>of<sp/>GTEST_FLAG(catch_exceptions)<sp/>at<sp/>the<sp/>moment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UnitTest::Run()<sp/>starts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803" refid="classtesting_1_1internal_1_1UnitTestImpl_1aa311b980783a9cfb547831f7b19e3f3a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1aa311b980783a9cfb547831f7b19e3f3a" kindref="member">catch_exceptions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>catch_exceptions_;<sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="806" refid="classtesting_1_1internal_1_1UnitTestImpl_1a893404438388dec058dc5c02e8f9a014" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>class<sp/>::testing::UnitTest;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>UnitTest::Run()<sp/>to<sp/>capture<sp/>the<sp/>state<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_FLAG(catch_exceptions)<sp/>at<sp/>the<sp/>moment<sp/>it<sp/>starts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810" refid="classtesting_1_1internal_1_1UnitTestImpl_1aefec23506cd772c3abc536cda301d926" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1aefec23506cd772c3abc536cda301d926" kindref="member">set_catch_exceptions</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/>catch_exceptions_<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>UnitTest<sp/>object<sp/>that<sp/>owns<sp/>this<sp/>implementation<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="classtesting_1_1internal_1_1UnitTestImpl_1adabbbc8985202ce655d50746bd383eae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1UnitTest" kindref="compound">UnitTest</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1adabbbc8985202ce655d50746bd383eae" kindref="member">parent_</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>working<sp/>directory<sp/>when<sp/>the<sp/>first<sp/>TEST()<sp/>or<sp/>TEST_F()<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>executed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="classtesting_1_1internal_1_1UnitTestImpl_1aaf1f1d4cbb2f681ded9bbf4c6075430c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1FilePath" kindref="compound">internal::FilePath</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1aaf1f1d4cbb2f681ded9bbf4c6075430c" kindref="member">original_working_dir_</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>test<sp/>part<sp/>result<sp/>reporters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="classtesting_1_1internal_1_1UnitTestImpl_1a645122eda4d8250f3e8139309510705e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1DefaultGlobalTestPartResultReporter" kindref="compound">DefaultGlobalTestPartResultReporter</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a645122eda4d8250f3e8139309510705e" kindref="member">default_global_test_part_result_reporter_</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1DefaultPerThreadTestPartResultReporter" kindref="compound">DefaultPerThreadTestPartResultReporter</ref></highlight></codeline>
<codeline lineno="822" refid="classtesting_1_1internal_1_1UnitTestImpl_1a261ddbea097ad3b43b8b510a4964f390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a261ddbea097ad3b43b8b510a4964f390" kindref="member">default_per_thread_test_part_result_reporter_</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Points<sp/>to<sp/>(but<sp/>doesn&apos;t<sp/>own)<sp/>the<sp/>global<sp/>test<sp/>part<sp/>result<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="classtesting_1_1internal_1_1UnitTestImpl_1ab9a275094df6adc7e16a92133a692c3e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestPartResultReporterInterface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ab9a275094df6adc7e16a92133a692c3e" kindref="member">global_test_part_result_repoter_</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Protects<sp/>read<sp/>and<sp/>write<sp/>access<sp/>to<sp/>global_test_part_result_reporter_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="classtesting_1_1internal_1_1UnitTestImpl_1a57153c5c8caa229f0a62f35ab99f0a56" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1Mutex" kindref="compound">internal::Mutex</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a57153c5c8caa229f0a62f35ab99f0a56" kindref="member">global_test_part_result_reporter_mutex_</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Points<sp/>to<sp/>(but<sp/>doesn&apos;t<sp/>own)<sp/>the<sp/>per-thread<sp/>test<sp/>part<sp/>result<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal" kindref="compound">internal::ThreadLocal&lt;TestPartResultReporterInterface*&gt;</ref></highlight></codeline>
<codeline lineno="832" refid="classtesting_1_1internal_1_1UnitTestImpl_1a23ebe35dfe19dcda8e7b17e81f2cb4bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a23ebe35dfe19dcda8e7b17e81f2cb4bc" kindref="member">per_thread_test_part_result_reporter_</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>of<sp/>environments<sp/>that<sp/>need<sp/>to<sp/>be<sp/>set-up/torn-down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before/after<sp/>the<sp/>tests<sp/>are<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="classtesting_1_1internal_1_1UnitTestImpl_1a1d2320ba1e4e1cad8d624bbb222501fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;Environment*&gt;</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a1d2320ba1e4e1cad8d624bbb222501fb" kindref="member">environments_</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>of<sp/>TestCases<sp/>in<sp/>their<sp/>original<sp/>order.<sp/><sp/>It<sp/>owns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>elements<sp/>in<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="classtesting_1_1internal_1_1UnitTestImpl_1a79ec0f733ada2898efd1a7fbd8587fb3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;TestCase*&gt;</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a79ec0f733ada2898efd1a7fbd8587fb3" kindref="member">test_cases_</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Provides<sp/>a<sp/>level<sp/>of<sp/>indirection<sp/>for<sp/>the<sp/>test<sp/>case<sp/>list<sp/>to<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>easy<sp/>shuffling<sp/>and<sp/>restoring<sp/>the<sp/>test<sp/>case<sp/>order.<sp/><sp/>The<sp/>i-th</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>element<sp/>of<sp/>this<sp/>vector<sp/>is<sp/>the<sp/>index<sp/>of<sp/>the<sp/>i-th<sp/>test<sp/>case<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffled<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="classtesting_1_1internal_1_1UnitTestImpl_1a9b30891f1a9d5b5c25de2bef0f0bb49a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;int&gt;</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a9b30891f1a9d5b5c25de2bef0f0bb49a" kindref="member">test_case_indices_</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ParameterizedTestRegistry<sp/>object<sp/>used<sp/>to<sp/>register<sp/>value-parameterized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>internal::ParameterizedTestCaseRegistry<sp/>parameterized_test_registry_;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indicates<sp/>whether<sp/>RegisterParameterizedTests()<sp/>has<sp/>been<sp/>called<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parameterized_tests_registered_;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_PARAM_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>the<sp/>last<sp/>death<sp/>test<sp/>case<sp/>registered.<sp/><sp/>Initially<sp/>-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="classtesting_1_1internal_1_1UnitTestImpl_1afd663a104bb0a6df2c5143454f78e305" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1afd663a104bb0a6df2c5143454f78e305" kindref="member">last_death_test_case_</ref>;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>points<sp/>to<sp/>the<sp/>TestCase<sp/>for<sp/>the<sp/>currently<sp/>running<sp/>test.<sp/><sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>as<sp/>Google<sp/>Test<sp/>goes<sp/>through<sp/>one<sp/>test<sp/>case<sp/>after<sp/>another.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>no<sp/>test<sp/>is<sp/>running,<sp/>this<sp/>is<sp/>set<sp/>to<sp/>NULL<sp/>and<sp/>Google<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stores<sp/>assertion<sp/>results<sp/>in<sp/>ad_hoc_test_result_.<sp/><sp/>Initially<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="classtesting_1_1internal_1_1UnitTestImpl_1a3b346729d3940f065e05c69c434ebb3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a3b346729d3940f065e05c69c434ebb3f" kindref="member">current_test_case_</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>points<sp/>to<sp/>the<sp/>TestInfo<sp/>for<sp/>the<sp/>currently<sp/>running<sp/>test.<sp/><sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>as<sp/>Google<sp/>Test<sp/>goes<sp/>through<sp/>one<sp/>test<sp/>after<sp/>another.<sp/><sp/>When</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>test<sp/>is<sp/>running,<sp/>this<sp/>is<sp/>set<sp/>to<sp/>NULL<sp/>and<sp/>Google<sp/>Test<sp/>stores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assertion<sp/>results<sp/>in<sp/>ad_hoc_test_result_.<sp/><sp/>Initially<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="classtesting_1_1internal_1_1UnitTestImpl_1a56128aac0fb5be45993715d1130b0610" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a56128aac0fb5be45993715d1130b0610" kindref="member">current_test_info_</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normally,<sp/>a<sp/>user<sp/>only<sp/>writes<sp/>assertions<sp/>inside<sp/>a<sp/>TEST<sp/>or<sp/>TEST_F,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>inside<sp/>a<sp/>function<sp/>called<sp/>by<sp/>a<sp/>TEST<sp/>or<sp/>TEST_F.<sp/><sp/>Since<sp/>Google</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>keeps<sp/>track<sp/>of<sp/>which<sp/>test<sp/>is<sp/>current<sp/>running,<sp/>it<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>associate<sp/>such<sp/>an<sp/>assertion<sp/>with<sp/>the<sp/>test<sp/>it<sp/>belongs<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>assertion<sp/>is<sp/>encountered<sp/>when<sp/>no<sp/>TEST<sp/>or<sp/>TEST_F<sp/>is<sp/>running,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Google<sp/>Test<sp/>attributes<sp/>the<sp/>assertion<sp/>result<sp/>to<sp/>an<sp/>imaginary<sp/>&quot;ad<sp/>hoc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test,<sp/>and<sp/>records<sp/>the<sp/>result<sp/>in<sp/>ad_hoc_test_result_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="classtesting_1_1internal_1_1UnitTestImpl_1a15355228a7140a08f9e2f333aa934ccd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a15355228a7140a08f9e2f333aa934ccd" kindref="member">ad_hoc_test_result_</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>list<sp/>of<sp/>event<sp/>listeners<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>track<sp/>events<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Google<sp/>Test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="classtesting_1_1internal_1_1UnitTestImpl_1a16c3caa0bac1a8dce650649760de30d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1TestEventListeners" kindref="compound">TestEventListeners</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a16c3caa0bac1a8dce650649760de30d2" kindref="member">listeners_</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>OS<sp/>stack<sp/>trace<sp/>getter.<sp/><sp/>Will<sp/>be<sp/>deleted<sp/>when<sp/>the<sp/>UnitTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>is<sp/>destructed.<sp/><sp/>By<sp/>default,<sp/>an<sp/>OsStackTraceGetter<sp/>is<sp/>used,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>user<sp/>can<sp/>set<sp/>this<sp/>field<sp/>to<sp/>use<sp/>a<sp/>custom<sp/>getter<sp/>if<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>desired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="classtesting_1_1internal_1_1UnitTestImpl_1a16b34d9194ca9552f581e472e9b18494" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1OsStackTraceGetterInterface" kindref="compound">OsStackTraceGetterInterface</ref>*<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a16b34d9194ca9552f581e472e9b18494" kindref="member">os_stack_trace_getter_</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>iff<sp/>PostFlagParsingInit()<sp/>has<sp/>been<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="classtesting_1_1internal_1_1UnitTestImpl_1ab4c7d8a9ff3edbd8a98f91c4afaf3bb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1ab4c7d8a9ff3edbd8a98f91c4afaf3bb8" kindref="member">post_flag_parse_init_performed_</ref>;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>random<sp/>number<sp/>seed<sp/>used<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>test<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="classtesting_1_1internal_1_1UnitTestImpl_1a0afcc95308ebfacb8d0f53790e77e1ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a0afcc95308ebfacb8d0f53790e77e1ab" kindref="member">random_seed_</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="classtesting_1_1internal_1_1UnitTestImpl_1a08551d7ff0ebb976ec82294ded8113ea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a08551d7ff0ebb976ec82294ded8113ea" kindref="member">random_</ref>;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>time<sp/>of<sp/>the<sp/>test<sp/>program<sp/>start,<sp/>in<sp/>ms<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UNIX<sp/>epoch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="classtesting_1_1internal_1_1UnitTestImpl_1a2114799ed634ee849b9dcd9728f9b7b6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a2114799ed634ee849b9dcd9728f9b7b6" kindref="member">start_timestamp_</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>long<sp/>the<sp/>test<sp/>took<sp/>to<sp/>run,<sp/>in<sp/>milliseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="classtesting_1_1internal_1_1UnitTestImpl_1a06e0445298c6026bee71bb2bb7aae604" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a06e0445298c6026bee71bb2bb7aae604" kindref="member">elapsed_time_</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decomposed<sp/>components<sp/>of<sp/>the<sp/>gtest_internal_run_death_test<sp/>flag,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parsed<sp/>when<sp/>RUN_ALL_TESTS<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr" kindref="compound">internal::scoped_ptr&lt;InternalRunDeathTestFlag&gt;</ref><sp/>internal_run_death_test_flag_;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1scoped__ptr" kindref="compound">internal::scoped_ptr&lt;internal::DeathTestFactory&gt;</ref><sp/>death_test_factory_;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>per-thread<sp/>stack<sp/>of<sp/>traces<sp/>created<sp/>by<sp/>the<sp/>SCOPED_TRACE()<sp/>macro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916" refid="classtesting_1_1internal_1_1UnitTestImpl_1a73a797cf2b20129cb252b14c5fd9a0af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1ThreadLocal" kindref="compound">internal::ThreadLocal&lt;std::vector&lt;TraceInfo&gt;</ref><sp/>&gt;<sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a73a797cf2b20129cb252b14c5fd9a0af" kindref="member">gtest_trace_stack_</ref>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>of<sp/>GTEST_FLAG(catch_exceptions)<sp/>at<sp/>the<sp/>moment<sp/>RunAllTests()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>starts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920" refid="classtesting_1_1internal_1_1UnitTestImpl_1a2cc0c6f466730b1d6e884738344b8e33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a2cc0c6f466730b1d6e884738344b8e33" kindref="member">catch_exceptions_</ref>;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="classtesting_1_1internal_1_1UnitTestImpl_1a9c8a7b2571705040ead6a61645278e18" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl_1a9c8a7b2571705040ead6a61645278e18" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>UnitTestImpl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>function<sp/>for<sp/>accessing<sp/>the<sp/>global<sp/>UnitTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927" refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref>*<sp/><ref refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" kindref="member">GetUnitTestImpl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1UnitTest_1a24192400b70b3b946746954e9574fb8e" kindref="member">UnitTest::GetInstance</ref>()-&gt;<ref refid="classtesting_1_1UnitTest_1a4df5d11a58affb337d7fa62eaa07690e" kindref="member">impl</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_USES_SIMPLE_RE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>helper<sp/>functions<sp/>for<sp/>implementing<sp/>the<sp/>simple<sp/>regular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expression<sp/>matcher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsInSet(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAsciiDigit(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAsciiPunct(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsRepeat(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAsciiWhiteSpace(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAsciiWordChar(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsValidEscape(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AtomMatchesChar(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>escaped,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pattern,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ValidateRegex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MatchRegexAtHead(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MatchRepetitionAndRegexAtHead(</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>escaped,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>repeat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MatchRegexAnywhere(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>regex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_USES_SIMPLE_RE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>the<sp/>command<sp/>line<sp/>for<sp/>Google<sp/>Test<sp/>flags,<sp/>without<sp/>initializing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">//<sp/>other<sp/>parts<sp/>of<sp/>Google<sp/>Test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a472880afbcc592a41e3d623e2dec8412" kindref="member">ParseGoogleTestFlagsOnly</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesting_1_1internal_1a472880afbcc592a41e3d623e2dec8412" kindref="member">ParseGoogleTestFlagsOnly</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>argc,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>argv);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>message<sp/>describing<sp/>the<sp/>last<sp/>system<sp/>error,<sp/>regardless<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>platform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>GetLastErrnoDescription();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Attempts<sp/>to<sp/>parse<sp/>a<sp/>string<sp/>into<sp/>a<sp/>positive<sp/>integer<sp/>pointed<sp/>to<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>parameter.<sp/><sp/>Returns<sp/>true<sp/>if<sp/>that<sp/>is<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST<sp/>implies<sp/>that<sp/>we<sp/>have<sp/>::std::string,<sp/>so<sp/>we<sp/>can<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParseNaturalNumber(<ref refid="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" kindref="member">const ::std::string</ref>&amp;<sp/>str,<sp/>Integer*<sp/>number)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>fast<sp/>if<sp/>the<sp/>given<sp/>string<sp/>does<sp/>not<sp/>begin<sp/>with<sp/>a<sp/>digit;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>bypasses<sp/>strtoXXX&apos;s<sp/>&quot;optional<sp/>leading<sp/>whitespace<sp/>and<sp/>plus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>minus<sp/>sign&quot;<sp/>semantics,<sp/>which<sp/>are<sp/>undesirable<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.empty()<sp/>||<sp/>!<ref refid="namespacetesting_1_1internal_1a4bd96b7fa6486802d33ddc217af55a39" kindref="member">IsDigit</ref>(str[0]))<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>end;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BiggestConvertible<sp/>is<sp/>the<sp/>largest<sp/>integer<sp/>type<sp/>that<sp/>system-provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>string-to-number<sp/>conversion<sp/>routines<sp/>can<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>GTEST_OS_WINDOWS<sp/>&amp;&amp;<sp/>!defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MSVC<sp/>and<sp/>C++<sp/>Builder<sp/>define<sp/>__int64<sp/>instead<sp/>of<sp/>the<sp/>standard<sp/>long<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64<sp/>BiggestConvertible;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BiggestConvertible<sp/>parsed<sp/>=<sp/>_strtoui64(str.c_str(),<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>BiggestConvertible;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BiggestConvertible<sp/>parsed<sp/>=<sp/>strtoull(str.c_str(),<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS<sp/>&amp;&amp;<sp/>!defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parse_success<sp/>=<sp/>*end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(vladl@google.com):<sp/>Convert<sp/>this<sp/>to<sp/>compile<sp/>time<sp/>assertion<sp/>when<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Integer)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(parsed));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Integer<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Integer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(parsed);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parse_success<sp/>&amp;&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">BiggestConvertible</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result)<sp/>==<sp/>parsed)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>*number<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TestResult<sp/>contains<sp/>some<sp/>private<sp/>methods<sp/>that<sp/>should<sp/>be<sp/>hidden<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test<sp/>user<sp/>but<sp/>are<sp/>required<sp/>for<sp/>testing.<sp/>This<sp/>class<sp/>allow<sp/>our<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>access<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>supplied<sp/>only<sp/>for<sp/>the<sp/>purpose<sp/>of<sp/>testing<sp/>Google<sp/>Test&apos;s<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructs.<sp/>Do<sp/>not<sp/>use<sp/>it<sp/>in<sp/>user<sp/>tests,<sp/>either<sp/>directly<sp/>or<sp/>indirectly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="classtesting_1_1internal_1_1TestResultAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesting_1_1internal_1_1TestResultAccessor" kindref="compound">TestResultAccessor</ref><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1016" refid="classtesting_1_1internal_1_1TestResultAccessor_1abcc4b32d1b201eeef92f0ec0ae161cf9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TestResultAccessor_1abcc4b32d1b201eeef92f0ec0ae161cf9" kindref="member">RecordProperty</ref>(<ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref>*<sp/>test_result,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>xml_element,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestProperty" kindref="compound">TestProperty</ref>&amp;<sp/>property)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>test_result-&gt;<ref refid="classtesting_1_1TestResult_1ac253b0fd7ea70f457e9517e415eac32d" kindref="member">RecordProperty</ref>(xml_element,<sp/>property);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="classtesting_1_1internal_1_1TestResultAccessor_1a53c626632bac65d82d88e432072b866b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1internal_1_1TestResultAccessor_1a53c626632bac65d82d88e432072b866b" kindref="member">ClearTestPartResults</ref>(<ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref>*<sp/>test_result)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>test_result-&gt;<ref refid="classtesting_1_1TestResult_1aa11ed718e0a76a39e6380e5ddce7cae2" kindref="member">ClearTestPartResults</ref>();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="classtesting_1_1internal_1_1TestResultAccessor_1a55d771904317c1b0cc380104d175f1db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector&lt;testing::TestPartResult&gt;</ref>&amp;<sp/><ref refid="classtesting_1_1internal_1_1TestResultAccessor_1a55d771904317c1b0cc380104d175f1db" kindref="member">test_part_results</ref>(</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1TestResult" kindref="compound">TestResult</ref>&amp;<sp/>test_result)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_result.<ref refid="classtesting_1_1TestResult_1a2964c3a12ef6ef9bcb47599374514432" kindref="member">test_part_results</ref>();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_CAN_STREAM_RESULTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Streams<sp/>test<sp/>results<sp/>to<sp/>the<sp/>given<sp/>port<sp/>on<sp/>the<sp/>given<sp/>host<sp/>machine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/>StreamingListener<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesting_1_1EmptyTestEventListener" kindref="compound">EmptyTestEventListener</ref><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Abstract<sp/>base<sp/>class<sp/>for<sp/>writing<sp/>strings<sp/>to<sp/>a<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AbstractSocketWriter<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~AbstractSocketWriter()<sp/>{}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sends<sp/>a<sp/>string<sp/>to<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Send(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>message)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CloseConnection()<sp/>{}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sends<sp/>a<sp/>string<sp/>and<sp/>a<sp/>newline<sp/>to<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SendLn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Send(message<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Concrete<sp/>class<sp/>for<sp/>actually<sp/>writing<sp/>strings<sp/>to<sp/>a<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SocketWriter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AbstractSocketWriter<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>SocketWriter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>port)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sockfd_(-1),<sp/>host_name_(host),<sp/>port_num_(port)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MakeConnection();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~SocketWriter()<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sockfd_<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseConnection();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sends<sp/>a<sp/>string<sp/>to<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Send(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(sockfd_<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Send()<sp/>can<sp/>be<sp/>called<sp/>only<sp/>when<sp/>there<sp/>is<sp/>a<sp/>connection.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(message.length());</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write(sockfd_,<sp/>message.c_str(),<sp/>len)<sp/>!=<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1a8ef4cb4c465db8c15464aecc6d9510ef" kindref="member">GTEST_LOG_</ref>(WARNING)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;stream_result_to:<sp/>failed<sp/>to<sp/>stream<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>host_name_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>port_num_;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>client<sp/>socket<sp/>and<sp/>connects<sp/>to<sp/>the<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeConnection();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Closes<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CloseConnection()<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" kindref="member">GTEST_CHECK_</ref>(sockfd_<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CloseConnection()<sp/>can<sp/>be<sp/>called<sp/>only<sp/>when<sp/>there<sp/>is<sp/>a<sp/>connection.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close(sockfd_);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sockfd_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sockfd_;<sp/><sp/></highlight><highlight class="comment">//<sp/>socket<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>host_name_;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>port_num_;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gtest-port_8h_1aed8c1888c32b588b0681e88b95031e29" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(SocketWriter);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>SocketWriter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Escapes<sp/>&apos;=&apos;,<sp/>&apos;&amp;&apos;,<sp/>&apos;%&apos;,<sp/>and<sp/>&apos;\n&apos;<sp/>characters<sp/>in<sp/>str<sp/>as<sp/>&quot;%xx&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>UrlEncode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>StreamingListener(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>host,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>port)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>socket_writer_(new<sp/>SocketWriter(host,<sp/>port))<sp/>{<sp/>Start();<sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>StreamingListener(AbstractSocketWriter*<sp/>socket_writer)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>socket_writer_(socket_writer)<sp/>{<sp/>Start();<sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestProgramStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnitTest&amp;<sp/></highlight><highlight class="comment">/*<sp/>unit_test<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestProgramStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestProgramEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnitTest&amp;<sp/>unit_test)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>Google<sp/>Test<sp/>current<sp/>only<sp/>report<sp/>elapsed<sp/>time<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>iteration,<sp/>not<sp/>for<sp/>the<sp/>entire<sp/>test<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestProgramEnd&amp;passed=&quot;</highlight><highlight class="normal"><sp/>+<sp/>FormatBool(unit_test.Passed()));</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>the<sp/>streaming<sp/>server<sp/>to<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>socket_writer_-&gt;CloseConnection();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestIterationStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnitTest&amp;<sp/></highlight><highlight class="comment">/*<sp/>unit_test<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration)<sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestIterationStart&amp;iteration=&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>(iteration));</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestIterationEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnitTest&amp;<sp/>unit_test,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>iteration<sp/>*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestIterationEnd&amp;passed=&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FormatBool(unit_test.Passed())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&amp;elapsed_time=&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>(unit_test.elapsed_time())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestCaseStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestCase&amp;<sp/>test_case)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;event=TestCaseStart&amp;name=&quot;</highlight><highlight class="normal">)<sp/>+<sp/>test_case.name());</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestCaseEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestCase&amp;<sp/>test_case)<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestCaseEnd&amp;passed=&quot;</highlight><highlight class="normal"><sp/>+<sp/>FormatBool(test_case.Passed())</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&amp;elapsed_time=&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>(test_case.elapsed_time())</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestStart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestInfo&amp;<sp/>test_info)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>(</highlight><highlight class="stringliteral">&quot;event=TestStart&amp;name=&quot;</highlight><highlight class="normal">)<sp/>+<sp/>test_info.name());</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestEnd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestInfo&amp;<sp/>test_info)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestEnd&amp;passed=&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FormatBool((test_info.result())-&gt;Passed())<sp/>+</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;elapsed_time=&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>((test_info.result())-&gt;elapsed_time())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTestPartResult(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TestPartResult&amp;<sp/>test_part_result)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_name<sp/>=<sp/>test_part_result.file_name();</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file_name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>SendLn(</highlight><highlight class="stringliteral">&quot;event=TestPartResult&amp;file=&quot;</highlight><highlight class="normal"><sp/>+<sp/>UrlEncode(file_name)<sp/>+</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;line=&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>(test_part_result.line_number())<sp/>+</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&amp;message=&quot;</highlight><highlight class="normal"><sp/>+<sp/>UrlEncode(test_part_result.message()));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sends<sp/>the<sp/>given<sp/>message<sp/>and<sp/>a<sp/>newline<sp/>to<sp/>the<sp/>socket.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SendLn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>message)<sp/>{<sp/>socket_writer_-&gt;SendLn(message);<sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Called<sp/>at<sp/>the<sp/>start<sp/>of<sp/>streaming<sp/>to<sp/>notify<sp/>the<sp/>receiver<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>protocol<sp/>we<sp/>are<sp/>using.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start()<sp/>{<sp/>SendLn(</highlight><highlight class="stringliteral">&quot;gtest_streaming_protocol_version=1.0&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>FormatBool(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scoped_ptr&lt;AbstractSocketWriter&gt;<sp/>socket_writer_;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><ref refid="gtest-port_8h_1aed8c1888c32b588b0681e88b95031e29" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(StreamingListener);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>StreamingListener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_CAN_STREAM_RESULTS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_SRC_GTEST_INTERNAL_INL_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/googletest/src/gtest-internal-inl.h"/>
  </compounddef>
</doxygen>

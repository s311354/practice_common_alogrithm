<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d4/d59/gtest-death-test_8h" kind="file" language="C++">
    <compoundname>gtest-death-test.h</compoundname>
    <includes refid="d0/d1a/gtest-death-test-internal_8h" local="yes">gtest/internal/gtest-death-test-internal.h</includes>
    <includedby refid="de/d50/gtest-death-test_8cc" local="yes">lib/googletest/src/gtest-death-test.cc</includedby>
    <includedby refid="d8/d73/gtest_8h" local="yes">lib/googletest/include/gtest/gtest.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>sys/stat.h</label>
      </node>
      <node id="23">
        <label>typeinfo</label>
        <link refid="cpp/header/typeinfo" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="25">
        <label>float.h</label>
      </node>
      <node id="18">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h"/>
      </node>
      <node id="32">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="26">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="29">
        <label>set</label>
        <link refid="cpp/header/set" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="31">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="33">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="d9/d97/gtest-type-util_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unistd.h</label>
      </node>
      <node id="27">
        <label>limits</label>
        <link refid="cpp/header/limits" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>utility</label>
        <link refid="cpp/header/utility" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
        <link refid="cpp/header/string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="30">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>strings.h</label>
      </node>
      <node id="5">
        <label>ctype.h</label>
      </node>
      <node id="13">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="22">
        <label>regex.h</label>
      </node>
      <node id="19">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h"/>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="28">
        <label>map</label>
        <link refid="cpp/header/map" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>lib/googletest/include/gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/googletest/src/gtest-internal-inl.h</label>
        <link refid="d0/da1/gtest-internal-inl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/googletest/src/gtest-all.cc</label>
        <link refid="d1/d8c/gtest-all_8cc"/>
      </node>
      <node id="2">
        <label>lib/googletest/src/gtest-death-test.cc</label>
        <link refid="de/d50/gtest-death-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>lib/googletest/src/gtest_main.cc</label>
        <link refid="d3/d3a/gtest__main_8cc"/>
      </node>
      <node id="9">
        <label>lib/googletest/src/gtest.cc</label>
        <link refid="df/d5b/gtest_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>lib/googletest/src/gtest-typed-test.cc</label>
        <link refid="d9/d5a/gtest-typed-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lib/googletest/src/gtest-test-part.cc</label>
        <link refid="d3/dc2/gtest-test-part_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>lib/googletest/src/gtest-port.cc</label>
        <link refid="df/d09/gtest-port_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>lib/googletest/include/gtest/gtest-spi.h</label>
        <link refid="dc/dbe/gtest-spi_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>queue_linked_list/tests/queue_linked_list_unit_test.cc</label>
        <link refid="d9/df4/queue__linked__list__unit__test_8cc"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="d0/d75/namespacetesting">testing</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="d4/d59/gtest-death-test_8h_1ab2f0f25b46353767179a49ebd15b7345" prot="public" static="no">
        <name>ASSERT_DEATH_IF_SUPPORTED</name>
        <param><defname>statement</defname></param>
        <param><defname>regex</defname></param>
        <initializer>    <ref refid="d0/d1a/gtest-death-test-internal_8h_1a29a145cda8bd2d0c6a78b0ac1d670d18" kindref="member">GTEST_UNSUPPORTED_DEATH_TEST_</ref>(statement, regex, return)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-death-test.h" line="288" column="10" bodyfile="lib/googletest/include/gtest/gtest-death-test.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d4/d59/gtest-death-test_8h_1a8564de0e012dd0898949c513d1571f8b" prot="public" static="no">
        <name>EXPECT_DEATH_IF_SUPPORTED</name>
        <param><defname>statement</defname></param>
        <param><defname>regex</defname></param>
        <initializer>    <ref refid="d0/d1a/gtest-death-test-internal_8h_1a29a145cda8bd2d0c6a78b0ac1d670d18" kindref="member">GTEST_UNSUPPORTED_DEATH_TEST_</ref>(statement, regex, )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-death-test.h" line="286" column="11" bodyfile="lib/googletest/include/gtest/gtest-death-test.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d75/namespacetesting_1a37b7e87f0a5f502c6918f37d1768c1f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::GTEST_DECLARE_string_</definition>
        <argsstring>(death_test_style)</argsstring>
        <name>GTEST_DECLARE_string_</name>
        <param>
          <type>death_test_style</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-death-test.h" line="50" column="1" declfile="lib/googletest/include/gtest/gtest-death-test.h" declline="50" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2005,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Google<sp/>C++<sp/>Testing<sp/>Framework<sp/>(Google<sp/>Test)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>header<sp/>file<sp/>defines<sp/>the<sp/>public<sp/>API<sp/>for<sp/>death<sp/>tests.<sp/><sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#included<sp/>by<sp/>gtest.h<sp/>so<sp/>a<sp/>user<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>include<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d1a/gtest-death-test-internal_8h" kindref="compound">gtest/internal/gtest-death-test-internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d75/namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>controls<sp/>the<sp/>style<sp/>of<sp/>death<sp/>tests.<sp/><sp/>Valid<sp/>values<sp/>are<sp/>&quot;threadsafe&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>meaning<sp/>that<sp/>the<sp/>death<sp/>test<sp/>child<sp/>process<sp/>will<sp/>re-execute<sp/>the<sp/>test<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>start,<sp/>running<sp/>only<sp/>a<sp/>single<sp/>death<sp/>test,<sp/>or<sp/>&quot;fast&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>meaning<sp/>that<sp/>the<sp/>child<sp/>process<sp/>will<sp/>execute<sp/>the<sp/>test<sp/>logic<sp/>immediately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>after<sp/>forking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d0/d75/namespacetesting_1a37b7e87f0a5f502c6918f37d1768c1f3" refkind="member"><highlight class="normal"><ref refid="d0/d75/namespacetesting_1a37b7e87f0a5f502c6918f37d1768c1f3" kindref="member">GTEST_DECLARE_string_</ref>(death_test_style);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>Boolean<sp/>value<sp/>indicating<sp/>whether<sp/>the<sp/>caller<sp/>is<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>executing<sp/>in<sp/>the<sp/>context<sp/>of<sp/>the<sp/>death<sp/>test<sp/>child<sp/>process.<sp/><sp/>Tools<sp/>such<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Valgrind<sp/>heap<sp/>checkers<sp/>may<sp/>need<sp/>this<sp/>to<sp/>modify<sp/>their<sp/>behavior<sp/>in<sp/>death</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tests.<sp/><sp/>IMPORTANT:<sp/>This<sp/>is<sp/>an<sp/>internal<sp/>utility.<sp/><sp/>Using<sp/>it<sp/>may<sp/>break<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation<sp/>of<sp/>death<sp/>tests.<sp/><sp/>User<sp/>code<sp/>MUST<sp/>NOT<sp/>use<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>InDeathTestChild();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>macros<sp/>are<sp/>useful<sp/>for<sp/>writing<sp/>death<sp/>tests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Here&apos;s<sp/>what<sp/>happens<sp/>when<sp/>an<sp/>ASSERT_DEATH*<sp/>or<sp/>EXPECT_DEATH*<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>executed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>1.<sp/>It<sp/>generates<sp/>a<sp/>warning<sp/>if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>thread.<sp/><sp/>This<sp/>is<sp/>because<sp/>it&apos;s<sp/>safe<sp/>to<sp/>fork()<sp/>or<sp/>clone()<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>when<sp/>there<sp/>is<sp/>a<sp/>single<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>2.<sp/>The<sp/>parent<sp/>process<sp/>clone()s<sp/>a<sp/>sub-process<sp/>and<sp/>runs<sp/>the<sp/>death</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>test<sp/>in<sp/>it;<sp/>the<sp/>sub-process<sp/>exits<sp/>with<sp/>code<sp/>0<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>death<sp/>test,<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>exited<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>3.<sp/>The<sp/>parent<sp/>process<sp/>waits<sp/>for<sp/>the<sp/>sub-process<sp/>to<sp/>terminate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>4.<sp/>The<sp/>parent<sp/>process<sp/>checks<sp/>the<sp/>exit<sp/>code<sp/>and<sp/>error<sp/>message<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>sub-process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Examples:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ASSERT_DEATH(server.SendMessage(56,<sp/>&quot;Hello&quot;),<sp/>&quot;Invalid<sp/>port<sp/>number&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>EXPECT_DEATH(server.ProcessRequest(i),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Invalid<sp/>request<sp/>.*<sp/>in<sp/>ProcessRequest()&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;Failed<sp/>to<sp/>die<sp/>on<sp/>request<sp/>&quot;<sp/>&lt;&lt;<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ASSERT_EXIT(server.ExitNow(),<sp/>::testing::ExitedWithCode(0),<sp/>&quot;Exiting&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>bool<sp/>KilledBySIGHUP(int<sp/>exit_code)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>WIFSIGNALED(exit_code)<sp/>&amp;&amp;<sp/>WTERMSIG(exit_code)<sp/>==<sp/>SIGHUP;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>ASSERT_EXIT(client.HangUpServer(),<sp/>KilledBySIGHUP,<sp/>&quot;Hanging<sp/>up!&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>regular<sp/>expressions<sp/>used<sp/>in<sp/>death<sp/>tests:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>On<sp/>POSIX-compliant<sp/>systems<sp/>(*nix),<sp/>we<sp/>use<sp/>the<sp/>&lt;regex.h&gt;<sp/>library,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>which<sp/>uses<sp/>the<sp/>POSIX<sp/>extended<sp/>regex<sp/>syntax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>On<sp/>other<sp/>platforms<sp/>(e.g.<sp/>Windows),<sp/>we<sp/>only<sp/>support<sp/>a<sp/>simple<sp/>regex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>syntax<sp/>implemented<sp/>as<sp/>part<sp/>of<sp/>Google<sp/>Test.<sp/><sp/>This<sp/>limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>implementation<sp/>should<sp/>be<sp/>enough<sp/>most<sp/>of<sp/>the<sp/>time<sp/>when<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>death<sp/>tests;<sp/>though<sp/>it<sp/>lacks<sp/>many<sp/>features<sp/>you<sp/>can<sp/>find<sp/>in<sp/>PCRE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>POSIX<sp/>extended<sp/>regex<sp/>syntax.<sp/><sp/>For<sp/>example,<sp/>we<sp/>don&apos;t<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>union<sp/>(&quot;x|y&quot;),<sp/>grouping<sp/>(&quot;(xy)&quot;),<sp/>brackets<sp/>(&quot;[xy]&quot;),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>repetition<sp/>count<sp/>(&quot;x{5,7}&quot;),<sp/>among<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Below<sp/>is<sp/>the<sp/>syntax<sp/>that<sp/>we<sp/>do<sp/>support.<sp/><sp/>We<sp/>chose<sp/>it<sp/>to<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>subset<sp/>of<sp/>both<sp/>PCRE<sp/>and<sp/>POSIX<sp/>extended<sp/>regex,<sp/>so<sp/>it&apos;s<sp/>easy<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>learn<sp/>wherever<sp/>you<sp/>come<sp/>from.<sp/><sp/>In<sp/>the<sp/>following:<sp/>&apos;A&apos;<sp/>denotes<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>literal<sp/>character,<sp/>period<sp/>(.),<sp/>or<sp/>a<sp/>single<sp/>\\<sp/>escape<sp/>sequence;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&apos;x&apos;<sp/>and<sp/>&apos;y&apos;<sp/>denote<sp/>regular<sp/>expressions;<sp/>&apos;m&apos;<sp/>and<sp/>&apos;n&apos;<sp/>are<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>natural<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/>matches<sp/>any<sp/>literal<sp/>character<sp/>c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\d<sp/><sp/><sp/>matches<sp/>any<sp/>decimal<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\D<sp/><sp/><sp/>matches<sp/>any<sp/>character<sp/>that&apos;s<sp/>not<sp/>a<sp/>decimal<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\f<sp/><sp/><sp/>matches<sp/>\f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\n<sp/><sp/><sp/>matches<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\r<sp/><sp/><sp/>matches<sp/>\r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\s<sp/><sp/><sp/>matches<sp/>any<sp/>ASCII<sp/>whitespace,<sp/>including<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\S<sp/><sp/><sp/>matches<sp/>any<sp/>character<sp/>that&apos;s<sp/>not<sp/>a<sp/>whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\t<sp/><sp/><sp/>matches<sp/>\t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\v<sp/><sp/><sp/>matches<sp/>\v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\w<sp/><sp/><sp/>matches<sp/>any<sp/>letter,<sp/>_,<sp/>or<sp/>decimal<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\W<sp/><sp/><sp/>matches<sp/>any<sp/>character<sp/>that<sp/>\\w<sp/>doesn&apos;t<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>\\c<sp/><sp/><sp/>matches<sp/>any<sp/>literal<sp/>character<sp/>c,<sp/>which<sp/>must<sp/>be<sp/>a<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.<sp/><sp/><sp/><sp/><sp/>matches<sp/>any<sp/>single<sp/>character<sp/>except<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>A?<sp/><sp/><sp/><sp/>matches<sp/>0<sp/>or<sp/>1<sp/>occurrences<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>A*<sp/><sp/><sp/><sp/>matches<sp/>0<sp/>or<sp/>many<sp/>occurrences<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>A+<sp/><sp/><sp/><sp/>matches<sp/>1<sp/>or<sp/>many<sp/>occurrences<sp/>of<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/><sp/>matches<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>string<sp/>(not<sp/>that<sp/>of<sp/>each<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>$<sp/><sp/><sp/><sp/><sp/>matches<sp/>the<sp/>end<sp/>of<sp/>a<sp/>string<sp/>(not<sp/>that<sp/>of<sp/>each<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>xy<sp/><sp/><sp/><sp/>matches<sp/>x<sp/>followed<sp/>by<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>you<sp/>accidentally<sp/>use<sp/>PCRE<sp/>or<sp/>POSIX<sp/>extended<sp/>regex<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>not<sp/>implemented<sp/>by<sp/>us,<sp/>you<sp/>will<sp/>get<sp/>a<sp/>run-time<sp/>failure.<sp/><sp/>In<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>case,<sp/>please<sp/>try<sp/>to<sp/>rewrite<sp/>your<sp/>regular<sp/>expression<sp/>within<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>above<sp/>syntax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>implementation<sp/>is<sp/>*not*<sp/>meant<sp/>to<sp/>be<sp/>as<sp/>highly<sp/>tuned<sp/>or<sp/>robust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>as<sp/>a<sp/>compiled<sp/>regex<sp/>library,<sp/>but<sp/>should<sp/>perform<sp/>well<sp/>enough<sp/>for<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>death<sp/>test,<sp/>which<sp/>already<sp/>incurs<sp/>significant<sp/>overhead<sp/>by<sp/>launching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>child<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Known<sp/>caveats:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>A<sp/>&quot;threadsafe&quot;<sp/>style<sp/>death<sp/>test<sp/>obtains<sp/>the<sp/>path<sp/>to<sp/>the<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>program<sp/>from<sp/>argv[0]<sp/>and<sp/>re-executes<sp/>it<sp/>in<sp/>the<sp/>sub-process.<sp/><sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>simplicity,<sp/>the<sp/>current<sp/>implementation<sp/>doesn&apos;t<sp/>search<sp/>the<sp/>PATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>when<sp/>launching<sp/>the<sp/>sub-process.<sp/><sp/>This<sp/>means<sp/>that<sp/>the<sp/>user<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>invoke<sp/>the<sp/>test<sp/>program<sp/>via<sp/>a<sp/>path<sp/>that<sp/>contains<sp/>at<sp/>least<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>path<sp/>separator<sp/>(e.g.<sp/>path/to/foo_test<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>/absolute/path/to/bar_test<sp/>are<sp/>fine,<sp/>but<sp/>foo_test<sp/>is<sp/>not).<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>is<sp/>rarely<sp/>a<sp/>problem<sp/>as<sp/>people<sp/>usually<sp/>don&apos;t<sp/>put<sp/>the<sp/>test<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>directory<sp/>in<sp/>PATH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(wan@google.com):<sp/>make<sp/>thread-safe<sp/>death<sp/>tests<sp/>search<sp/>the<sp/>PATH.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asserts<sp/>that<sp/>a<sp/>given<sp/>statement<sp/>causes<sp/>the<sp/>program<sp/>to<sp/>exit,<sp/>with<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer<sp/>exit<sp/>status<sp/>that<sp/>satisfies<sp/>predicate,<sp/>and<sp/>emitting<sp/>error<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>matches<sp/>regex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ASSERT_EXIT(statement,<sp/>predicate,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DEATH_TEST_(statement,<sp/>predicate,<sp/>regex,<sp/>GTEST_FATAL_FAILURE_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>ASSERT_EXIT,<sp/>but<sp/>continues<sp/>on<sp/>to<sp/>successive<sp/>tests<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test<sp/>case,<sp/>if<sp/>any:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>EXPECT_EXIT(statement,<sp/>predicate,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_DEATH_TEST_(statement,<sp/>predicate,<sp/>regex,<sp/>GTEST_NONFATAL_FAILURE_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asserts<sp/>that<sp/>a<sp/>given<sp/>statement<sp/>causes<sp/>the<sp/>program<sp/>to<sp/>exit,<sp/>either<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>explicitly<sp/>exiting<sp/>with<sp/>a<sp/>nonzero<sp/>exit<sp/>code<sp/>or<sp/>being<sp/>killed<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>signal,<sp/>and<sp/>emitting<sp/>error<sp/>output<sp/>that<sp/>matches<sp/>regex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ASSERT_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT_EXIT(statement,<sp/>::testing::internal::ExitedUnsuccessfully,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>ASSERT_DEATH,<sp/>but<sp/>continues<sp/>on<sp/>to<sp/>successive<sp/>tests<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>test<sp/>case,<sp/>if<sp/>any:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>EXPECT_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_EXIT(statement,<sp/>::testing::internal::ExitedUnsuccessfully,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Two<sp/>predicate<sp/>classes<sp/>that<sp/>can<sp/>be<sp/>used<sp/>in<sp/>{ASSERT,EXPECT}_EXIT*:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>an<sp/>exit<sp/>code<sp/>describes<sp/>a<sp/>normal<sp/>exit<sp/>with<sp/>a<sp/>given<sp/>exit<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/>ExitedWithCode<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>ExitedWithCode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_code);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_status)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>implementation<sp/>-<sp/>assignment<sp/>is<sp/>unsupported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ExitedWithCode&amp;<sp/>other);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_code_;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>!GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>that<sp/>an<sp/>exit<sp/>code<sp/>describes<sp/>an<sp/>exit<sp/>due<sp/>to<sp/>termination<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>signal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/>KilledBySignal<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>KilledBySignal(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit_status)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum_;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/><sp/></highlight><highlight class="comment">//<sp/>!GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_DEBUG_DEATH<sp/>asserts<sp/>that<sp/>the<sp/>given<sp/>statements<sp/>die<sp/>in<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>death<sp/>testing<sp/>framework<sp/>causes<sp/>this<sp/>to<sp/>have<sp/>interesting<sp/>semantics,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>sideeffects<sp/>of<sp/>the<sp/>call<sp/>are<sp/>only<sp/>visible<sp/>in<sp/>opt<sp/>mode,<sp/>and<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>practice,<sp/>this<sp/>can<sp/>be<sp/>used<sp/>to<sp/>test<sp/>functions<sp/>that<sp/>utilize<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LOG(DFATAL)<sp/>macro<sp/>using<sp/>the<sp/>following<sp/>style:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>DieInDebugOr12(int*<sp/>sideeffect)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(sideeffect)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*sideeffect<sp/>=<sp/>12;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>LOG(DFATAL)<sp/>&lt;&lt;<sp/>&quot;death&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>12;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEST(TestCase,<sp/>TestDieOr12WorksInDgbAndOpt)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>sideeffect<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Only<sp/>asserts<sp/>in<sp/>dbg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_DEBUG_DEATH(DieInDebugOr12(&amp;sideeffect),<sp/>&quot;death&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>opt-mode<sp/>has<sp/>sideeffect<sp/>visible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_EQ(12,<sp/>sideeffect);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>dbg-mode<sp/>no<sp/>visible<sp/>sideeffect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_EQ(0,<sp/>sideeffect);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>assert<sp/>that<sp/>DieInDebugReturn12InOpt()<sp/>crashes<sp/>in<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mode,<sp/>usually<sp/>due<sp/>to<sp/>a<sp/>DCHECK<sp/>or<sp/>LOG(DFATAL),<sp/>but<sp/>returns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate<sp/>fallback<sp/>value<sp/>(12<sp/>in<sp/>this<sp/>case)<sp/>in<sp/>opt<sp/>mode.<sp/>If<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>test<sp/>that<sp/>a<sp/>function<sp/>has<sp/>appropriate<sp/>side-effects<sp/>in<sp/>opt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mode,<sp/>include<sp/>assertions<sp/>against<sp/>the<sp/>side-effects.<sp/><sp/>A<sp/>general</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pattern<sp/>for<sp/>this<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_DEBUG_DEATH({</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Side-effects<sp/>here<sp/>will<sp/>have<sp/>an<sp/>effect<sp/>after<sp/>this<sp/>statement<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>opt<sp/>mode,<sp/>but<sp/>none<sp/>in<sp/>debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>EXPECT_EQ(12,<sp/>DieInDebugOr12(&amp;sideeffect));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>},<sp/>&quot;death&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>EXPECT_DEBUG_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/>GTEST_EXECUTE_STATEMENT_(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ASSERT_DEBUG_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/>GTEST_EXECUTE_STATEMENT_(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>EXPECT_DEBUG_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/>EXPECT_DEATH(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>ASSERT_DEBUG_DEATH(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/>ASSERT_DEATH(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/><sp/></highlight><highlight class="comment">//<sp/>NDEBUG<sp/>for<sp/>EXPECT_DEBUG_DEATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ASSERT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>expand<sp/>to<sp/>real<sp/>death<sp/>tests<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>death<sp/>tests<sp/>are<sp/>supported;<sp/>otherwise<sp/>they<sp/>just<sp/>issue<sp/>a<sp/>warning.<sp/><sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>useful<sp/>when<sp/>you<sp/>are<sp/>combining<sp/>death<sp/>test<sp/>assertions<sp/>with<sp/>normal<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assertions<sp/>in<sp/>one<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_DEATH_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>EXPECT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>EXPECT_DEATH(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ASSERT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ASSERT_DEATH(statement,<sp/>regex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="d4/d59/gtest-death-test_8h_1a8564de0e012dd0898949c513d1571f8b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>EXPECT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_UNSUPPORTED_DEATH_TEST_(statement,<sp/>regex,<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="d4/d59/gtest-death-test_8h_1ab2f0f25b46353767179a49ebd15b7345" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ASSERT_DEATH_IF_SUPPORTED(statement,<sp/>regex)<sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GTEST_UNSUPPORTED_DEATH_TEST_(statement,<sp/>regex,<sp/>return)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/googletest/include/gtest/gtest-death-test.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/dbe/gtest-spi_8h" kind="file" language="C++">
    <compoundname>gtest-spi.h</compoundname>
    <includes refid="d8/d73/gtest_8h" local="yes">gtest/gtest.h</includes>
    <includedby refid="df/d09/gtest-port_8cc" local="yes">lib/googletest/src/gtest-port.cc</includedby>
    <includedby refid="d0/da1/gtest-internal-inl_8h" local="yes">lib/googletest/src/gtest-internal-inl.h</includedby>
    <includedby refid="df/d5b/gtest_8cc" local="yes">lib/googletest/src/gtest.cc</includedby>
    <incdepgraph>
      <node id="14">
        <label>sys/stat.h</label>
      </node>
      <node id="38">
        <label>gtest/internal/gtest-param-util.h</label>
        <link refid="dc/df2/gtest-param-util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>typeinfo</label>
        <link refid="cpp/header/typeinfo" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="41">
        <label>assert.h</label>
      </node>
      <node id="27">
        <label>float.h</label>
      </node>
      <node id="45">
        <label>gtest/gtest_prod.h</label>
        <link refid="d4/db1/gtest__prod_8h"/>
      </node>
      <node id="20">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h"/>
      </node>
      <node id="4">
        <label>ostream</label>
        <link refid="cpp/header/ostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="33">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="44">
        <label>gtest/internal/gtest-param-util-generated.h</label>
        <link refid="dc/db7/gtest-param-util-generated_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iomanip</label>
        <link refid="cpp/header/iomanip" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="30">
        <label>set</label>
        <link refid="cpp/header/set" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="32">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="26">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
      <node id="47">
        <label>iosfwd</label>
        <link refid="cpp/header/iosfwd" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="34">
        <label>gtest/internal/gtest-type-util.h</label>
        <link refid="d9/d97/gtest-type-util_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="13">
        <label>sys/types.h</label>
      </node>
      <node id="12">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gtest/gtest-typed-test.h</label>
        <link refid="de/dce/gtest-typed-test_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>gtest/internal/custom/gtest-printers.h</label>
        <link refid="da/db0/internal_2custom_2gtest-printers_8h"/>
      </node>
      <node id="22">
        <label>unistd.h</label>
      </node>
      <node id="3">
        <label>limits</label>
        <link refid="cpp/header/limits" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="19">
        <label>utility</label>
        <link refid="cpp/header/utility" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="36">
        <label>gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>string</label>
        <link refid="cpp/header/string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="31">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>strings.h</label>
      </node>
      <node id="39">
        <label>iterator</label>
        <link refid="cpp/header/iterator" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="8">
        <label>ctype.h</label>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/gtest-spi.h</label>
        <link refid="dc/dbe/gtest-spi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="49">
        <label>gtest/gtest_pred_impl.h</label>
        <link refid="db/d6e/gtest__pred__impl_8h"/>
      </node>
      <node id="46">
        <label>gtest/gtest-test-part.h</label>
        <link refid="d1/d01/gtest-test-part_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>gtest/gtest-param-test.h</label>
        <link refid="d0/d31/gtest-param-test_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="40">
        <label>gtest/internal/gtest-linked_ptr.h</label>
        <link refid="d0/d03/gtest-linked__ptr_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>regex.h</label>
      </node>
      <node id="21">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h"/>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="42">
        <label>gtest/gtest-printers.h</label>
        <link refid="d0/d6d/gtest-printers_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>map</label>
        <link refid="cpp/header/map" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>lib/googletest/src/gtest-internal-inl.h</label>
        <link refid="d0/da1/gtest-internal-inl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/googletest/src/gtest-all.cc</label>
        <link refid="d1/d8c/gtest-all_8cc"/>
      </node>
      <node id="5">
        <label>lib/googletest/src/gtest-death-test.cc</label>
        <link refid="de/d50/gtest-death-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lib/googletest/src/gtest.cc</label>
        <link refid="df/d5b/gtest_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/googletest/src/gtest-test-part.cc</label>
        <link refid="d3/dc2/gtest-test-part_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/googletest/src/gtest-port.cc</label>
        <link refid="df/d09/gtest-port_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/gtest-spi.h</label>
        <link refid="dc/dbe/gtest-spi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" prot="public">testing::internal::SingleFailureChecker</innerclass>
    <innerclass refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" prot="public">testing::ScopedFakeTestPartResultReporter</innerclass>
    <innernamespace refid="d0/d75/namespacetesting">testing</innernamespace>
    <innernamespace refid="d0/da7/namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="dc/dbe/gtest-spi_8h_1a819a3fd7f8b8cf24b6f1b3a26708973d" prot="public" static="no">
        <name>EXPECT_FATAL_FAILURE</name>
        <param><defname>statement</defname></param>
        <param><defname>substr</defname></param>
        <initializer>  do { \
    class GTestExpectFatalFailureHelper {\
     public:\
      static void Execute() { statement; }\
    };\
    ::<ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">testing::TestPartResultArray</ref> gtest_failures;\
    ::<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">testing::internal::SingleFailureChecker</ref> gtest_checker(\
        &amp;gtest_failures, ::<ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7afff22986360310b0356db600c8c2187d" kindref="member">testing::TestPartResult::kFatalFailure</ref>, (substr));\
    {\
      ::<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">testing::ScopedFakeTestPartResultReporter</ref> gtest_reporter(\
          ::testing::ScopedFakeTestPartResultReporter:: \
          INTERCEPT_ONLY_CURRENT_THREAD, &amp;gtest_failures);\
      GTestExpectFatalFailureHelper::Execute();\
    }\
  } while (::<ref refid="d0/da7/namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" kindref="member">testing::internal::AlwaysFalse</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-spi.h" line="138" column="9" bodyfile="lib/googletest/include/gtest/gtest-spi.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/dbe/gtest-spi_8h_1ad8aac5bc859b2ddc07583636ae4f45cf" prot="public" static="no">
        <name>EXPECT_FATAL_FAILURE_ON_ALL_THREADS</name>
        <param><defname>statement</defname></param>
        <param><defname>substr</defname></param>
        <initializer>  do { \
    class GTestExpectFatalFailureHelper {\
     public:\
      static void Execute() { statement; }\
    };\
    ::<ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">testing::TestPartResultArray</ref> gtest_failures;\
    ::<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">testing::internal::SingleFailureChecker</ref> gtest_checker(\
        &amp;gtest_failures, ::<ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7afff22986360310b0356db600c8c2187d" kindref="member">testing::TestPartResult::kFatalFailure</ref>, (substr));\
    {\
      ::<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">testing::ScopedFakeTestPartResultReporter</ref> gtest_reporter(\
          ::testing::ScopedFakeTestPartResultReporter:: \
          INTERCEPT_ALL_THREADS, &amp;gtest_failures);\
      GTestExpectFatalFailureHelper::Execute();\
    }\
  } while (::<ref refid="d0/da7/namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" kindref="member">testing::internal::AlwaysFalse</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-spi.h" line="155" column="9" bodyfile="lib/googletest/include/gtest/gtest-spi.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/dbe/gtest-spi_8h_1a8376fd6821bd88fd806697355e79e138" prot="public" static="no">
        <name>EXPECT_NONFATAL_FAILURE</name>
        <param><defname>statement</defname></param>
        <param><defname>substr</defname></param>
        <initializer>  do {\
    ::<ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">testing::TestPartResultArray</ref> gtest_failures;\
    ::<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">testing::internal::SingleFailureChecker</ref> gtest_checker(\
        &amp;gtest_failures, ::<ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7ae354b0d94856044d54b2066ebb74635c" kindref="member">testing::TestPartResult::kNonFatalFailure</ref>, \
        (substr));\
    {\
      ::<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">testing::ScopedFakeTestPartResultReporter</ref> gtest_reporter(\
          ::testing::ScopedFakeTestPartResultReporter:: \
          INTERCEPT_ONLY_CURRENT_THREAD, &amp;gtest_failures);\
      if (::<ref refid="d0/da7/namespacetesting_1_1internal_1af72a7a7eee6997f4ed9e18d9620a7b87" kindref="member">testing::internal::AlwaysTrue</ref>()) { statement; }\
    }\
  } while (::<ref refid="d0/da7/namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" kindref="member">testing::internal::AlwaysFalse</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-spi.h" line="204" column="9" bodyfile="lib/googletest/include/gtest/gtest-spi.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dc/dbe/gtest-spi_8h_1a9f4cf1f150fe9facfc4cbf0bae646ee9" prot="public" static="no">
        <name>EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS</name>
        <param><defname>statement</defname></param>
        <param><defname>substr</defname></param>
        <initializer>  do {\
    ::<ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">testing::TestPartResultArray</ref> gtest_failures;\
    ::<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">testing::internal::SingleFailureChecker</ref> gtest_checker(\
        &amp;gtest_failures, ::<ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7ae354b0d94856044d54b2066ebb74635c" kindref="member">testing::TestPartResult::kNonFatalFailure</ref>, \
        (substr));\
    {\
      ::<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">testing::ScopedFakeTestPartResultReporter</ref> gtest_reporter(\
          ::<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2a5398a4b510d73fe50e61864f5e805c65" kindref="member">testing::ScopedFakeTestPartResultReporter::INTERCEPT_ALL_THREADS</ref>, \
          &amp;gtest_failures);\
      if (::<ref refid="d0/da7/namespacetesting_1_1internal_1af72a7a7eee6997f4ed9e18d9620a7b87" kindref="member">testing::internal::AlwaysTrue</ref>()) { statement; }\
    }\
  } while (::<ref refid="d0/da7/namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" kindref="member">testing::internal::AlwaysFalse</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-spi.h" line="218" column="9" bodyfile="lib/googletest/include/gtest/gtest-spi.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>wan@google.com<sp/>(Zhanyong<sp/>Wan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Utilities<sp/>for<sp/>testing<sp/>Google<sp/>Test<sp/>itself<sp/>and<sp/>code<sp/>that<sp/>uses<sp/>Google<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(e.g.<sp/>frameworks<sp/>built<sp/>on<sp/>top<sp/>of<sp/>Google<sp/>Test).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_INCLUDE_GTEST_GTEST_SPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_INCLUDE_GTEST_GTEST_SPI_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d73/gtest_8h" kindref="compound">gtest/gtest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d75/namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>helper<sp/>class<sp/>can<sp/>be<sp/>used<sp/>to<sp/>mock<sp/>out<sp/>Google<sp/>Test<sp/>failure<sp/>reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>we<sp/>can<sp/>test<sp/>Google<sp/>Test<sp/>or<sp/>code<sp/>that<sp/>builds<sp/>on<sp/>Google<sp/>Test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>object<sp/>of<sp/>this<sp/>class<sp/>appends<sp/>a<sp/>TestPartResult<sp/>object<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TestPartResultArray<sp/>object<sp/>given<sp/>in<sp/>the<sp/>constructor<sp/>whenever<sp/>a<sp/>Google<sp/>Test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>failure<sp/>is<sp/>reported.<sp/>It<sp/>can<sp/>either<sp/>intercept<sp/>only<sp/>failures<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generated<sp/>in<sp/>the<sp/>same<sp/>thread<sp/>that<sp/>created<sp/>this<sp/>object<sp/>or<sp/>it<sp/>can<sp/>intercept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>generated<sp/>failures.<sp/>The<sp/>scope<sp/>of<sp/>this<sp/>mock<sp/>object<sp/>can<sp/>be<sp/>controlled<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>argument<sp/>to<sp/>the<sp/>two<sp/>arguments<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">ScopedFakeTestPartResultReporter</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="da/d6e/classtesting_1_1_test_part_result_reporter_interface" kindref="compound">TestPartResultReporterInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>two<sp/>possible<sp/>mocking<sp/>modes<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2" kindref="member">InterceptMode</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2ac08ddd6144897355185b0750e2128966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2ac08ddd6144897355185b0750e2128966" kindref="member">INTERCEPT_ONLY_CURRENT_THREAD</ref>,<sp/><sp/></highlight><highlight class="comment">//<sp/>Intercepts<sp/>only<sp/>thread<sp/>local<sp/>failures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>INTERCEPT_ALL_THREADS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intercepts<sp/>all<sp/>failures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2a5398a4b510d73fe50e61864f5e805c65" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>c&apos;tor<sp/>sets<sp/>this<sp/>object<sp/>as<sp/>the<sp/>test<sp/>part<sp/>result<sp/>reporter<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>Google<sp/>Test.<sp/><sp/>The<sp/>&apos;result&apos;<sp/>parameter<sp/>specifies<sp/>where<sp/>to<sp/>report<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>results.<sp/>This<sp/>reporter<sp/>will<sp/>only<sp/>catch<sp/>failures<sp/>generated<sp/>in<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thread.<sp/>DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">ScopedFakeTestPartResultReporter</ref>(<ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">TestPartResultArray</ref>*<sp/>result);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>as<sp/>above,<sp/>but<sp/>you<sp/>can<sp/>choose<sp/>the<sp/>interception<sp/>scope<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">ScopedFakeTestPartResultReporter</ref>(InterceptMode<sp/>intercept_mode,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">TestPartResultArray</ref>*<sp/>result);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>d&apos;tor<sp/>restores<sp/>the<sp/>previous<sp/>test<sp/>part<sp/>result<sp/>reporter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">ScopedFakeTestPartResultReporter</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>the<sp/>TestPartResult<sp/>object<sp/>to<sp/>the<sp/>TestPartResultArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>received<sp/>in<sp/>the<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>is<sp/>from<sp/>the<sp/>TestPartResultReporterInterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReportTestPartResult(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4b/classtesting_1_1_test_part_result" kindref="compound">TestPartResult</ref>&amp;<sp/>result);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1ac41a6872b1cb8a2d43546199dd59ae6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a1d75549697022f869ab9d184916077d2" kindref="member">InterceptMode</ref><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1ac41a6872b1cb8a2d43546199dd59ae6e" kindref="member">intercept_mode_</ref>;</highlight></codeline>
<codeline lineno="83" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a770408cbb038fabbbeab39b72e80403e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="da/d6e/classtesting_1_1_test_part_result_reporter_interface" kindref="compound">TestPartResultReporterInterface</ref>*<sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a770408cbb038fabbbeab39b72e80403e" kindref="member">old_reporter_</ref>;</highlight></codeline>
<codeline lineno="84" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a3b5b59dfb566b902e20fa042ba17dad0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">TestPartResultArray</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a3b5b59dfb566b902e20fa042ba17dad0" kindref="member">result_</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a534cd7ad0e39e08d2aa8426d3f167e8a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter_1a534cd7ad0e39e08d2aa8426d3f167e8a" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="d2/db7/classtesting_1_1_scoped_fake_test_part_result_reporter" kindref="compound">ScopedFakeTestPartResultReporter</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>class<sp/>for<sp/>implementing<sp/>EXPECT_FATAL_FAILURE()<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_NONFATAL_FAILURE().<sp/><sp/>Its<sp/>destructor<sp/>verifies<sp/>that<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TestPartResultArray<sp/>contains<sp/>exactly<sp/>one<sp/>failure<sp/>that<sp/>has<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>type<sp/>and<sp/>contains<sp/>the<sp/>given<sp/>substring.<sp/><sp/>If<sp/>that&apos;s<sp/>not<sp/>the<sp/>case,<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>non-fatal<sp/>failure<sp/>will<sp/>be<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">SingleFailureChecker</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>constructor<sp/>remembers<sp/>the<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">SingleFailureChecker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">TestPartResultArray</ref>*<sp/>results,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">TestPartResult::Type</ref><sp/>type,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>substr);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>~<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">SingleFailureChecker</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1ab15c799eb695a09b713ef21e869abfe0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d5d/classtesting_1_1_test_part_result_array" kindref="compound">TestPartResultArray</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1ab15c799eb695a09b713ef21e869abfe0" kindref="member">results_</ref>;</highlight></codeline>
<codeline lineno="105" refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1a3155cc24deee3978aed78a25da6180da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d4b/classtesting_1_1_test_part_result_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">TestPartResult::Type</ref><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1a3155cc24deee3978aed78a25da6180da" kindref="member">type_</ref>;</highlight></codeline>
<codeline lineno="106" refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1a6d511a37e5638d646986452a9b195d23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1a6d511a37e5638d646986452a9b195d23" kindref="member">substr_</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1aab6e5589ca8c8608dcb253e89212fc7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker_1aab6e5589ca8c8608dcb253e89212fc7e" kindref="member">GTEST_DISALLOW_COPY_AND_ASSIGN_</ref>(<ref refid="d8/d9a/classtesting_1_1internal_1_1_single_failure_checker" kindref="compound">SingleFailureChecker</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>set<sp/>of<sp/>macros<sp/>for<sp/>testing<sp/>Google<sp/>Test<sp/>assertions<sp/>or<sp/>code<sp/>that&apos;s<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>generate<sp/>Google<sp/>Test<sp/>fatal<sp/>failures.<sp/><sp/>It<sp/>verifies<sp/>that<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>statement<sp/>will<sp/>cause<sp/>exactly<sp/>one<sp/>fatal<sp/>Google<sp/>Test<sp/>failure<sp/>with<sp/>&apos;substr&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>being<sp/>part<sp/>of<sp/>the<sp/>failure<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>different<sp/>versions<sp/>of<sp/>this<sp/>macro.<sp/>EXPECT_FATAL_FAILURE<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>affects<sp/>and<sp/>considers<sp/>failures<sp/>generated<sp/>in<sp/>the<sp/>current<sp/>thread<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_FATAL_FAILURE_ON_ALL_THREADS<sp/>does<sp/>the<sp/>same<sp/>but<sp/>for<sp/>all<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>verification<sp/>of<sp/>the<sp/>assertion<sp/>is<sp/>done<sp/>correctly<sp/>even<sp/>when<sp/>the<sp/>statement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>throws<sp/>an<sp/>exception<sp/>or<sp/>aborts<sp/>the<sp/>current<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Known<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>&apos;statement&apos;<sp/>cannot<sp/>reference<sp/>local<sp/>non-static<sp/>variables<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>non-static<sp/>members<sp/>of<sp/>the<sp/>current<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>&apos;statement&apos;<sp/>cannot<sp/>return<sp/>a<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>You<sp/>cannot<sp/>stream<sp/>a<sp/>failure<sp/>message<sp/>to<sp/>this<sp/>macro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>even<sp/>though<sp/>the<sp/>implementations<sp/>of<sp/>the<sp/>following<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>macros<sp/>are<sp/>much<sp/>alike,<sp/>we<sp/>cannot<sp/>refactor<sp/>them<sp/>to<sp/>use<sp/>a<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>macro,<sp/>due<sp/>to<sp/>some<sp/>peculiarity<sp/>in<sp/>how<sp/>the<sp/>preprocessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works.<sp/><sp/>The<sp/>AcceptsMacroThatExpandsToUnprotectedComma<sp/>test<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gtest_unittest.cc<sp/>will<sp/>fail<sp/>to<sp/>compile<sp/>if<sp/>we<sp/>do<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="dc/dbe/gtest-spi_8h_1a819a3fd7f8b8cf24b6f1b3a26708973d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_FATAL_FAILURE(statement,<sp/>substr)<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>GTestExpectFatalFailureHelper<sp/>{\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>void<sp/>Execute()<sp/>{<sp/>statement;<sp/>}\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::TestPartResultArray<sp/>gtest_failures;\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::SingleFailureChecker<sp/>gtest_checker(\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gtest_failures,<sp/>::testing::TestPartResult::kFatalFailure,<sp/>(substr));\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter<sp/>gtest_reporter(\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter::<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERCEPT_ONLY_CURRENT_THREAD,<sp/>&amp;gtest_failures);\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTestExpectFatalFailureHelper::Execute();\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(::testing::internal::AlwaysFalse())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="dc/dbe/gtest-spi_8h_1ad8aac5bc859b2ddc07583636ae4f45cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_FATAL_FAILURE_ON_ALL_THREADS(statement,<sp/>substr)<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>class<sp/>GTestExpectFatalFailureHelper<sp/>{\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>public:\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>void<sp/>Execute()<sp/>{<sp/>statement;<sp/>}\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::TestPartResultArray<sp/>gtest_failures;\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::SingleFailureChecker<sp/>gtest_checker(\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gtest_failures,<sp/>::testing::TestPartResult::kFatalFailure,<sp/>(substr));\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter<sp/>gtest_reporter(\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter::<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERCEPT_ALL_THREADS,<sp/>&amp;gtest_failures);\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>GTestExpectFatalFailureHelper::Execute();\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(::testing::internal::AlwaysFalse())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>macro<sp/>for<sp/>testing<sp/>Google<sp/>Test<sp/>assertions<sp/>or<sp/>code<sp/>that&apos;s<sp/>expected<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generate<sp/>Google<sp/>Test<sp/>non-fatal<sp/>failures.<sp/><sp/>It<sp/>asserts<sp/>that<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>statement<sp/>will<sp/>cause<sp/>exactly<sp/>one<sp/>non-fatal<sp/>Google<sp/>Test<sp/>failure<sp/>with<sp/>&apos;substr&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>being<sp/>part<sp/>of<sp/>the<sp/>failure<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>different<sp/>versions<sp/>of<sp/>this<sp/>macro.<sp/>EXPECT_NONFATAL_FAILURE<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>affects<sp/>and<sp/>considers<sp/>failures<sp/>generated<sp/>in<sp/>the<sp/>current<sp/>thread<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS<sp/>does<sp/>the<sp/>same<sp/>but<sp/>for<sp/>all<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;statement&apos;<sp/>is<sp/>allowed<sp/>to<sp/>reference<sp/>local<sp/>variables<sp/>and<sp/>members<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>verification<sp/>of<sp/>the<sp/>assertion<sp/>is<sp/>done<sp/>correctly<sp/>even<sp/>when<sp/>the<sp/>statement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>throws<sp/>an<sp/>exception<sp/>or<sp/>aborts<sp/>the<sp/>current<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Known<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>You<sp/>cannot<sp/>stream<sp/>a<sp/>failure<sp/>message<sp/>to<sp/>this<sp/>macro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>even<sp/>though<sp/>the<sp/>implementations<sp/>of<sp/>the<sp/>following<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>macros<sp/>are<sp/>much<sp/>alike,<sp/>we<sp/>cannot<sp/>refactor<sp/>them<sp/>to<sp/>use<sp/>a<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>macro,<sp/>due<sp/>to<sp/>some<sp/>peculiarity<sp/>in<sp/>how<sp/>the<sp/>preprocessor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works.<sp/><sp/>If<sp/>we<sp/>do<sp/>that,<sp/>the<sp/>code<sp/>won&apos;t<sp/>compile<sp/>when<sp/>the<sp/>user<sp/>gives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPECT_NONFATAL_FAILURE()<sp/>a<sp/>statement<sp/>that<sp/>contains<sp/>a<sp/>macro<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expands<sp/>to<sp/>code<sp/>containing<sp/>an<sp/>unprotected<sp/>comma.<sp/><sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AcceptsMacroThatExpandsToUnprotectedComma<sp/>test<sp/>in<sp/>gtest_unittest.cc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>catches<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>same<sp/>reason,<sp/>we<sp/>have<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(::testing::internal::AlwaysTrue())<sp/>{<sp/>statement;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>an<sp/>MSVC<sp/>warning<sp/>on<sp/>unreachable<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="dc/dbe/gtest-spi_8h_1a8376fd6821bd88fd806697355e79e138" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_NONFATAL_FAILURE(statement,<sp/>substr)<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::TestPartResultArray<sp/>gtest_failures;\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::SingleFailureChecker<sp/>gtest_checker(\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gtest_failures,<sp/>::testing::TestPartResult::kNonFatalFailure,<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(substr));\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter<sp/>gtest_reporter(\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter::<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERCEPT_ONLY_CURRENT_THREAD,<sp/>&amp;gtest_failures);\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::testing::internal::AlwaysTrue())<sp/>{<sp/>statement;<sp/>}\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(::testing::internal::AlwaysFalse())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="dc/dbe/gtest-spi_8h_1a9f4cf1f150fe9facfc4cbf0bae646ee9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(statement,<sp/>substr)<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::TestPartResultArray<sp/>gtest_failures;\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::testing::internal::SingleFailureChecker<sp/>gtest_checker(\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gtest_failures,<sp/>::testing::TestPartResult::kNonFatalFailure,<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(substr));\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter<sp/>gtest_reporter(\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ScopedFakeTestPartResultReporter::INTERCEPT_ALL_THREADS,<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gtest_failures);\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(::testing::internal::AlwaysTrue())<sp/>{<sp/>statement;<sp/>}\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(::testing::internal::AlwaysFalse())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_INCLUDE_GTEST_GTEST_SPI_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/googletest/include/gtest/gtest-spi.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d20/gtest-filepath_8cc" kind="file" language="C++">
    <compoundname>gtest-filepath.cc</compoundname>
    <includes refid="d6/da4/gtest-message_8h" local="yes">gtest/gtest-message.h</includes>
    <includes refid="dc/d79/gtest-filepath_8h" local="yes">gtest/internal/gtest-filepath.h</includes>
    <includes refid="d3/dc9/gtest-port_8h" local="yes">gtest/internal/gtest-port.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">climits</includes>
    <includes refid="d0/d45/gtest-string_8h" local="yes">gtest/internal/gtest-string.h</includes>
    <includedby refid="d1/d8c/gtest-all_8cc" local="yes">lib/googletest/src/gtest-all.cc</includedby>
    <incdepgraph>
      <node id="11">
        <label>sys/stat.h</label>
      </node>
      <node id="23">
        <label>typeinfo</label>
        <link refid="cpp/header/typeinfo" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="18">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h"/>
      </node>
      <node id="25">
        <label>gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>lib/googletest/src/gtest-filepath.cc</label>
        <link refid="dc/d20/gtest-filepath_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="24">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="27">
        <label>limits.h</label>
      </node>
      <node id="17">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unistd.h</label>
      </node>
      <node id="28">
        <label>climits</label>
        <link refid="cpp/header/climits" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="3">
        <label>limits</label>
        <link refid="cpp/header/limits" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="16">
        <label>utility</label>
        <link refid="cpp/header/utility" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="15">
        <label>string</label>
        <link refid="cpp/header/string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="2">
        <label>gtest/gtest-message.h</label>
        <link refid="d6/da4/gtest-message_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>strings.h</label>
      </node>
      <node id="5">
        <label>ctype.h</label>
      </node>
      <node id="13">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="22">
        <label>regex.h</label>
      </node>
      <node id="19">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h"/>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>lib/googletest/src/gtest-filepath.cc</label>
        <link refid="dc/d20/gtest-filepath_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/googletest/src/gtest-all.cc</label>
        <link refid="d1/d8c/gtest-all_8cc"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="d0/d75/namespacetesting">testing</innernamespace>
    <innernamespace refid="d0/da7/namespacetesting_1_1internal">testing::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="dc/d20/gtest-filepath_8cc_1ad9d445747785a9271a57cf1d392b89ad" prot="public" static="no">
        <name>GTEST_PATH_MAX_</name>
        <initializer>_POSIX_PATH_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="58" column="11" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char kCurrentDirectoryString[]</definition>
        <argsstring>[]</argsstring>
        <name>kCurrentDirectoryString</name>
        <initializer>= &quot;./&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="86" column="12" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="86" bodyend="-1"/>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8f7fb543b08e0e79edaaa2829c1cb808" compoundref="dc/d20/gtest-filepath_8cc" startline="99" endline="118">FilePath::GetCurrentDir</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1af170c740d93389979d9fcfa1058812c5" compoundref="dc/d20/gtest-filepath_8cc" startline="166" endline="175">FilePath::RemoveFileName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char kPathSeparator</definition>
        <argsstring></argsstring>
        <name>kPathSeparator</name>
        <initializer>= &apos;/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="85" column="12" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="85" bodyend="-1"/>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1ae8c11e9d5d51f4266c6507aeb34ba55b" compoundref="dc/d20/gtest-filepath_8cc" startline="199" endline="205">FilePath::ConcatPaths</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1a49f9182daf48b8dbe6d48ffa2e2b1517" compoundref="dc/d20/gtest-filepath_8cc" startline="136" endline="147">FilePath::FindLastPathSeparator</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" compoundref="dc/d20/gtest-filepath_8cc" startline="90" endline="96">testing::internal::IsPathSeparator</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1af279e0f0ff720ee54d6733674dfda50a" compoundref="dc/d20/gtest-filepath_8cc" startline="356" endline="384">FilePath::Normalize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::IsPathSeparator</definition>
        <argsstring>(char c)</argsstring>
        <name>IsPathSeparator</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="90" column="13" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="90" bodyend="96"/>
        <references refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" compoundref="dc/d20/gtest-filepath_8cc" startline="85">testing::internal::kPathSeparator</references>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1a3a0a77b979cea003921d8324ef96bde1" compoundref="dc/d20/gtest-filepath_8cc" startline="265" endline="276">FilePath::IsAbsolutePath</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa14e121a7a4f6e743c9e10b3a0818eea" compoundref="dc/d20/gtest-filepath_8cc" startline="300" endline="303">FilePath::IsDirectory</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1a50e9326bd46f8e8385be04fcdd77e599" compoundref="dc/d20/gtest-filepath_8cc" startline="253" endline="262">FilePath::IsRootDirectory</referencedby>
        <referencedby refid="de/d14/classtesting_1_1internal_1_1_file_path_1af279e0f0ff720ee54d6733674dfda50a" compoundref="dc/d20/gtest-filepath_8cc" startline="356" endline="384">FilePath::Normalize</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/>keith.ray@gmail.com<sp/>(Keith<sp/>Ray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/da4/gtest-message_8h" kindref="compound">gtest/gtest-message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d79/gtest-filepath_8h" kindref="compound">gtest/internal/gtest-filepath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/dc9/gtest-port_8h" kindref="compound">gtest/internal/gtest-port.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;direct.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;io.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>GTEST_OS_SYMBIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Symbian<sp/>OpenC<sp/>has<sp/>PATH_MAX<sp/>in<sp/>sys/syslimits.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;sys/syslimits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;<ref refid="cpp/header/climits" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">climits</ref>&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>Linux<sp/>distributions<sp/>define<sp/>PATH_MAX<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GTEST_PATH_MAX_<sp/>_MAX_PATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(PATH_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GTEST_PATH_MAX_<sp/>PATH_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_XOPEN_PATH_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GTEST_PATH_MAX_<sp/>_XOPEN_PATH_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="dc/d20/gtest-filepath_8cc_1ad9d445747785a9271a57cf1d392b89ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>GTEST_PATH_MAX_<sp/>_POSIX_PATH_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d45/gtest-string_8h" kindref="compound">gtest/internal/gtest-string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d75/namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>&apos;\\&apos;<sp/>is<sp/>the<sp/>standard<sp/>path<sp/>separator,<sp/>but<sp/>many<sp/>tools<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>API<sp/>also<sp/>accept<sp/>&apos;/&apos;<sp/>as<sp/>an<sp/>alternate<sp/>path<sp/>separator.<sp/>Unless<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>noted,<sp/>a<sp/>file<sp/>path<sp/>can<sp/>contain<sp/>either<sp/>kind<sp/>of<sp/>path<sp/>separators,<sp/>or<sp/>a<sp/>mixture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kAlternatePathSeparator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kAlternatePathSeparatorString[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>CE<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>current<sp/>directory.<sp/>You<sp/>should<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>directory<sp/>in<sp/>tests<sp/>on<sp/>Windows<sp/>CE,<sp/>but<sp/>this<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provides<sp/>a<sp/>reasonable<sp/>fallback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Windows<sp/>CE<sp/>doesn&apos;t<sp/>define<sp/>INVALID_FILE_ATTRIBUTES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DWORD<sp/>kInvalidFileAttributes<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86" refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>whether<sp/>the<sp/>given<sp/>character<sp/>is<sp/>a<sp/>valid<sp/>path<sp/>separator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_ALT_PATH_SEP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref>)<sp/>||<sp/>(c<sp/>==<sp/>kAlternatePathSeparator);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>working<sp/>directory,<sp/>or<sp/>&quot;&quot;<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8f7fb543b08e0e79edaaa2829c1cb808" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8f7fb543b08e0e79edaaa2829c1cb808" kindref="member">FilePath::GetCurrentDir</ref>()<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS_MOBILE<sp/>||<sp/>GTEST_OS_WINDOWS_PHONE<sp/>||<sp/>GTEST_OS_WINDOWS_RT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>CE<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>current<sp/>directory,<sp/>so<sp/>we<sp/>just<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>something<sp/>reasonable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(<ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cwd[<ref refid="dc/d20/gtest-filepath_8cc_1ad9d445747785a9271a57cf1d392b89ad" kindref="member">GTEST_PATH_MAX_</ref><sp/>+<sp/>1]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(_getcwd(cwd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cwd))<sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>cwd);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cwd[<ref refid="dc/d20/gtest-filepath_8cc_1ad9d445747785a9271a57cf1d392b89ad" kindref="member">GTEST_PATH_MAX_</ref><sp/>+<sp/>1]<sp/>=<sp/>{<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/>getcwd(cwd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cwd));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>GTEST_OS_NACL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>getcwd<sp/>will<sp/>likely<sp/>fail<sp/>in<sp/>NaCl<sp/>due<sp/>to<sp/>the<sp/>sandbox,<sp/>so<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reasonable.<sp/>The<sp/>user<sp/>may<sp/>have<sp/>provided<sp/>a<sp/>shim<sp/>implementation<sp/>for<sp/>getcwd,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>however,<sp/>so<sp/>fallback<sp/>only<sp/>when<sp/>failure<sp/>is<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(result<sp/>==<sp/>NULL<sp/>?<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref><sp/>:<sp/>cwd);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_NACL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(result<sp/>==<sp/>NULL<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>cwd);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>FilePath<sp/>with<sp/>the<sp/>case-insensitive<sp/>extension<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;dir/file.exe&quot;).RemoveExtension(&quot;EXE&quot;)<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FilePath(&quot;dir/file&quot;).<sp/>If<sp/>a<sp/>case-insensitive<sp/>extension<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>found,<sp/>returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>original<sp/>FilePath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a0e757422eb25fd5c7b70a8185ee04c69" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a0e757422eb25fd5c7b70a8185ee04c69" kindref="member">FilePath::RemoveExtension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>dot_extension<sp/>=<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a3641bb11325903fefdc4d22ab0b92fd6" kindref="member">std::string</ref>(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>+<sp/>extension;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d0/dde/classtesting_1_1internal_1_1_string_1adb81d60e125e3c75f4b009ce087aed58" kindref="member">String::EndsWithCaseInsensitive</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>,<sp/>dot_extension))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/substr" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">substr</ref>(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>-<sp/>dot_extension.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>last<sp/>occurence<sp/>of<sp/>a<sp/>valid<sp/>path<sp/>separator<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>FilePath.<sp/>On<sp/>Windows,<sp/>for<sp/>example,<sp/>both<sp/>&apos;/&apos;<sp/>and<sp/>&apos;\&apos;<sp/>are<sp/>valid<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>separators.<sp/>Returns<sp/>NULL<sp/>if<sp/>no<sp/>path<sp/>separator<sp/>was<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a49f9182daf48b8dbe6d48ffa2e2b1517" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a49f9182daf48b8dbe6d48ffa2e2b1517" kindref="member">FilePath::FindLastPathSeparator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>last_sep<sp/>=<sp/>strrchr(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>(),<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_ALT_PATH_SEP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>last_alt_sep<sp/>=<sp/>strrchr(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>(),<sp/>kAlternatePathSeparator);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Comparing<sp/>two<sp/>pointers<sp/>of<sp/>which<sp/>only<sp/>one<sp/>is<sp/>NULL<sp/>is<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_alt_sep<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(last_sep<sp/>==<sp/>NULL<sp/>||<sp/>last_alt_sep<sp/>&gt;<sp/>last_sep))<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_alt_sep;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_sep;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>FilePath<sp/>with<sp/>the<sp/>directory<sp/>part<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;path/to/file&quot;).RemoveDirectoryName()<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FilePath(&quot;file&quot;).<sp/>If<sp/>there<sp/>is<sp/>no<sp/>directory<sp/>part<sp/>(&quot;just_a_file&quot;),<sp/>it<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>FilePath<sp/>unmodified.<sp/>If<sp/>there<sp/>is<sp/>no<sp/>file<sp/>part<sp/>(&quot;just_a_dir/&quot;)<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>an<sp/>empty<sp/>FilePath<sp/>(&quot;&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>&apos;\&apos;<sp/>is<sp/>the<sp/>path<sp/>separator,<sp/>otherwise<sp/>it<sp/>is<sp/>&apos;/&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a9fe846b92cc3a819b1bca34059999369" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a9fe846b92cc3a819b1bca34059999369" kindref="member">FilePath::RemoveDirectoryName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>last_sep<sp/>=<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a49f9182daf48b8dbe6d48ffa2e2b1517" kindref="member">FindLastPathSeparator</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>last_sep<sp/>?<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(last_sep<sp/>+<sp/>1)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RemoveFileName<sp/>returns<sp/>the<sp/>directory<sp/>path<sp/>with<sp/>the<sp/>filename<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;path/to/file&quot;).RemoveFileName()<sp/>returns<sp/>&quot;path/to/&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>FilePath<sp/>is<sp/>&quot;a_file&quot;<sp/>or<sp/>&quot;/a_file&quot;,<sp/>RemoveFileName<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FilePath(&quot;./&quot;)<sp/>or,<sp/>on<sp/>Windows,<sp/>FilePath(&quot;.\\&quot;).<sp/>If<sp/>the<sp/>filepath<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>have<sp/>a<sp/>file,<sp/>like<sp/>&quot;just/a/dir/&quot;,<sp/>it<sp/>returns<sp/>the<sp/>FilePath<sp/>unmodified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>&apos;\&apos;<sp/>is<sp/>the<sp/>path<sp/>separator,<sp/>otherwise<sp/>it<sp/>is<sp/>&apos;/&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="de/d14/classtesting_1_1internal_1_1_file_path_1af170c740d93389979d9fcfa1058812c5" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1af170c740d93389979d9fcfa1058812c5" kindref="member">FilePath::RemoveFileName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>last_sep<sp/>=<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a49f9182daf48b8dbe6d48ffa2e2b1517" kindref="member">FindLastPathSeparator</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>dir;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_sep)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a3641bb11325903fefdc4d22ab0b92fd6" kindref="member">std::string</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>(),<sp/>last_sep<sp/>+<sp/>1<sp/>-<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6ffb7bac99e2a7612631aad364fa49ad" kindref="member">kCurrentDirectoryString</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(dir);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>for<sp/>naming<sp/>files<sp/>in<sp/>a<sp/>directory<sp/>for<sp/>xml<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>directory<sp/>=<sp/>&quot;dir&quot;,<sp/>base_name<sp/>=<sp/>&quot;test&quot;,<sp/>number<sp/>=<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extension<sp/>=<sp/>&quot;xml&quot;,<sp/>returns<sp/>&quot;dir/test.xml&quot;.<sp/>If<sp/>number<sp/>is<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>zero<sp/>(e.g.,<sp/>12),<sp/>returns<sp/>&quot;dir/test_12.xml&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator<sp/>rather<sp/>than<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a56b8e4a3bdcf00693fb761b47689dd92" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a56b8e4a3bdcf00693fb761b47689dd92" kindref="member">FilePath::MakeFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>base_name,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/>file;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>base_name.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" kindref="member">string</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>extension;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>base_name.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" kindref="member">string</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" kindref="member">StreamableToString</ref>(number)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>extension;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1ae8c11e9d5d51f4266c6507aeb34ba55b" kindref="member">ConcatPaths</ref>(directory,<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(file));</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>directory<sp/>=<sp/>&quot;dir&quot;,<sp/>relative_path<sp/>=<sp/>&quot;test.xml&quot;,<sp/>returns<sp/>&quot;dir/test.xml&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator<sp/>rather<sp/>than<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="de/d14/classtesting_1_1internal_1_1_file_path_1ae8c11e9d5d51f4266c6507aeb34ba55b" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1ae8c11e9d5d51f4266c6507aeb34ba55b" kindref="member">FilePath::ConcatPaths</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>relative_path)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(directory.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>relative_path;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>dir(directory.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" kindref="member">RemoveTrailingPathSeparator</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(dir.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" kindref="member">string</ref>()<sp/>+<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref><sp/>+<sp/>relative_path.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>something<sp/>findable<sp/>in<sp/>the<sp/>file-system,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either<sp/>a<sp/>file,<sp/>directory,<sp/>or<sp/>whatever.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a396c68beeeccc066f4c04dced1a11433" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a396c68beeeccc066f4c04dced1a11433" kindref="member">FilePath::FileOrDirectoryExists</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>LPCWSTR<sp/>unicode<sp/>=<sp/>String::AnsiToUtf16(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DWORD<sp/>attributes<sp/>=<sp/>GetFileAttributes(unicode);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>unicode;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attributes<sp/>!=<sp/>kInvalidFileAttributes;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a28f577553e4511ddefedf8c62dda12cd" kindref="member">posix::StatStruct</ref><sp/>file_stat;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a2b87b7ff647a128614daf50667eb9304" kindref="member">posix::Stat</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>(),<sp/>&amp;file_stat)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>a<sp/>directory<sp/>in<sp/>the<sp/>file-system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4a118f1c72313787fe28aa8e2103812a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4a118f1c72313787fe28aa8e2103812a" kindref="member">FilePath::DirectoryExists</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>strip<sp/>off<sp/>trailing<sp/>separator<sp/>if<sp/>path<sp/>is<sp/>a<sp/>root<sp/>directory<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>(like<sp/>&quot;C:\\&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>path(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a50e9326bd46f8e8385be04fcdd77e599" kindref="member">IsRootDirectory</ref>()<sp/>?<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" kindref="member">RemoveTrailingPathSeparator</ref>());</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>path(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>LPCWSTR<sp/>unicode<sp/>=<sp/>String::AnsiToUtf16(path.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DWORD<sp/>attributes<sp/>=<sp/>GetFileAttributes(unicode);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>unicode;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attributes<sp/>!=<sp/>kInvalidFileAttributes)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(attributes<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY))<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a28f577553e4511ddefedf8c62dda12cd" kindref="member">posix::StatStruct</ref><sp/>file_stat;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a2b87b7ff647a128614daf50667eb9304" kindref="member">posix::Stat</ref>(path.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>(),<sp/>&amp;file_stat)<sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af0d04ed5baeed28353fa38742748a421" kindref="member">posix::IsDir</ref>(file_stat);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>a<sp/>root<sp/>directory.<sp/>(Windows<sp/>has<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>root<sp/>directory<sp/>per<sp/>disk<sp/>drive.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a50e9326bd46f8e8385be04fcdd77e599" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a50e9326bd46f8e8385be04fcdd77e599" kindref="member">FilePath::IsRootDirectory</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(wan@google.com):<sp/>on<sp/>Windows<sp/>a<sp/>network<sp/>share<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\\server\share<sp/>can<sp/>be<sp/>a<sp/>root<sp/>directory,<sp/>although<sp/>it<sp/>cannot<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>directory.<sp/><sp/>Handle<sp/>this<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>==<sp/>3<sp/>&amp;&amp;<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a3a0a77b979cea003921d8324ef96bde1" kindref="member">IsAbsolutePath</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>()[0]);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>an<sp/>absolute<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a3a0a77b979cea003921d8324ef96bde1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a3a0a77b979cea003921d8324ef96bde1" kindref="member">FilePath::IsAbsolutePath</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name<sp/>=<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>&gt;=<sp/>3<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((name[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(name[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>name[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(name[2]);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(name[0]);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pathname<sp/>for<sp/>a<sp/>file<sp/>that<sp/>does<sp/>not<sp/>currently<sp/>exist.<sp/>The<sp/>pathname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>directory/base_name.extension<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directory/base_name_&lt;number&gt;.extension<sp/>if<sp/>directory/base_name.extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already<sp/>exists.<sp/>The<sp/>number<sp/>will<sp/>be<sp/>incremented<sp/>until<sp/>a<sp/>pathname<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>does<sp/>not<sp/>already<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Examples:<sp/>&apos;dir/foo_test.xml&apos;<sp/>or<sp/>&apos;dir/foo_test_1.xml&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>could<sp/>be<sp/>a<sp/>race<sp/>condition<sp/>if<sp/>two<sp/>or<sp/>more<sp/>processes<sp/>are<sp/>calling<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>at<sp/>the<sp/>same<sp/>time<sp/>--<sp/>they<sp/>could<sp/>both<sp/>pick<sp/>the<sp/>same<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a01f72e14ad442c88e941571cb65228f4" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a01f72e14ad442c88e941571cb65228f4" kindref="member">FilePath::GenerateUniqueFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>base_name,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>full_pathname;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>full_pathname.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a42b263db98b0796b43578baca9ba991d" kindref="member">Set</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a56b8e4a3bdcf00693fb761b47689dd92" kindref="member">MakeFileName</ref>(directory,<sp/>base_name,<sp/>number++,<sp/>extension));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(full_pathname.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a396c68beeeccc066f4c04dced1a11433" kindref="member">FileOrDirectoryExists</ref>());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>full_pathname;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>FilePath<sp/>ends<sp/>with<sp/>a<sp/>path<sp/>separator,<sp/>which<sp/>indicates<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>intended<sp/>to<sp/>represent<sp/>a<sp/>directory.<sp/>Returns<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>NOT<sp/>check<sp/>that<sp/>a<sp/>directory<sp/>(or<sp/>file)<sp/>actually<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa14e121a7a4f6e743c9e10b3a0818eea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa14e121a7a4f6e743c9e10b3a0818eea" kindref="member">FilePath::IsDirectory</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/empty" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">empty</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>()[<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>directories<sp/>so<sp/>that<sp/>path<sp/>exists.<sp/>Returns<sp/>true<sp/>if<sp/>successful<sp/>or<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>directories<sp/>already<sp/>exist;<sp/>returns<sp/>false<sp/>if<sp/>unable<sp/>to<sp/>create<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>any<sp/>reason.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a957e950af2e23bbd4e8b647214595218" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a957e950af2e23bbd4e8b647214595218" kindref="member">FilePath::CreateDirectoriesRecursively</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa14e121a7a4f6e743c9e10b3a0818eea" kindref="member">IsDirectory</ref>())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>==<sp/>0<sp/>||<sp/>this-&gt;DirectoryExists())<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>parent(this-&gt;<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" kindref="member">RemoveTrailingPathSeparator</ref>().<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1af170c740d93389979d9fcfa1058812c5" kindref="member">RemoveFileName</ref>());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a957e950af2e23bbd4e8b647214595218" kindref="member">CreateDirectoriesRecursively</ref>()<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1ad1ae719853841409aa22d67755058b72" kindref="member">CreateFolder</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>directory<sp/>so<sp/>that<sp/>path<sp/>exists.<sp/>Returns<sp/>true<sp/>if<sp/>successful<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>directory<sp/>already<sp/>exists;<sp/>returns<sp/>false<sp/>if<sp/>unable<sp/>to<sp/>create<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>directory<sp/>for<sp/>any<sp/>reason,<sp/>including<sp/>if<sp/>the<sp/>parent<sp/>directory<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exist.<sp/>Not<sp/>named<sp/>&quot;CreateDirectory&quot;<sp/>because<sp/>that&apos;s<sp/>a<sp/>macro<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="de/d14/classtesting_1_1internal_1_1_file_path_1ad1ae719853841409aa22d67755058b72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1ad1ae719853841409aa22d67755058b72" kindref="member">FilePath::CreateFolder</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>removed_sep(this-&gt;<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" kindref="member">RemoveTrailingPathSeparator</ref>());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>LPCWSTR<sp/>unicode<sp/>=<sp/>String::AnsiToUtf16(removed_sep.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>CreateDirectory(unicode,<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>unicode;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>GTEST_OS_WINDOWS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>_mkdir(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>mkdir(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>(),<sp/>0777);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_OS_WINDOWS_MOBILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4a118f1c72313787fe28aa8e2103812a" kindref="member">DirectoryExists</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>is<sp/>OK<sp/>if<sp/>the<sp/>directory<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>input<sp/>name<sp/>has<sp/>a<sp/>trailing<sp/>separator<sp/>character,<sp/>remove<sp/>it<sp/>and<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>name,<sp/>otherwise<sp/>return<sp/>the<sp/>name<sp/>string<sp/>unmodified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator,<sp/>other<sp/>platforms<sp/>use<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" refkind="member"><highlight class="normal"><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a4314fe3c55007fe669e6f9b1313207b4" kindref="member">FilePath::RemoveTrailingPathSeparator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa14e121a7a4f6e743c9e10b3a0818eea" kindref="member">IsDirectory</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/substr" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">substr</ref>(0,<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>any<sp/>redundant<sp/>separators<sp/>that<sp/>might<sp/>be<sp/>in<sp/>the<sp/>pathname.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;bar///foo&quot;<sp/>becomes<sp/>&quot;bar/foo&quot;.<sp/>Does<sp/>not<sp/>eliminate<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>redundancies<sp/>that<sp/>might<sp/>be<sp/>in<sp/>a<sp/>pathname<sp/>involving<sp/>&quot;.&quot;<sp/>or<sp/>&quot;..&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(wan@google.com):<sp/>handle<sp/>Windows<sp/>network<sp/>shares<sp/>(e.g.<sp/>\\server\share).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="de/d14/classtesting_1_1internal_1_1_file_path_1af279e0f0ff720ee54d6733674dfda50a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1af279e0f0ff720ee54d6733674dfda50a" kindref="member">FilePath::Normalize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>()<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref><sp/>=<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/c_str" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">c_str</ref>();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest_ptr<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>memset(dest_ptr,<sp/>0,<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>.<ref refid="cpp/string/basic_string/size" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">length</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*<ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>*dest_ptr<sp/>=<sp/>*<ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(*<ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref>))<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref>++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GTEST_HAS_ALT_PATH_SEP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*dest_ptr<sp/>==<sp/>kAlternatePathSeparator)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest_ptr<sp/>=<sp/><ref refid="d0/da7/namespacetesting_1_1internal_1a75d57ad7e8a7b67ff04ff8855f90acc7" kindref="member">kPathSeparator</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="d0/da7/namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" kindref="member">IsPathSeparator</ref>(*<ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref>))</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1af51e37c9331049b1e3d250a7c8bc3c26" kindref="member">src</ref>++;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_ptr++;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>*dest_ptr<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref><sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>dest;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/googletest/src/gtest-filepath.cc"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dc/d79/gtest-filepath_8h" kind="file" language="C++">
    <compoundname>gtest-filepath.h</compoundname>
    <includes refid="d0/d45/gtest-string_8h" local="yes">gtest/internal/gtest-string.h</includes>
    <includedby refid="dc/d20/gtest-filepath_8cc" local="yes">lib/googletest/src/gtest-filepath.cc</includedby>
    <includedby refid="d5/da1/gtest-internal_8h" local="yes">lib/googletest/include/gtest/internal/gtest-internal.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>sys/stat.h</label>
      </node>
      <node id="22">
        <label>typeinfo</label>
        <link refid="cpp/header/typeinfo" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="17">
        <label>gtest/internal/gtest-port-arch.h</label>
        <link refid="d6/d76/gtest-port-arch_8h"/>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>gtest/internal/gtest-string.h</label>
        <link refid="d0/d45/gtest-string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
        <link refid="cpp/header/algorithm" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="23">
        <label>gtest/internal/gtest-tuple.h</label>
        <link refid="d1/d63/gtest-tuple_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="16">
        <label>vector</label>
        <link refid="cpp/header/vector" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="10">
        <label>sys/types.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>gtest/internal/gtest-port.h</label>
        <link refid="d3/dc9/gtest-port_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>unistd.h</label>
      </node>
      <node id="15">
        <label>utility</label>
        <link refid="cpp/header/utility" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>string</label>
        <link refid="cpp/header/string" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="20">
        <label>strings.h</label>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="13">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="14">
        <label>sstream</label>
        <link refid="cpp/header/sstream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="21">
        <label>regex.h</label>
      </node>
      <node id="18">
        <label>gtest/internal/custom/gtest-port.h</label>
        <link refid="d5/d66/custom_2gtest-port_8h"/>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19">
        <label>lib/googletest/include/gtest/internal/gtest-param-util.h</label>
        <link refid="dc/df2/gtest-param-util_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>lib/googletest/include/gtest/gtest.h</label>
        <link refid="d8/d73/gtest_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>lib/googletest/src/gtest-internal-inl.h</label>
        <link refid="d0/da1/gtest-internal-inl_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/googletest/include/gtest/internal/gtest-filepath.h</label>
        <link refid="dc/d79/gtest-filepath_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>lib/googletest/include/gtest/internal/gtest-param-util-generated.h</label>
        <link refid="dc/db7/gtest-param-util-generated_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>lib/googletest/src/gtest-filepath.cc</label>
        <link refid="dc/d20/gtest-filepath_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>lib/googletest/include/gtest/internal/gtest-internal.h</label>
        <link refid="d5/da1/gtest-internal_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>lib/googletest/include/gtest/gtest-death-test.h</label>
        <link refid="d4/d59/gtest-death-test_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>lib/googletest/src/gtest-printers.cc</label>
        <link refid="db/d74/gtest-printers_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>lib/googletest/src/gtest-all.cc</label>
        <link refid="d1/d8c/gtest-all_8cc"/>
      </node>
      <node id="10">
        <label>lib/googletest/src/gtest-death-test.cc</label>
        <link refid="de/d50/gtest-death-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>lib/googletest/src/gtest_main.cc</label>
        <link refid="d3/d3a/gtest__main_8cc"/>
      </node>
      <node id="12">
        <label>lib/googletest/src/gtest.cc</label>
        <link refid="df/d5b/gtest_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>lib/googletest/src/gtest-typed-test.cc</label>
        <link refid="d9/d5a/gtest-typed-test_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>lib/googletest/src/gtest-test-part.cc</label>
        <link refid="d3/dc2/gtest-test-part_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>lib/googletest/src/gtest-port.cc</label>
        <link refid="df/d09/gtest-port_8cc"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>lib/googletest/include/gtest/internal/gtest-death-test-internal.h</label>
        <link refid="d0/d1a/gtest-death-test-internal_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>lib/googletest/include/gtest/gtest-spi.h</label>
        <link refid="dc/dbe/gtest-spi_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>queue_linked_list/tests/queue_linked_list_unit_test.cc</label>
        <link refid="d9/df4/queue__linked__list__unit__test_8cc"/>
      </node>
      <node id="16">
        <label>lib/googletest/include/gtest/gtest-test-part.h</label>
        <link refid="d1/d01/gtest-test-part_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>lib/googletest/include/gtest/gtest-param-test.h</label>
        <link refid="d0/d31/gtest-param-test_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>lib/googletest/include/gtest/gtest-printers.h</label>
        <link refid="d0/d6d/gtest-printers_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d14/classtesting_1_1internal_1_1_file_path" prot="public">testing::internal::FilePath</innerclass>
    <innernamespace refid="d0/d75/namespacetesting">testing</innernamespace>
    <innernamespace refid="d0/da7/namespacetesting_1_1internal">testing::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>met:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Google<sp/>Inc.<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>keith.ray@gmail.com<sp/>(Keith<sp/>Ray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test<sp/>filepath<sp/>utilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>header<sp/>file<sp/>declares<sp/>classes<sp/>and<sp/>functions<sp/>used<sp/>internally<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Google<sp/>Test.<sp/><sp/>They<sp/>are<sp/>subject<sp/>to<sp/>change<sp/>without<sp/>notice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>#included<sp/>in<sp/>&lt;gtest/internal/gtest-internal.h&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>include<sp/>this<sp/>header<sp/>file<sp/>separately!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d45/gtest-string_8h" kindref="compound">gtest/internal/gtest-string.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d75/namespacetesting" kindref="compound">testing</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="cpp/io/manip/left" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">internal</ref><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FilePath<sp/>-<sp/>a<sp/>class<sp/>for<sp/>file<sp/>and<sp/>directory<sp/>pathname<sp/>manipulation<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>handles<sp/>platform-specific<sp/>conventions<sp/>(like<sp/>the<sp/>pathname<sp/>separator).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>helper<sp/>functions<sp/>for<sp/>naming<sp/>files<sp/>in<sp/>a<sp/>directory<sp/>for<sp/>xml<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Except<sp/>for<sp/>Set<sp/>methods,<sp/>all<sp/>methods<sp/>are<sp/>const<sp/>or<sp/>static,<sp/>which<sp/>provides<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;immutable<sp/>value<sp/>object&quot;<sp/>--<sp/>useful<sp/>for<sp/>peace<sp/>of<sp/>mind.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>FilePath<sp/>with<sp/>a<sp/>value<sp/>ending<sp/>in<sp/>a<sp/>path<sp/>separator<sp/>(&quot;like/this/&quot;)<sp/>represents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>directory,<sp/>otherwise<sp/>it<sp/>is<sp/>assumed<sp/>to<sp/>represent<sp/>a<sp/>file.<sp/>In<sp/>either<sp/>case,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>or<sp/>may<sp/>not<sp/>represent<sp/>an<sp/>actual<sp/>file<sp/>or<sp/>directory<sp/>in<sp/>the<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Names<sp/>are<sp/>NOT<sp/>checked<sp/>for<sp/>syntax<sp/>correctness<sp/>--<sp/>no<sp/>checking<sp/>for<sp/>illegal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters,<sp/>malformed<sp/>paths,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="de/d14/classtesting_1_1internal_1_1_file_path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/dc9/gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1aa5df70ab39fdaff6e3fce46e8d35b608" kindref="member">FilePath</ref>()<sp/>:<sp/>pathname_(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="62" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7221ea73ecd74af3aca8c7e36910ca54" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7221ea73ecd74af3aca8c7e36910ca54" kindref="member">FilePath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>rhs)<sp/>:<sp/>pathname_(rhs.pathname_)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a6385e248c57ed010175c5f9232d230e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a6385e248c57ed010175c5f9232d230e6" kindref="member">FilePath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/>pathname)<sp/>:<sp/>pathname_(pathname)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Normalize();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a56ce97a342d8d71d4abedca3f5666ab1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a56ce97a342d8d71d4abedca3f5666ab1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Set(rhs);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a42b263db98b0796b43578baca9ba991d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a42b263db98b0796b43578baca9ba991d" kindref="member">Set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>pathname_<sp/>=<sp/>rhs.<ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref>&amp;<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a7314f49a51859d46439cfeddb9ea06ec" kindref="member">string</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathname_;<sp/>}</highlight></codeline>
<codeline lineno="78" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a14989d8fe448c5f947832aea3dae615a" kindref="member">c_str</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathname_.c_str();<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>current<sp/>working<sp/>directory,<sp/>or<sp/>&quot;&quot;<sp/>if<sp/>unsuccessful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>GetCurrentDir();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>directory<sp/>=<sp/>&quot;dir&quot;,<sp/>base_name<sp/>=<sp/>&quot;test&quot;,<sp/>number<sp/>=<sp/>0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extension<sp/>=<sp/>&quot;xml&quot;,<sp/>returns<sp/>&quot;dir/test.xml&quot;.<sp/>If<sp/>number<sp/>is<sp/>greater</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>zero<sp/>(e.g.,<sp/>12),<sp/>returns<sp/>&quot;dir/test_12.xml&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator<sp/>rather<sp/>than<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>MakeFileName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>base_name,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>directory<sp/>=<sp/>&quot;dir&quot;,<sp/>relative_path<sp/>=<sp/>&quot;test.xml&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>&quot;dir/test.xml&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator<sp/>rather<sp/>than<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>ConcatPaths(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>relative_path);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pathname<sp/>for<sp/>a<sp/>file<sp/>that<sp/>does<sp/>not<sp/>currently<sp/>exist.<sp/>The<sp/>pathname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>directory/base_name.extension<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>directory/base_name_&lt;number&gt;.extension<sp/>if<sp/>directory/base_name.extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>exists.<sp/>The<sp/>number<sp/>will<sp/>be<sp/>incremented<sp/>until<sp/>a<sp/>pathname<sp/>is<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>does<sp/>not<sp/>already<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Examples:<sp/>&apos;dir/foo_test.xml&apos;<sp/>or<sp/>&apos;dir/foo_test_1.xml&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>could<sp/>be<sp/>a<sp/>race<sp/>condition<sp/>if<sp/>two<sp/>or<sp/>more<sp/>processes<sp/>are<sp/>calling<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>at<sp/>the<sp/>same<sp/>time<sp/>--<sp/>they<sp/>could<sp/>both<sp/>pick<sp/>the<sp/>same<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>GenerateUniqueFileName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>directory,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref>&amp;<sp/>base_name,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>the<sp/>path<sp/>is<sp/>&quot;&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8e12342fc420701fbffd97025421575a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pathname_.empty();<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>input<sp/>name<sp/>has<sp/>a<sp/>trailing<sp/>separator<sp/>character,<sp/>removes<sp/>it<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>name,<sp/>otherwise<sp/>return<sp/>the<sp/>name<sp/>string<sp/>unmodified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>uses<sp/>\<sp/>as<sp/>the<sp/>separator,<sp/>other<sp/>platforms<sp/>use<sp/>/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>RemoveTrailingPathSeparator()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>FilePath<sp/>with<sp/>the<sp/>directory<sp/>part<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;path/to/file&quot;).RemoveDirectoryName()<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FilePath(&quot;file&quot;).<sp/>If<sp/>there<sp/>is<sp/>no<sp/>directory<sp/>part<sp/>(&quot;just_a_file&quot;),<sp/>it<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>FilePath<sp/>unmodified.<sp/>If<sp/>there<sp/>is<sp/>no<sp/>file<sp/>part<sp/>(&quot;just_a_dir/&quot;)<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>an<sp/>empty<sp/>FilePath<sp/>(&quot;&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>&apos;\&apos;<sp/>is<sp/>the<sp/>path<sp/>separator,<sp/>otherwise<sp/>it<sp/>is<sp/>&apos;/&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>RemoveDirectoryName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>RemoveFileName<sp/>returns<sp/>the<sp/>directory<sp/>path<sp/>with<sp/>the<sp/>filename<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;path/to/file&quot;).RemoveFileName()<sp/>returns<sp/>&quot;path/to/&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>FilePath<sp/>is<sp/>&quot;a_file&quot;<sp/>or<sp/>&quot;/a_file&quot;,<sp/>RemoveFileName<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FilePath(&quot;./&quot;)<sp/>or,<sp/>on<sp/>Windows,<sp/>FilePath(&quot;.\\&quot;).<sp/>If<sp/>the<sp/>filepath<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>have<sp/>a<sp/>file,<sp/>like<sp/>&quot;just/a/dir/&quot;,<sp/>it<sp/>returns<sp/>the<sp/>FilePath<sp/>unmodified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>platform,<sp/>&apos;\&apos;<sp/>is<sp/>the<sp/>path<sp/>separator,<sp/>otherwise<sp/>it<sp/>is<sp/>&apos;/&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>RemoveFileName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>FilePath<sp/>with<sp/>the<sp/>case-insensitive<sp/>extension<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>FilePath(&quot;dir/file.exe&quot;).RemoveExtension(&quot;EXE&quot;)<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FilePath(&quot;dir/file&quot;).<sp/>If<sp/>a<sp/>case-insensitive<sp/>extension<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>found,<sp/>returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>original<sp/>FilePath.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path" kindref="compound">FilePath</ref><sp/>RemoveExtension(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>directories<sp/>so<sp/>that<sp/>path<sp/>exists.<sp/>Returns<sp/>true<sp/>if<sp/>successful<sp/>or<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>directories<sp/>already<sp/>exist;<sp/>returns<sp/>false<sp/>if<sp/>unable<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>directories<sp/>for<sp/>any<sp/>reason.<sp/>Will<sp/>also<sp/>return<sp/>false<sp/>if<sp/>the<sp/>FilePath<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>represent<sp/>a<sp/>directory<sp/>(that<sp/>is,<sp/>it<sp/>doesn&apos;t<sp/>end<sp/>with<sp/>a<sp/>path<sp/>separator).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CreateDirectoriesRecursively()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>directory<sp/>so<sp/>that<sp/>path<sp/>exists.<sp/>Returns<sp/>true<sp/>if<sp/>successful<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>directory<sp/>already<sp/>exists;<sp/>returns<sp/>false<sp/>if<sp/>unable<sp/>to<sp/>create<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>directory<sp/>for<sp/>any<sp/>reason,<sp/>including<sp/>if<sp/>the<sp/>parent<sp/>directory<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exist.<sp/>Not<sp/>named<sp/>&quot;CreateDirectory&quot;<sp/>because<sp/>that&apos;s<sp/>a<sp/>macro<sp/>on<sp/>Windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CreateFolder()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>FilePath<sp/>describes<sp/>something<sp/>in<sp/>the<sp/>file-system,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>either<sp/>a<sp/>file,<sp/>directory,<sp/>or<sp/>whatever,<sp/>and<sp/>that<sp/>something<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FileOrDirectoryExists()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>a<sp/>directory<sp/>in<sp/>the<sp/>file-system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DirectoryExists()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>FilePath<sp/>ends<sp/>with<sp/>a<sp/>path<sp/>separator,<sp/>which<sp/>indicates<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>intended<sp/>to<sp/>represent<sp/>a<sp/>directory.<sp/>Returns<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>NOT<sp/>check<sp/>that<sp/>a<sp/>directory<sp/>(or<sp/>file)<sp/>actually<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsDirectory()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>a<sp/>root<sp/>directory.<sp/>(Windows<sp/>has<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>directory<sp/>per<sp/>disk<sp/>drive.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsRootDirectory()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>pathname<sp/>describes<sp/>an<sp/>absolute<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAbsolutePath()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>multiple<sp/>consecutive<sp/>separators<sp/>with<sp/>a<sp/>single<sp/>separator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>&quot;bar///foo&quot;<sp/>becomes<sp/>&quot;bar/foo&quot;.<sp/>Does<sp/>not<sp/>eliminate<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>redundancies<sp/>that<sp/>might<sp/>be<sp/>in<sp/>a<sp/>pathname<sp/>involving<sp/>&quot;.&quot;<sp/>or<sp/>&quot;..&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>pathname<sp/>with<sp/>multiple<sp/>consecutive<sp/>separators<sp/>may<sp/>occur<sp/>either<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>error<sp/>or<sp/>as<sp/>a<sp/>result<sp/>of<sp/>some<sp/>scripts<sp/>or<sp/>APIs<sp/>that<sp/>generate<sp/>a<sp/>pathname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>trailing<sp/>separator.<sp/>On<sp/>other<sp/>platforms<sp/>the<sp/>same<sp/>API<sp/>or<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>NOT<sp/>generate<sp/>a<sp/>pathname<sp/>with<sp/>a<sp/>trailing<sp/>&quot;/&quot;.<sp/>Then<sp/>elsewhere<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pathname<sp/>may<sp/>have<sp/>another<sp/>&quot;/&quot;<sp/>and<sp/>pathname<sp/>components<sp/>added<sp/>to<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>checking<sp/>for<sp/>the<sp/>separator<sp/>already<sp/>being<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>script<sp/>language<sp/>and<sp/>operating<sp/>system<sp/>may<sp/>allow<sp/>paths<sp/>like<sp/>&quot;foo//bar&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>some<sp/>of<sp/>the<sp/>functions<sp/>in<sp/>FilePath<sp/>will<sp/>not<sp/>handle<sp/>that<sp/>correctly.<sp/>In</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>particular,<sp/>RemoveTrailingPathSeparator()<sp/>only<sp/>removes<sp/>one<sp/>separator,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>called<sp/>in<sp/>CreateDirectoriesRecursively()<sp/>assuming<sp/>that<sp/>it<sp/>will<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pathname<sp/>from<sp/>directory<sp/>syntax<sp/>(trailing<sp/>separator)<sp/>to<sp/>filename<sp/>syntax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Windows<sp/>this<sp/>method<sp/>also<sp/>replaces<sp/>the<sp/>alternate<sp/>path<sp/>separator<sp/>&apos;/&apos;<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>primary<sp/>path<sp/>separator<sp/>&apos;\\&apos;,<sp/>so<sp/>that<sp/>for<sp/>example<sp/>&quot;bar\\/\\foo&quot;<sp/>becomes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;bar\\foo&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Normalize();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>last<sp/>occurence<sp/>of<sp/>a<sp/>valid<sp/>path<sp/>separator<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>FilePath.<sp/>On<sp/>Windows,<sp/>for<sp/>example,<sp/>both<sp/>&apos;/&apos;<sp/>and<sp/>&apos;\&apos;<sp/>are<sp/>valid<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>separators.<sp/>Returns<sp/>NULL<sp/>if<sp/>no<sp/>path<sp/>separator<sp/>was<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>FindLastPathSeparator()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref><sp/><ref refid="de/d14/classtesting_1_1internal_1_1_file_path_1a35bc23ec835f789e1bfee30fc470d9b4" kindref="member">pathname_</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>FilePath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="lib/googletest/include/gtest/internal/gtest-filepath.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="binary__search_8cc" kind="file" language="C++">
    <compoundname>binary_search.cc</compoundname>
    <includes refid="binary__search_8h" local="yes">binary_search.h</includes>
    <includedby refid="binary__search_2main_8cc" local="yes">binary_search/main.cc</includedby>
    <incdepgraph>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>binary_search.h</label>
        <link refid="binary__search_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>binary_search/binary_search.cc</label>
        <link refid="binary__search_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>binary_search/main.cc</label>
        <link refid="binary__search_2main_8cc"/>
      </node>
      <node id="1">
        <label>binary_search/binary_search.cc</label>
        <link refid="binary__search_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacecommon">common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="binary__search_8h" kindref="compound">binary_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecommon" kindref="compound">common</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespacecommon_1ad951d69f0988e985415d052a81bdf2e8" refkind="member"><highlight class="normal"><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="namespacecommon_1ad951d69f0988e985415d052a81bdf2e8" kindref="member">GetNewNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="namespacecommon_1a5bb9cd37af9ee2f1b2339d77b4f7d1dd" refkind="member"><highlight class="normal"><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="namespacecommon_1a5bb9cd37af9ee2f1b2339d77b4f7d1dd" kindref="member">Insert</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="namespacecommon_1ad951d69f0988e985415d052a81bdf2e8" kindref="member">GetNewNode</ref>(value);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>=<sp/><ref refid="namespacecommon_1a5bb9cd37af9ee2f1b2339d77b4f7d1dd" kindref="member">Insert</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>=<sp/><ref refid="namespacecommon_1a5bb9cd37af9ee2f1b2339d77b4f7d1dd" kindref="member">Insert</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="namespacecommon_1ada61a385661276f122db1a83f5ba573a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1ada61a385661276f122db1a83f5ba573a" kindref="member">Search</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1ada61a385661276f122db1a83f5ba573a" kindref="member">Search</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1ada61a385661276f122db1a83f5ba573a" kindref="member">Search</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespacecommon_1a8e5af17d7a58b5f61bb0d0d502c1dbcf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a8e5af17d7a58b5f61bb0d0d502c1dbcf" kindref="member">IsBinarySearchTree</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a84788ceb14c1733b313e3206fea5ff27" kindref="member">IsBetween</ref>(node,<sp/>INT_MIN,<sp/>INT_MAX);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacecommon_1a84788ceb14c1733b313e3206fea5ff27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a84788ceb14c1733b313e3206fea5ff27" kindref="member">IsBetween</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>&gt;<sp/>min<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>&lt;<sp/>max<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecommon_1a84788ceb14c1733b313e3206fea5ff27" kindref="member">IsBetween</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>,<sp/>min,<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecommon_1a84788ceb14c1733b313e3206fea5ff27" kindref="member">IsBetween</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>,<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>,<sp/>max))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespacecommon_1ab4370181a4bfa0106e48bf4a1e496e21" refkind="member"><highlight class="normal"><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="namespacecommon_1ab4370181a4bfa0106e48bf4a1e496e21" kindref="member">GetMinNode</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1ab4370181a4bfa0106e48bf4a1e496e21" kindref="member">GetMinNode</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="namespacecommon_1a81b89f1174eaefd3a0fadca27d1817a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a81b89f1174eaefd3a0fadca27d1817a4" kindref="member">GetMin</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a81b89f1174eaefd3a0fadca27d1817a4" kindref="member">GetMin</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacecommon_1a93f968329c924c63c79141ef711b4ccb" refkind="member"><highlight class="normal"><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="namespacecommon_1a93f968329c924c63c79141ef711b4ccb" kindref="member">GetMaxNode</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a93f968329c924c63c79141ef711b4ccb" kindref="member">GetMaxNode</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespacecommon_1a32a5a9d7ba0bee5cacb2e72a93f3bc7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a32a5a9d7ba0bee5cacb2e72a93f3bc7b" kindref="member">GetMax</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a32a5a9d7ba0bee5cacb2e72a93f3bc7b" kindref="member">GetMax</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="namespacecommon_1a5a885592e59041938086a74bd43dd6ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a5a885592e59041938086a74bd43dd6ec" kindref="member">GetHeight</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/>std::max(<ref refid="namespacecommon_1a5a885592e59041938086a74bd43dd6ec" kindref="member">GetHeight</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>),<sp/><ref refid="namespacecommon_1a5a885592e59041938086a74bd43dd6ec" kindref="member">GetHeight</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>));</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="namespacecommon_1a951a6c058a6a852e5a3906c70f7b602a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a951a6c058a6a852e5a3906c70f7b602a" kindref="member">DeleteTree</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="namespacecommon_1a951a6c058a6a852e5a3906c70f7b602a" kindref="member">DeleteTree</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="namespacecommon_1a951a6c058a6a852e5a3906c70f7b602a" kindref="member">DeleteTree</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacecommon_1af0043524a2d186d2fdcbeeea9f6cdc06" refkind="member"><highlight class="normal"><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/><ref refid="namespacecommon_1af0043524a2d186d2fdcbeeea9f6cdc06" kindref="member">DeleteValue</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>=<sp/><ref refid="namespacecommon_1af0043524a2d186d2fdcbeeea9f6cdc06" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>=<sp/><ref refid="namespacecommon_1af0043524a2d186d2fdcbeeea9f6cdc06" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>matching<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/><ref refid="namespacecommon_1ab4370181a4bfa0106e48bf4a1e496e21" kindref="member">GetMinNode</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>=<sp/>temp-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>;<sp/></highlight><highlight class="comment">//<sp/>replace<sp/>min<sp/>data<sp/>in<sp/>the<sp/>right<sp/>node<sp/>with<sp/>deleted<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>=<sp/><ref refid="namespacecommon_1af0043524a2d186d2fdcbeeea9f6cdc06" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>,<sp/>temp-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref>);<sp/></highlight><highlight class="comment">//<sp/>reconstruct<sp/>binary<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="namespacecommon_1a9c6049ee02fd40aeb6cc7e4b5384f581" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a9c6049ee02fd40aeb6cc7e4b5384f581" kindref="member">PrintBFS</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::queue&lt;BSTNode*&gt;<sp/>node_queue;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>current;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>node_queue.push(node);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>node_queue.empty())<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>node_queue.front();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_queue.pop();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>current-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>node_queue.push(current-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>node_queue.push(current-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="namespacecommon_1a25d561230f553fe7281397bf9a88c8ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecommon_1a25d561230f553fe7281397bf9a88c8ed" kindref="member">PrintInOrder</ref>(<ref refid="structcommon_1_1BSTNode" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="namespacecommon_1a25d561230f553fe7281397bf9a88c8ed" kindref="member">PrintInOrder</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a404c84b494cb19afc8101c08741ab978" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>node-&gt;<ref refid="structcommon_1_1BSTNode_1abd25d73eeda629c89624edc808dbb8d2" kindref="member">data</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="namespacecommon_1a25d561230f553fe7281397bf9a88c8ed" kindref="member">PrintInOrder</ref>(node-&gt;<ref refid="structcommon_1_1BSTNode_1a6c53b106cde01d23e7f92b7366976b96" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="binary_search/binary_search.cc"/>
  </compounddef>
</doxygen>

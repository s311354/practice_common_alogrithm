<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d81/namespacetesting_1_1internal_1_1posix" kind="namespace" language="C++">
    <compoundname>testing::internal::posix</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a8eb9f08d3af29941c2d2a964cfff3ecb" prot="public" static="no">
        <type>struct stat</type>
        <definition>typedef struct stat testing::internal::posix::StatStruct</definition>
        <argsstring></argsstring>
        <name>StatStruct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2230" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2338" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a69b8278c59359dd6a6f941b4643db9fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::posix::Abort</definition>
        <argsstring>()</argsstring>
        <name>Abort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2410" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2410" bodyend="2410"/>
        <referencedby refid="d6/d6e/classtesting_1_1TestResult_1a765c1e734ac08115757b343d57226bba" compoundref="df/d5b/gtest_8cc" startline="2029" endline="2033">testing::TestResult::GetTestPartResult</referencedby>
        <referencedby refid="dc/dce/classtesting_1_1TestPartResultArray_1aa44d02a01c87f47393b07951bab6e025" compoundref="d3/dc2/gtest-test-part_8cc" startline="73" endline="80">testing::TestPartResultArray::GetTestPartResult</referencedby>
        <referencedby refid="d6/d6e/classtesting_1_1TestResult_1a6c2f478dbce36b57d18bedded46d70af" compoundref="df/d5b/gtest_8cc" startline="2038" endline="2042">testing::TestResult::GetTestProperty</referencedby>
        <referencedby refid="da/d59/classtesting_1_1internal_1_1GTestLog_1a978a099703bbaa0f380216e8d7ee03d3" compoundref="df/d09/gtest-port_8cc" startline="919" endline="925">testing::internal::GTestLog::~GTestLog</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a1ddc8a4fc6bb21da372307485591a212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::ChDir</definition>
        <argsstring>(const char *dir)</argsstring>
        <name>ChDir</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2365" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2365" bodyend="2365"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a15e5b8f2a535ef1b2529b85b861e4846" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::Close</definition>
        <argsstring>(int fd)</argsstring>
        <name>Close</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2384" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2384" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1af4beeaaa8d62916d5e3b644a1ddfbd6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::FClose</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>FClose</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2376" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2376" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1af7c268eba32d5a718b36b6b3801302e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* testing::internal::posix::FDOpen</definition>
        <argsstring>(int fd, const char *mode)</argsstring>
        <name>FDOpen</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2374" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2374" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a3117b067e1f942a2031e666953120ccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::FileNo</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>FileNo</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2340" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2340" bodyend="2340"/>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="df/d5b/gtest_8cc" startline="2956" endline="3002">testing::internal::ColoredPrintf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a4042201dcc4932641d484e7ddf94de7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* testing::internal::posix::FOpen</definition>
        <argsstring>(const char *path, const char *mode)</argsstring>
        <name>FOpen</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2367" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2367" bodyend="2369"/>
        <referencedby refid="d6/de5/classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a2ae986dd2f4f2aed31cc6f3bc8c56898" compoundref="df/d5b/gtest_8cc" startline="3432" endline="3462">testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd</referencedby>
        <referencedby refid="d5/d9d/classtesting_1_1internal_1_1ScopedPrematureExitFile_1ae520883b8a6984a864ce675acedff4a2" compoundref="df/d5b/gtest_8cc" startline="3861" endline="3872">testing::internal::ScopedPrematureExitFile::ScopedPrematureExitFile</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a19b35b39782d41e6ef76e1910a3a502e" compoundref="df/d5b/gtest_8cc" startline="4693" endline="4707">testing::internal::WriteToShardStatusFileIfNeeded</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a9ef6d089cdae03f9d9e0e6d379c40703" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* testing::internal::posix::FReopen</definition>
        <argsstring>(const char *path, const char *mode, FILE *stream)</argsstring>
        <name>FReopen</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2371" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2371" bodyend="2373"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::posix::GetEnv</definition>
        <argsstring>(const char *name)</argsstring>
        <name>GetEnv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2387" column="19" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2387" bodyend="2400"/>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a1055088bb9b867e1b7b8f096f519d7c5" compoundref="df/d09/gtest-port_8cc" startline="1191" endline="1199">testing::internal::BoolFromGTestEnv</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1aaa576613655c2f380278c255c3ec5fef" compoundref="df/d5b/gtest_8cc" startline="4760" endline="4772">testing::internal::Int32FromEnvOrDie</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a2196f070b2d28bceb45c7ad3b565b9ba" compoundref="df/d09/gtest-port_8cc" startline="1204" endline="1225">testing::internal::Int32FromGTestEnv</referencedby>
        <referencedby refid="d6/d49/classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1abdba10a8c97e272ab4cee97cb652c957" compoundref="df/d5b/gtest_8cc" startline="3056" endline="3089">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart</referencedby>
        <referencedby refid="d5/d21/classtesting_1_1UnitTest_1a2febc800536b44500565f4c423f359d3" compoundref="df/d5b/gtest_8cc" startline="4185" endline="4261">testing::UnitTest::Run</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1ac1db1b4603967a6c4404f31cbbac31a6" compoundref="df/d5b/gtest_8cc" startline="2916" endline="2950">testing::internal::ShouldUseColor</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1ab38c435530c97f10fd7a8008a76331f2" compoundref="df/d09/gtest-port_8cc" startline="1229" endline="1256">testing::internal::StringFromGTestEnv</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a9183d29a7f57e2906d03b644e6a12a4a" compoundref="df/d09/gtest-port_8cc" startline="1058" endline="1074">testing::internal::TempDir</referencedby>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1a19b35b39782d41e6ef76e1910a3a502e" compoundref="df/d5b/gtest_8cc" startline="4693" endline="4707">testing::internal::WriteToShardStatusFileIfNeeded</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a16ebe936b3a8ea462a94191635aedc27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::IsATTY</definition>
        <argsstring>(int fd)</argsstring>
        <name>IsATTY</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2341" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2341" bodyend="2341"/>
        <referencedby refid="d0/da7/namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="df/d5b/gtest_8cc" startline="2956" endline="3002">testing::internal::ColoredPrintf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1af0d04ed5baeed28353fa38742748a421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::posix::IsDir</definition>
        <argsstring>(const StatStruct &amp;st)</argsstring>
        <name>IsDir</name>
        <param>
          <type>const <ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a8eb9f08d3af29941c2d2a964cfff3ecb" kindref="member">StatStruct</ref> &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2348" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2348" bodyend="2348"/>
        <referencedby refid="de/dea/classtesting_1_1internal_1_1FilePath_1a74ba8435e822d77f79f137c38de9bfeb" compoundref="dc/d20/gtest-filepath_8cc" startline="223" endline="249">testing::internal::FilePath::DirectoryExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a3c6ab13e581a56f1b02f3eb7536c97fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::Read</definition>
        <argsstring>(int fd, void *buf, unsigned int count)</argsstring>
        <name>Read</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2378" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2378" bodyend="2380"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1acbad5d4ea5b73fd1765f5f760642932a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::RmDir</definition>
        <argsstring>(const char *dir)</argsstring>
        <name>RmDir</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2347" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2347" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a2b87b7ff647a128614daf50667eb9304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::Stat</definition>
        <argsstring>(const char *path, StatStruct *buf)</argsstring>
        <name>Stat</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="d0/d81/namespacetesting_1_1internal_1_1posix_1a8eb9f08d3af29941c2d2a964cfff3ecb" kindref="member">StatStruct</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2342" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2342" bodyend="2342"/>
        <referencedby refid="de/dea/classtesting_1_1internal_1_1FilePath_1a74ba8435e822d77f79f137c38de9bfeb" compoundref="dc/d20/gtest-filepath_8cc" startline="223" endline="249">testing::internal::FilePath::DirectoryExists</referencedby>
        <referencedby refid="de/dea/classtesting_1_1internal_1_1FilePath_1a105bd8fc3adff8fcb4a593532842fb68" compoundref="dc/d20/gtest-filepath_8cc" startline="209" endline="219">testing::internal::FilePath::FileOrDirectoryExists</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a1ef2385a7f8e4c706054da35967e76bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::StrCaseCmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>StrCaseCmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2343" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2343" bodyend="2345"/>
        <referencedby refid="d2/df8/classtesting_1_1internal_1_1String_1a116ca435d63306927ba19f90a3596787" compoundref="df/d5b/gtest_8cc" startline="1905" endline="1911">testing::internal::String::CaseInsensitiveCStringEquals</referencedby>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a8e352884793a65ae8be144676f1a9136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* testing::internal::posix::StrDup</definition>
        <argsstring>(const char *src)</argsstring>
        <name>StrDup</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2346" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2346" bodyend="2346"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a4b77b14af6f4d18f83d303b98e9349c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::posix::StrError</definition>
        <argsstring>(int errnum)</argsstring>
        <name>StrError</name>
        <param>
          <type>int</type>
          <declname>errnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2385" column="19" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2385" bodyend="2385"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1a36fca815713332e5c6dc92c98b6b2574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::posix::StrNCpy</definition>
        <argsstring>(char *dest, const char *src, size_t n)</argsstring>
        <name>StrNCpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2356" column="19" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2356" bodyend="2358"/>
      </memberdef>
      <memberdef kind="function" id="d0/d81/namespacetesting_1_1internal_1_1posix_1af4acf9f78d55f815a18b43786511abef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::posix::Write</definition>
        <argsstring>(int fd, const void *buf, unsigned int count)</argsstring>
        <name>Write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2381" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2381" bodyend="2383"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2297" column="1"/>
  </compounddef>
</doxygen>

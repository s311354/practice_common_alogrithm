<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacetesting_1_1internal" kind="namespace" language="C++">
    <compoundname>testing::internal</compoundname>
    <innerclass refid="structtesting_1_1internal_1_1IteratorTraits_3_01const_01T_01_5_01_4" prot="public">testing::internal::IteratorTraits&lt; const T * &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1String" prot="public">testing::internal::String</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize" prot="public">testing::internal::TypeWithSize</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_014_01_4" prot="public">testing::internal::TypeWithSize&lt; 4 &gt;</innerclass>
    <innerclass refid="classtesting_1_1internal_1_1TypeWithSize_3_018_01_4" prot="public">testing::internal::TypeWithSize&lt; 8 &gt;</innerclass>
    <innernamespace refid="namespacetesting_1_1internal_1_1anonymous__namespace_02gtest_8cc_03">testing::internal::anonymous_namespace{gtest.cc}</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal_1_1edit__distance">testing::internal::edit_distance</innernamespace>
    <innernamespace refid="namespacetesting_1_1internal_1_1posix">testing::internal::posix</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793" prot="public" static="no" strong="no">
        <type></type>
        <name>CharFormat</name>
        <enumvalue id="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793af7038866be92e9978360b831e376ffaa" prot="public">
          <name>kAsIs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793aebfa5293302338a8e8678744c103f113" prot="public">
          <name>kHexEscape</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793ae1211108e9f35f891d9951da64794d03" prot="public">
          <name>kSpecialEscape</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="128" column="1" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4e" prot="public" static="no" strong="no">
        <type></type>
        <name>GTestColor</name>
        <enumvalue id="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4eafcd8803dc9e37e374d5a4486afc230b7" prot="public">
          <name>COLOR_DEFAULT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea9ebb3ddab9391781f6ee5021e1e443c3" prot="public">
          <name>COLOR_RED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea3b1e81f5b14a17b35a8672d57d166507" prot="public">
          <name>COLOR_GREEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea2cca441161aca75a208ff08d07f5b1a5" prot="public">
          <name>COLOR_YELLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2880" column="1" bodyfile="lib/googletest/src/gtest.cc" bodystart="2880" bodyend="2885"/>
      </memberdef>
      <memberdef kind="enum" id="namespacetesting_1_1internal_1aa6255ef3b023c5b4e1a2198d887fb977" prot="public" static="no" strong="no">
        <type></type>
        <name>GTestLogSeverity</name>
        <enumvalue id="namespacetesting_1_1internal_1aa6255ef3b023c5b4e1a2198d887fb977aff315e0913fcda86fe4de882bf5e33e9" prot="public">
          <name>GTEST_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1aa6255ef3b023c5b4e1a2198d887fb977a7a051bc2794f15a4bf0eab40562a304c" prot="public">
          <name>GTEST_WARNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1aa6255ef3b023c5b4e1a2198d887fb977a651e9cd2a904e0c8210536271b875f75" prot="public">
          <name>GTEST_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacetesting_1_1internal_1aa6255ef3b023c5b4e1a2198d887fb977a75063567740f6bf7da419b1b9197b12e" prot="public">
          <name>GTEST_FATAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1244" column="1" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1244" bodyend="1249"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" prot="public" static="no">
        <type>long long</type>
        <definition>typedef long long testing::internal::BiggestInt</definition>
        <argsstring></argsstring>
        <name>BiggestInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2241" column="19" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a66a7579b1893b260c31dad577f7a5c48" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1FloatingPoint" kindref="compound">FloatingPoint</ref>&lt; double &gt;</type>
        <definition>typedef FloatingPoint&lt;double&gt; testing::internal::Double</definition>
        <argsstring></argsstring>
        <name>Double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="421" column="23" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1abb1d0789f19bdde21affccbd1078b525" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant</ref>&lt; false &gt;</type>
        <definition>typedef bool_constant&lt;false&gt; testing::internal::false_type</definition>
        <argsstring></argsstring>
        <name>false_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2209" column="23" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a02e1981f5ff70609e6ac06e006ff519a" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1FloatingPoint" kindref="compound">FloatingPoint</ref>&lt; float &gt;</type>
        <definition>typedef FloatingPoint&lt;float&gt; testing::internal::Float</definition>
        <argsstring></argsstring>
        <name>Float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="420" column="23" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt; 4 &gt;::Int</type>
        <definition>typedef TypeWithSize&lt;4&gt;::Int testing::internal::Int32</definition>
        <argsstring></argsstring>
        <name>Int32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2494" column="28" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a271c563fec38b804ddab0677f51f70a8" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt; 8 &gt;::Int</type>
        <definition>typedef TypeWithSize&lt;8&gt;::Int testing::internal::Int64</definition>
        <argsstring></argsstring>
        <name>Int64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2496" column="28" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1ad8f0c2883245f1df2a53618a49f0deb3" prot="public" static="no">
        <type>int</type>
        <definition>typedef int testing::internal::IsContainer</definition>
        <argsstring></argsstring>
        <name>IsContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="930" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1abf080521ce135deb510e0a7830fd3d33" prot="public" static="no">
        <type>char</type>
        <definition>typedef char testing::internal::IsNotContainer</definition>
        <argsstring></argsstring>
        <name>IsNotContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="938" column="14" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="938" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a08b187c6cc4e28400aadf9a32fccc8de" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1GTestMutexLock" kindref="compound">GTestMutexLock</ref></type>
        <definition>typedef GTestMutexLock testing::internal::MutexLock</definition>
        <argsstring></argsstring>
        <name>MutexLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2159" column="24" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a30037044c0b57cdd647c7e2e97cb2cff" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* testing::internal::SetUpTestCaseFunc) ()</definition>
        <argsstring>)()</argsstring>
        <name>SetUpTestCaseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="501" column="9" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" prot="public" static="no">
        <type>::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>typedef ::std::string testing::internal::string</definition>
        <argsstring></argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1097" column="23" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a7706b17f05f4b49e351b052ae4e05073" prot="public" static="no">
        <type>::<ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" kindref="member">string</ref> &gt;</type>
        <definition>typedef ::std::vector&lt;string&gt; testing::internal::Strings</definition>
        <argsstring></argsstring>
        <name>Strings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="859" column="23" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a085e31321d0d029c04d2a79234f60c1a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* testing::internal::TearDownTestCaseFunc) ()</definition>
        <argsstring>)()</argsstring>
        <name>TearDownTestCaseFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="502" column="9" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt; 8 &gt;::Int</type>
        <definition>typedef TypeWithSize&lt;8&gt;::Int testing::internal::TimeInMillis</definition>
        <argsstring></argsstring>
        <name>TimeInMillis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2498" column="28" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a62f917c3424d8841de9b49b5ec28edb4" prot="public" static="no">
        <type><ref refid="structtesting_1_1internal_1_1bool__constant" kindref="compound">bool_constant</ref>&lt; true &gt;</type>
        <definition>typedef bool_constant&lt;true&gt; testing::internal::true_type</definition>
        <argsstring></argsstring>
        <name>true_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2210" column="23" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" prot="public" static="no">
        <type>const void *</type>
        <definition>typedef const void* testing::internal::TypeId</definition>
        <argsstring></argsstring>
        <name>TypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="429" column="20" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt; 4 &gt;::UInt</type>
        <definition>typedef TypeWithSize&lt;4&gt;::UInt testing::internal::UInt32</definition>
        <argsstring></argsstring>
        <name>UInt32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2495" column="29" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1aa6a1ac454e6d7e550fa4925c62c35caa" prot="public" static="no">
        <type><ref refid="classtesting_1_1internal_1_1TypeWithSize" kindref="compound">TypeWithSize</ref>&lt; 8 &gt;::UInt</type>
        <definition>typedef TypeWithSize&lt;8&gt;::UInt testing::internal::UInt64</definition>
        <argsstring></argsstring>
        <name>UInt64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2497" column="29" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacetesting_1_1internal_1a3f543179329c353aee1d7b54a9a8e335" prot="public" static="no">
        <type>::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::wstring</ref></type>
        <definition>typedef ::std::wstring testing::internal::wstring</definition>
        <argsstring></argsstring>
        <name>wstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1103" column="24" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ab7fe90df4f87f1bd8a244b0be2ccad79" prot="public" static="no" mutable="no">
        <type>::<ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" kindref="member">testing::internal::string</ref> &gt;</type>
        <definition>::std::vector&lt;testing::internal::string&gt; testing::internal::g_argvs</definition>
        <argsstring></argsstring>
        <name>g_argvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="387" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="387" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a4d364e5e40f433fff1604355617ea1a6" compoundref="gtest_8cc" startline="389" endline="395">GetArgvs</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" compoundref="gtest_8cc" startline="5344" endline="5357">InitGoogleTestImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a93a772f5e51973b105d91cbb66a203f4" prot="public" static="no" mutable="no">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> bool</type>
        <definition>bool testing::internal::g_help_flag</definition>
        <argsstring></argsstring>
        <name>g_help_flag</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="188" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="188" bodyend="-1" declfile="lib/googletest/src/gtest-internal-inl.h" declline="110" declcolumn="24"/>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a38b1c2b86c7f68ebd5cf95d9ac7d4108" prot="public" static="no" mutable="no">
        <type>class <ref refid="classtesting_1_1internal_1_1GTestFlagSaver" kindref="compound">testing::internal::GTestFlagSaver</ref></type>
        <definition>class GTEST_API_ testing::internal::ScopedTrace testing::internal::GTEST_ATTRIBUTE_UNUSED_</definition>
        <argsstring></argsstring>
        <name>GTEST_ATTRIBUTE_UNUSED_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="225" column="25"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ad5882ed0ceadc0f23090f0f08b5d495b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kAlsoRunDisabledTestsFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kAlsoRunDisabledTestsFlag</name>
        <initializer>= &quot;also_run_disabled_tests&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="89" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a804c907155bfee3a6616ae3ca04048d0" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kBreakOnFailureFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kBreakOnFailureFlag</name>
        <initializer>= &quot;break_on_failure&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="90" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1af4bb309802e83df0927097e6e4201a38" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kCatchExceptionsFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kCatchExceptionsFlag</name>
        <initializer>= &quot;catch_exceptions&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="91" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a159395e649dd7728b09b25f70847f1ca" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kColorEncodedHelpMessage[]</definition>
        <argsstring>[]</argsstring>
        <name>kColorEncodedHelpMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5159" column="19" bodyfile="lib/googletest/src/gtest.cc" bodystart="5159" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a884ff13b75232fbe7daa0caf46f1de66" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kColorFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kColorFlag</name>
        <initializer>= &quot;color&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="92" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a23a8e9527d0e544e7df2d64ad549ce3e" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kCurrentDirectoryString[]</definition>
        <argsstring>[]</argsstring>
        <name>kCurrentDirectoryString</name>
        <initializer>= &quot;./&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="86" column="12" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="86" bodyend="-1"/>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1aaff39ccd7bfb7a1c09c0220a64326387" compoundref="gtest-filepath_8cc" startline="99" endline="118">testing::internal::FilePath::GetCurrentDir</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1a49e030b5a62ca7dcc7f920a63a96fa55" compoundref="gtest-filepath_8cc" startline="166" endline="175">testing::internal::FilePath::RemoveFileName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a008ebfe0c0347d65e5e06e4d310981b3" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kDeathTestStyleFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kDeathTestStyleFlag</name>
        <initializer>= &quot;death_test_style&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" line="50" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a32051e2574562b548be3e26a52eaa553" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kDeathTestUseFork[]</definition>
        <argsstring>[]</argsstring>
        <name>kDeathTestUseFork</name>
        <initializer>= &quot;death_test_use_fork&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" line="51" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" bodystart="51" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a8cb8ee7fe7659e6916a0108dffa2f7dc" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kFilterFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kFilterFlag</name>
        <initializer>= &quot;filter&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="93" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1aa1ffe15dea227d4dded912e43a8eed84" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kFlagfileFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kFlagfileFlag</name>
        <initializer>= &quot;flagfile&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="103" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="103" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a8572303d929880adf30db00952e1c45d" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kInternalRunDeathTestFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kInternalRunDeathTestFlag</name>
        <initializer>= &quot;internal_run_death_test&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" line="52" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a1d3cfebffefbf35f7033d4941493a8ff" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kListTestsFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kListTestsFlag</name>
        <initializer>= &quot;list_tests&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="94" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ad901880198832bc166d2493096b451f7" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" kindref="member">BiggestInt</ref></type>
        <definition>const BiggestInt testing::internal::kMaxBiggestInt</definition>
        <argsstring></argsstring>
        <name>kMaxBiggestInt</name>
        <initializer>=
    ~(static_cast&lt;<ref refid="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" kindref="member">BiggestInt</ref>&gt;(1) &lt;&lt; (8*sizeof(<ref refid="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" kindref="member">BiggestInt</ref>) - 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2439" column="18" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a128515c8ed6c0fe98e498c8042da2060" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>const UInt32 testing::internal::kMaxCodePoint1</definition>
        <argsstring></argsstring>
        <name>kMaxCodePoint1</name>
        <initializer>= (static_cast&lt;<ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref>&gt;(1) &lt;&lt;  7) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1733" column="14" bodyfile="lib/googletest/src/gtest.cc" bodystart="1733" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ab8f4a5ed784352f00342cfeadc72337e" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>const UInt32 testing::internal::kMaxCodePoint2</definition>
        <argsstring></argsstring>
        <name>kMaxCodePoint2</name>
        <initializer>= (static_cast&lt;<ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref>&gt;(1) &lt;&lt; (5 + 6)) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1736" column="14" bodyfile="lib/googletest/src/gtest.cc" bodystart="1736" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1aa42bd507418e570402996e33582beed3" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>const UInt32 testing::internal::kMaxCodePoint3</definition>
        <argsstring></argsstring>
        <name>kMaxCodePoint3</name>
        <initializer>= (static_cast&lt;<ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref>&gt;(1) &lt;&lt; (4 + 2*6)) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1739" column="14" bodyfile="lib/googletest/src/gtest.cc" bodystart="1739" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1acd87c60be9b5fedb2d017503d8834474" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>const UInt32 testing::internal::kMaxCodePoint4</definition>
        <argsstring></argsstring>
        <name>kMaxCodePoint4</name>
        <initializer>= (static_cast&lt;<ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref>&gt;(1) &lt;&lt; (3 + 3*6)) - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1742" column="14" bodyfile="lib/googletest/src/gtest.cc" bodystart="1742" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int testing::internal::kMaxRandomSeed</definition>
        <argsstring></argsstring>
        <name>kMaxRandomSeed</name>
        <initializer>= 99999</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="106" column="11" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="106" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a6e07a655cb987d131cd8fbeba9a7f1eb" compoundref="gtest-internal-inl_8h" startline="152" endline="158">GetNextRandomSeed</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae74fedbdaebaac8d1202192266243b9e" compoundref="gtest-internal-inl_8h" startline="136" endline="147">GetRandomSeedFromFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1abd5368e00a31d175c6696cf76cbbde10" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kOutputFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kOutputFlag</name>
        <initializer>= &quot;output&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="95" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="95" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1afcd71adaa9d1e6df7b282a17fc48125c" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kPathSeparator</definition>
        <argsstring></argsstring>
        <name>kPathSeparator</name>
        <initializer>= &apos;/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="85" column="12" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="85" bodyend="-1"/>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1ac9d57987f60ac43f0c57b89e333e531e" compoundref="gtest-filepath_8cc" startline="199" endline="205">testing::internal::FilePath::ConcatPaths</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1ab47f288e1e9ce5a904eccb94e86c4f99" compoundref="gtest-filepath_8cc" startline="136" endline="147">testing::internal::FilePath::FindLastPathSeparator</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" compoundref="gtest-filepath_8cc" startline="90" endline="96">IsPathSeparator</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1aa2f6d7d7823f71f25de50d309c966ef7" compoundref="gtest-filepath_8cc" startline="356" endline="384">testing::internal::FilePath::Normalize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1aa6c13109bb4c78740ddb082b1ec0de56" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kPrintTimeFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kPrintTimeFlag</name>
        <initializer>= &quot;print_time&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="96" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a964ad71443cfda304b3208bf5d2daa75" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kRandomSeedFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kRandomSeedFlag</name>
        <initializer>= &quot;random_seed&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="97" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a764ee423d39ebb8e10c53ab9b685cd9b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kRepeatFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kRepeatFlag</name>
        <initializer>= &quot;repeat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="98" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1affd2c1118505cb97d8ff728c95fc722b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kShuffleFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kShuffleFlag</name>
        <initializer>= &quot;shuffle&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="99" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ad6f90e66d431ca3a9084408878c2cc77" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kStackTraceDepthFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kStackTraceDepthFlag</name>
        <initializer>= &quot;stack_trace_depth&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="100" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a03a40e0c58a317b122a21f595df7be53" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>GTEST_API_ const char testing::internal::kStackTraceMarker</definition>
        <argsstring>[]</argsstring>
        <name>kStackTraceMarker</name>
        <initializer>= &quot;\nStack trace:\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="184" column="12" bodyfile="lib/googletest/src/gtest.cc" bodystart="184" bodyend="-1" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="105" declcolumn="30"/>
        <referencedby refid="classtesting_1_1UnitTest_1a1d157d2e9a5c1d3405333410c6b13932" compoundref="gtest_8cc" startline="4108" endline="4168">testing::UnitTest::AddTestPartResult</referencedby>
        <referencedby refid="classtesting_1_1TestPartResult_1ac4f4c5383ff6178f441f8bf4ce5ebbff" compoundref="gtest-test-part_8cc" startline="51" endline="55">testing::TestPartResult::ExtractSummary</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a747eccfdbdee3ff8af3bedc476a57c85" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int testing::internal::kStdErrFileno</definition>
        <argsstring></argsstring>
        <name>kStdErrFileno</name>
        <initializer>= STDERR_FILENO</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="89" column="11" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a24f0a3d50cac54a9132f4828ec9b96d9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int testing::internal::kStdOutFileno</definition>
        <argsstring></argsstring>
        <name>kStdOutFileno</name>
        <initializer>= STDOUT_FILENO</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="88" column="11" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1a84f8a2102d45c8b2b35be06d14ffefb8" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kStreamResultToFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kStreamResultToFlag</name>
        <initializer>= &quot;stream_result_to&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="101" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1acac7993efabbd9dd62c1e9c7d143a72f" prot="public" static="no" mutable="no">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> const <ref refid="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" kindref="member">TypeId</ref></type>
        <definition>const TypeId testing::internal::kTestTypeIdInGoogleTest</definition>
        <argsstring></argsstring>
        <name>kTestTypeIdInGoogleTest</name>
        <initializer>= <ref refid="namespacetesting_1_1internal_1a1e85cf16bb95b60f879d48ba1fbfc1c9" kindref="member">GetTestTypeId</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="86" column="32" bodyfile="lib/googletest/src/gtest.cc" bodystart="626" bodyend="-1" declfile="lib/googletest/src/gtest-internal-inl.h" declline="86" declcolumn="32"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ad9efcf363de3483afd91c7393a4fefb8" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kThrowOnFailureFlag[]</definition>
        <argsstring>[]</argsstring>
        <name>kThrowOnFailureFlag</name>
        <initializer>= &quot;throw_on_failure&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="102" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ae6e5e31b85dac8586d4cc1ab1671f438" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kTypeParamLabel[]</definition>
        <argsstring>[]</argsstring>
        <name>kTypeParamLabel</name>
        <initializer>= &quot;TypeParam&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3006" column="19" bodyfile="lib/googletest/src/gtest.cc" bodystart="3006" bodyend="-1"/>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ad2cfedef41d3d29aad23c2c64214e6f3" compoundref="gtest_8cc" startline="4865" endline="4900">testing::internal::UnitTestImpl::ListTestsMatchingFilter</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1adcb68c729565d4bcdf8418a52902c3de" compoundref="gtest_8cc" startline="3098" endline="3109">testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a7a85ebe3b4de93a1edb091f92f1fb393" compoundref="gtest_8cc" startline="3009" endline="3024">PrintFullTestCommentIfPresent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1abae7a5775c901f2fd12b058b00d09840" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kUnknownFile[]</definition>
        <argsstring>[]</argsstring>
        <name>kUnknownFile</name>
        <initializer>= &quot;unknown file&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="876" column="12" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="876" bodyend="-1"/>
        <referencedby refid="namespacetesting_1_1internal_1a1ee4cde97868c53e442d3182496a9f3c" compoundref="gtest-port_8cc" startline="898" endline="906">FormatCompilerIndependentFileLocation</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a31b7c3abed4a7c395f42c61e993989f4" compoundref="gtest-port_8cc" startline="880" endline="891">FormatFileLocation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetesting_1_1internal_1ae57eee0bf5371ff8e9688fb4464bc62b" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char testing::internal::kValueParamLabel[]</definition>
        <argsstring>[]</argsstring>
        <name>kValueParamLabel</name>
        <initializer>= &quot;GetParam()&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3007" column="19" bodyfile="lib/googletest/src/gtest.cc" bodystart="3007" bodyend="-1"/>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ad2cfedef41d3d29aad23c2c64214e6f3" compoundref="gtest_8cc" startline="4865" endline="4900">testing::internal::UnitTestImpl::ListTestsMatchingFilter</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a7a85ebe3b4de93a1edb091f92f1fb393" compoundref="gtest_8cc" startline="3009" endline="3024">PrintFullTestCommentIfPresent</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::AlwaysFalse</definition>
        <argsstring>()</argsstring>
        <name>AlwaysFalse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="736" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="736" bodyend="736"/>
        <references refid="namespacetesting_1_1internal_1a4d46f09c3bfe68700b7f728d2cc3782f" compoundref="gtest_8cc" startline="4988" endline="4996">AlwaysTrue</references>
        <referencedby refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4d46f09c3bfe68700b7f728d2cc3782f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>GTEST_API_ bool testing::internal::AlwaysTrue</definition>
        <argsstring>()</argsstring>
        <name>AlwaysTrue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4988" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="4988" bodyend="4996" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="733" declcolumn="17"/>
        <references refid="namespacetesting_1_1internal_1ab2709373c78eb8b1c22a6ba30cceba52" compoundref="gtest_8cc" startline="4986" endline="4986">IsTrue</references>
        <referencedby refid="namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" compoundref="gtest-internal_8h" startline="736" endline="736">AlwaysFalse</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a8eb8eddf760375a490e007b20777ec56" compoundref="gtest_8cc" startline="922" endline="937">SplitString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af69e146a989e8d48def39a0cc59461c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::AppendUserMessage</definition>
        <argsstring>(const std::string &amp;gtest_msg, const Message &amp;user_msg)</argsstring>
        <name>AppendUserMessage</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>gtest_msg</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1Message" kindref="compound">Message</ref> &amp;</type>
          <declname>user_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2001" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="2001" bodyend="2010" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="137" declcolumn="24"/>
        <references refid="cpp/string/basic_string/empty_1">std::string::empty</references>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <referencedby refid="classtesting_1_1internal_1_1AssertHelper_1a97bf22d786131ab7baa86b97a27aeb4d" compoundref="gtest_8cc" startline="373" endline="381">testing::internal::AssertHelper::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a94a857fe6ff32cf4fdc4769a4071f239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iter</type>
          </param>
          <param>
            <type>typename Element</type>
          </param>
        </templateparamlist>
        <type>Iter</type>
        <definition>Iter testing::internal::ArrayAwareFind</definition>
        <argsstring>(Iter begin, Iter end, const Element &amp;elem)</argsstring>
        <name>ArrayAwareFind</name>
        <param>
          <type>Iter</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iter</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Element &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="983" column="6" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="983" bodyend="989"/>
        <references refid="namespacetesting_1_1internal_1af4bebf36baf0b0a5b26d051dde55fa47" compoundref="gtest-internal_8h" startline="972" endline="978">ArrayEq</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a49b4d0ee49c0f8c93bab29ebd20630cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T &amp;lhs, const U &amp;rhs)</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const U &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="960" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="960" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af4bebf36baf0b0a5b26d051dde55fa47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T *lhs, size_t size, const U *rhs)</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const U *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="972" column="6" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="972" bodyend="978" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="956" declcolumn="6"/>
        <referencedby refid="namespacetesting_1_1internal_1a94a857fe6ff32cf4fdc4769a4071f239" compoundref="gtest-internal_8h" startline="983" endline="989">ArrayAwareFind</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a5cb6f81ee827130024261121c742b26c" compoundref="gtest-internal_8h" startline="964" endline="966">ArrayEq</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1NativeArray_1a81b90f5739ed812610e68dc34c9e3850" compoundref="gtest-internal_8h" startline="1065" endline="1068">testing::internal::NativeArray&lt; Element &gt;::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a5cb6f81ee827130024261121c742b26c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::ArrayEq</definition>
        <argsstring>(const T(&amp;lhs)[N], const U(&amp;rhs)[N])</argsstring>
        <name>ArrayEq</name>
        <param>
          <type>const T(&amp;)</type>
          <declname>lhs</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>const U(&amp;)</type>
          <declname>rhs</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="964" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="964" bodyend="966"/>
        <references refid="namespacetesting_1_1internal_1af4bebf36baf0b0a5b26d051dde55fa47" compoundref="gtest-internal_8h" startline="972" endline="978">ArrayEq</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1055088bb9b867e1b7b8f096f519d7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::BoolFromGTestEnv</definition>
        <argsstring>(const char *flag, bool default_value)</argsstring>
        <name>BoolFromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1191" column="6" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1191" bodyend="1199" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="2547" declcolumn="6"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1a7540386ecf74d7ab7e2fa6089db94682" compoundref="gtest-port_8cc" startline="1134" endline="1144">FlagToEnvVar</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8ec00d458d0d442bd64af7b5f9c22dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::CaptureStderr</definition>
        <argsstring>()</argsstring>
        <name>CaptureStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1416" column="17" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1416" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1acba06d4f0343dec407738ba5544af990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::CaptureStdout</definition>
        <argsstring>()</argsstring>
        <name>CaptureStdout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1414" column="17" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1414" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1abfe9bfb020d38aa4e0e12c001911b22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Derived</type>
          </param>
          <param>
            <type>class Base</type>
          </param>
        </templateparamlist>
        <type>Derived *</type>
        <definition>Derived* testing::internal::CheckedDowncastToActualType</definition>
        <argsstring>(Base *base)</argsstring>
        <name>CheckedDowncastToActualType</name>
        <param>
          <type>Base *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1392" column="9" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1392" bodyend="1404"/>
        <references refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" compoundref="gtest-port_8h" startline="1295">GTEST_CHECK_</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a2c54b453387aa8a18f2f3e09f10b5a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>UInt32 testing::internal::ChopLowBits</definition>
        <argsstring>(UInt32 *bits, int n)</argsstring>
        <name>ChopLowBits</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref> *</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1747" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="1747" bodyend="1751"/>
        <referencedby refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1edf90480571c0659a39d13e3777d9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, BiggestInt lhs, BiggestInt rhs)</argsstring>
        <name>CmpHelperEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" kindref="member">BiggestInt</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a05c6bd9ede5ccdf25191a590d610dcc6" kindref="member">BiggestInt</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1437" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1437" bodyend="1450" declfile="lib/googletest/include/gtest/gtest.h" declline="1403" declcolumn="28"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="namespacetesting_1_1internal_1a91ab078f10adc669f09b7f604975c518" compoundref="gtest-printers_8h" startline="349" endline="352">FormatForComparisonFailureMessage</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4638c74d9b32e971f9b321af6fafc2f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::CmpHelperEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const T1 &amp;lhs, const T2 &amp;rhs)</argsstring>
        <name>CmpHelperEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1387" column="17" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="1387" bodyend="1398"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="namespacetesting_1_1internal_1a1def8ec9393360a1b34a20528703e7f7" compoundref="gtest_8h" startline="1375" endline="1383">CmpHelperEQFailure</references>
        <references refid="gtest-port_8h_1ab4c44546d6d9aced68993b87b608fc06" compoundref="gtest-port_8h" startline="318">GTEST_DISABLE_MSC_WARNINGS_POP_</references>
        <references refid="gtest-port_8h_1a86994cc68e844d8b82089c70408dfc61" compoundref="gtest-port_8h" startline="317">GTEST_DISABLE_MSC_WARNINGS_PUSH_</references>
        <referencedby refid="classtesting_1_1internal_1_1EqHelper_1ae3572c7374534a916b9117efaa89f33f" compoundref="gtest_8h" startline="1417" endline="1422">testing::internal::EqHelper&lt; lhs_is_null_literal &gt;::Compare</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1EqHelper_3_01true_01_4_1a12c7194b2a210b61f06c912eef484ca6" compoundref="gtest_8h" startline="1448" endline="1460">testing::internal::EqHelper&lt; true &gt;::Compare</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1def8ec9393360a1b34a20528703e7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::CmpHelperEQFailure</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const T1 &amp;lhs, const T2 &amp;rhs)</argsstring>
        <name>CmpHelperEQFailure</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1375" column="17" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="1375" bodyend="1383"/>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="namespacetesting_1_1internal_1a91ab078f10adc669f09b7f604975c518" compoundref="gtest-printers_8h" startline="349" endline="352">FormatForComparisonFailureMessage</references>
        <referencedby refid="namespacetesting_1_1internal_1a4638c74d9b32e971f9b321af6fafc2f1" compoundref="gtest_8h" startline="1387" endline="1398">CmpHelperEQ</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a98ce463e5dbe0c6120fa817e1f8f2944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RawType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::CmpHelperFloatingPointEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, RawType lhs_value, RawType rhs_value)</argsstring>
        <name>CmpHelperFloatingPointEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>lhs_value</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>rhs_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1631" column="17" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="1631" bodyend="1654"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="cpp/io/manip/setprecision_1">std::setprecision</references>
        <references refid="namespacetesting_1_1internal_1ab56e151d23ee7e14dbf03ac7aa1d182b" compoundref="gtest_8cc" startline="1982" endline="1998">StringStreamToString</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a894ffccd936d78fd555f490020c27f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::CmpHelperOpFailure</definition>
        <argsstring>(const char *expr1, const char *expr2, const T1 &amp;val1, const T2 &amp;val2, const char *op)</argsstring>
        <name>CmpHelperOpFailure</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>const T1 &amp;</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>val2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1486" column="17" bodyfile="lib/googletest/include/gtest/gtest.h" bodystart="1486" bodyend="1493"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1_1internal_1a91ab078f10adc669f09b7f604975c518" compoundref="gtest-printers_8h" startline="349" endline="352">FormatForComparisonFailureMessage</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a898b1e47a9d978e99318b224f69a54e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRCASEEQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const char *lhs, const char *rhs)</argsstring>
        <name>CmpHelperSTRCASEEQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1503" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1503" bodyend="1516" declfile="lib/googletest/include/gtest/gtest.h" declline="1545" declcolumn="28"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="classtesting_1_1internal_1_1String_1a116ca435d63306927ba19f90a3596787" compoundref="gtest_8cc" startline="1905" endline="1911">testing::internal::String::CaseInsensitiveCStringEquals</references>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="namespacetesting_1aa5717bb1144edd1d262d310ba70c82ed" compoundref="gtest-printers_8h" startline="980" endline="984">testing::PrintToString</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a5f74b933606b0a742cd5a8ad2d7087e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRCASENE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTRCASENE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1533" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1533" bodyend="1545" declfile="lib/googletest/include/gtest/gtest.h" declline="1561" declcolumn="28"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="classtesting_1_1internal_1_1String_1a116ca435d63306927ba19f90a3596787" compoundref="gtest_8cc" startline="1905" endline="1911">testing::internal::String::CaseInsensitiveCStringEquals</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a2863c85877728b2c223cf6ade4a530c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTREQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const char *lhs, const char *rhs)</argsstring>
        <name>CmpHelperSTREQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1487" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1487" bodyend="1500" declfile="lib/googletest/include/gtest/gtest.h" declline="1537" declcolumn="28"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="classtesting_1_1internal_1_1String_1a8bea7b33e7effbd299a0b4a5522ea96e" compoundref="gtest_8cc" startline="894" endline="900">testing::internal::String::CStringEquals</references>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="namespacetesting_1aa5717bb1144edd1d262d310ba70c82ed" compoundref="gtest-printers_8h" startline="980" endline="984">testing::PrintToString</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a96fddadf115749a0743bc254550266e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTREQ</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const wchar_t *lhs, const wchar_t *rhs)</argsstring>
        <name>CmpHelperSTREQ</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1869" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1869" bodyend="1882" declfile="lib/googletest/include/gtest/gtest.h" declline="1570" declcolumn="28"/>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" compoundref="gtest_8cc" startline="1312" endline="1343">EqFailure</references>
        <references refid="namespacetesting_1aa5717bb1144edd1d262d310ba70c82ed" compoundref="gtest-printers_8h" startline="980" endline="984">testing::PrintToString</references>
        <references refid="classtesting_1_1internal_1_1String_1ab0373bf6e96453d6ca0de2e68df13d3a" compoundref="gtest_8cc" startline="1860" endline="1866">testing::internal::String::WideCStringEquals</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6b485231a046ff760844a0321c04870b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRNE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const char *s1, const char *s2)</argsstring>
        <name>CmpHelperSTRNE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1519" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1519" bodyend="1530" declfile="lib/googletest/include/gtest/gtest.h" declline="1553" declcolumn="28"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="classtesting_1_1internal_1_1String_1a8bea7b33e7effbd299a0b4a5522ea96e" compoundref="gtest_8cc" startline="894" endline="900">testing::internal::String::CStringEquals</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6e700804399b6694d8d6157e3a141b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::CmpHelperSTRNE</definition>
        <argsstring>(const char *s1_expression, const char *s2_expression, const wchar_t *s1, const wchar_t *s2)</argsstring>
        <name>CmpHelperSTRNE</name>
        <param>
          <type>const char *</type>
          <declname>s1_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2_expression</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1885" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1885" bodyend="1897" declfile="lib/googletest/include/gtest/gtest.h" declline="1578" declcolumn="28"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="namespacetesting_1aa5717bb1144edd1d262d310ba70c82ed" compoundref="gtest-printers_8h" startline="980" endline="984">testing::PrintToString</references>
        <references refid="classtesting_1_1internal_1_1String_1ab0373bf6e96453d6ca0de2e68df13d3a" compoundref="gtest_8cc" startline="1860" endline="1866">testing::internal::String::WideCStringEquals</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::CodePointToUtf8</definition>
        <argsstring>(UInt32 code_point)</argsstring>
        <name>CodePointToUtf8</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
          <declname>code_point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1759" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="1759" bodyend="1785" declfile="lib/googletest/src/gtest-internal-inl.h" declline="233" declcolumn="24"/>
        <references refid="namespacetesting_1_1internal_1a2c54b453387aa8a18f2f3e09f10b5a7d" compoundref="gtest_8cc" startline="1747" endline="1751">ChopLowBits</references>
        <references refid="classtesting_1_1internal_1_1String_1affe59102e49092fc0684388e9b0c5c1e" compoundref="gtest_8cc" startline="1966" endline="1970">testing::internal::String::FormatHexInt</references>
        <references refid="namespacetesting_1_1internal_1a128515c8ed6c0fe98e498c8042da2060" compoundref="gtest_8cc" startline="1733">kMaxCodePoint1</references>
        <references refid="namespacetesting_1_1internal_1ab8f4a5ed784352f00342cfeadc72337e" compoundref="gtest_8cc" startline="1736">kMaxCodePoint2</references>
        <references refid="namespacetesting_1_1internal_1aa42bd507418e570402996e33582beed3" compoundref="gtest_8cc" startline="1739">kMaxCodePoint3</references>
        <references refid="namespacetesting_1_1internal_1acd87c60be9b5fedb2d017503d8834474" compoundref="gtest_8cc" startline="1742">kMaxCodePoint4</references>
        <referencedby refid="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" compoundref="gtest_8cc" startline="1823" endline="1844">WideStringToUtf8</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::ColoredPrintf</definition>
        <argsstring>(GTestColor color, const char *fmt,...)</argsstring>
        <name>ColoredPrintf</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4e" kindref="member">GTestColor</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2956" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="2956" bodyend="3002"/>
        <references refid="namespacetesting_1_1internal_1a4b24c851ab13569b1b15b3d259b60d2e" compoundref="gtest-internal_8h" startline="736" endline="736">AlwaysFalse</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4eafcd8803dc9e37e374d5a4486afc230b7" compoundref="gtest_8cc" startline="2881">COLOR_DEFAULT</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a3117b067e1f942a2031e666953120ccc" compoundref="gtest-port_8h" startline="2340" endline="2340">testing::internal::posix::FileNo</references>
        <references refid="namespacetesting_1_1internal_1a0aefb9deb60e90f19c236559837303d8" compoundref="gtest_8cc" startline="2904" endline="2911">GetAnsiColorCode</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a16ebe936b3a8ea462a94191635aedc27" compoundref="gtest-port_8h" startline="2341" endline="2341">testing::internal::posix::IsATTY</references>
        <references refid="namespacetesting_1_1internal_1ac1db1b4603967a6c4404f31cbbac31a6" compoundref="gtest_8cc" startline="2916" endline="2950">ShouldUseColor</references>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a846a5e82b421e04fcdd2b1b2b64b162f" compoundref="gtest_8cc" startline="3091" endline="3096">testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1afea9dc849c92fdbc1d8505f4c74ffc1a" compoundref="gtest_8cc" startline="3161" endline="3166">testing::internal::PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a7a62fe58fa6f6aace813eb62b31e5a51" compoundref="gtest_8cc" startline="3149" endline="3159">testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1adcb68c729565d4bcdf8418a52902c3de" compoundref="gtest_8cc" startline="3098" endline="3109">testing::internal::PrettyUnitTestResultPrinter::OnTestCaseStart</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1ac29b30216023baddda04ef5889f484ff" compoundref="gtest_8cc" startline="3193" endline="3229">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1abdba10a8c97e272ab4cee97cb652c957" compoundref="gtest_8cc" startline="3056" endline="3089">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a5078ee71cfa97e37ae7a9366149195c5" compoundref="gtest_8cc" startline="3111" endline="3116">testing::internal::PrettyUnitTestResultPrinter::OnTestStart</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a7d8c446a29c7e22d7d4dde8f530bb57e" compoundref="gtest_8cc" startline="5125" endline="5157">PrintColorEncoded</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1aca5a9dc08998948e293b307d931b3f86" compoundref="gtest_8cc" startline="3169" endline="3191">testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a0fe41657b1d1ab7ec4e37ec07403ee6c" compoundref="gtest_8cc" startline="4715" endline="4755">ShouldShard</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a19b35b39782d41e6ef76e1910a3a502e" compoundref="gtest_8cc" startline="4693" endline="4707">WriteToShardStatusFileIfNeeded</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a84d0e746ba0827cc52b53d22000de0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T &amp;from, U *to)</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>U *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="1000" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="1000" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afb1b9728aaaf6d9fe6246a19cfe3f7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T *from, size_t size, U *to)</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T *</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>U *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="1012" column="6" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="1012" bodyend="1016" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="996" declcolumn="6"/>
        <referencedby refid="namespacetesting_1_1internal_1a1e7ae855686720615dcd5754c8181c62" compoundref="gtest-internal_8h" startline="1004" endline="1006">CopyArray</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1NativeArray_1a8c0069cc09f559785fe4923fc118056f" compoundref="gtest-internal_8h" startline="1077" endline="1083">testing::internal::NativeArray&lt; Element &gt;::InitCopy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1e7ae855686720615dcd5754c8181c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::CopyArray</definition>
        <argsstring>(const T(&amp;from)[N], U(*to)[N])</argsstring>
        <name>CopyArray</name>
        <param>
          <type>const T(&amp;)</type>
          <declname>from</declname>
          <array>[N]</array>
        </param>
        <param>
          <type>U(*)</type>
          <declname>to</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="1004" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="1004" bodyend="1006"/>
        <references refid="namespacetesting_1_1internal_1afb1b9728aaaf6d9fe6246a19cfe3f7f5" compoundref="gtest-internal_8h" startline="1012" endline="1016">CopyArray</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1e77a774d910346eff11a86d8df783a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>typename Predicate</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int testing::internal::CountIf</definition>
        <argsstring>(const Container &amp;c, Predicate predicate)</argsstring>
        <name>CountIf</name>
        <param>
          <type>const Container &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Predicate</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="283" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="283" bodyend="292"/>
        <referencedby refid="classtesting_1_1TestCase_1a8ef690ab8ec74d02c99416637de71ae8" compoundref="gtest_8cc" startline="2692" endline="2694">testing::TestCase::disabled_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1af981a537231e1dad4c1f092c6fdec1ff" compoundref="gtest_8cc" startline="735" endline="737">testing::internal::UnitTestImpl::failed_test_case_count</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a70e26eb070c75ae62a191fa610ea234f" compoundref="gtest_8cc" startline="2682" endline="2684">testing::TestCase::failed_test_count</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a30e00d4076ae07fb5ad7b623d9dc1fe4" compoundref="gtest_8cc" startline="2184" endline="2186">testing::TestResult::HasFatalFailure</referencedby>
        <referencedby refid="classtesting_1_1TestResult_1a510564fa67b485ed4589a259f2a032d6" compoundref="gtest_8cc" startline="2194" endline="2196">testing::TestResult::HasNonfatalFailure</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1ad6b34335955967bc361b2fbacd2dd6c9" compoundref="gtest_8cc" startline="2687" endline="2689">testing::TestCase::reportable_disabled_test_count</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1ae4e69f1a77b6aba274981e987e50acab" compoundref="gtest_8cc" startline="2697" endline="2699">testing::TestCase::reportable_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a2db3a2b3fed8065dbdd768ee407bf67e" compoundref="gtest_8cc" startline="730" endline="732">testing::internal::UnitTestImpl::successful_test_case_count</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1ab61929942a202f03903182866bd0e086" compoundref="gtest_8cc" startline="2677" endline="2679">testing::TestCase::successful_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1aff65061646c6b9857b37097423500bfe" compoundref="gtest_8cc" startline="746" endline="748">testing::internal::UnitTestImpl::test_case_to_run_count</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a57f115315eb756e23be6651bb5e6c638" compoundref="gtest_8cc" startline="2702" endline="2704">testing::TestCase::test_to_run_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac8ef1bb10cd9e69de939789b759e6bc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1a40d4fffcd2bf56f18b1c380615aa85e3" kindref="member">UInt32</ref></type>
        <definition>UInt32 testing::internal::CreateCodePointFromUtf16SurrogatePair</definition>
        <argsstring>(wchar_t first, wchar_t second)</argsstring>
        <name>CreateCodePointFromUtf16SurrogatePair</name>
        <param>
          <type>wchar_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1800" column="15" bodyfile="lib/googletest/src/gtest.cc" bodystart="1800" bodyend="1808"/>
        <referencedby refid="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" compoundref="gtest_8cc" startline="1823" endline="1844">WideStringToUtf8</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac7dfe02c4c1cbfe89c23a93d873079c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::DefaultPrintTo</definition>
        <argsstring>(IsContainer, false_type, const C &amp;container, ::std::ostream *os)</argsstring>
        <name>DefaultPrintTo</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1ad8f0c2883245f1df2a53618a49f0deb3" kindref="member">IsContainer</ref></type>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1abb1d0789f19bdde21affccbd1078b525" kindref="member">false_type</ref></type>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="370" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="370" bodyend="395"/>
        <references refid="namespacetesting_1_1internal_1a30708fa2bacf11895b03bdb21eb72309" compoundref="gtest-printers_8h" startline="852" endline="857">UniversalPrint</references>
        <referencedby refid="namespacetesting_1_1internal_1adb3c27150dbe661db0e0c4be27533460" compoundref="gtest-printers_8h" startline="454" endline="478">PrintTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a78e4937ba564f01dac2ff25f3eece0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::DefaultPrintTo</definition>
        <argsstring>(IsNotContainer, false_type, const T &amp;value, ::std::ostream *os)</argsstring>
        <name>DefaultPrintTo</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1abf080521ce135deb510e0a7830fd3d33" kindref="member">IsNotContainer</ref></type>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1abb1d0789f19bdde21affccbd1078b525" kindref="member">false_type</ref></type>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="436" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="436" bodyend="440"/>
        <references refid="namespacetesting__internal_1a3f49d3d0c996242f9d383c850097a656" compoundref="gtest-printers_8h" startline="222" endline="250">testing_internal::DefaultPrintNonContainerTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1affa1f94e3ba8db8b964553c2871bf339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::DefaultPrintTo</definition>
        <argsstring>(IsNotContainer, true_type, T *p, ::std::ostream *os)</argsstring>
        <name>DefaultPrintTo</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1abf080521ce135deb510e0a7830fd3d33" kindref="member">IsNotContainer</ref></type>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a62f917c3424d8841de9b49b5ec28edb4" kindref="member">true_type</ref></type>
        </param>
        <param>
          <type>T *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="404" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="404" bodyend="431"/>
        <references refid="namespacetesting_1_1internal_1ab2709373c78eb8b1c22a6ba30cceba52" compoundref="gtest_8cc" startline="4986" endline="4986">IsTrue</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1e7045e09392aece10aea4517458b7ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void testing::internal::Delete</definition>
        <argsstring>(T *x)</argsstring>
        <name>Delete</name>
        <param>
          <type>T *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="340" column="13" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="340" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a513107ff8defa97d949937fc1350a56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::DiffStrings</definition>
        <argsstring>(const std::string &amp;left, const std::string &amp;right, size_t *total_line_count)</argsstring>
        <name>DiffStrings</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>total_line_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="200" column="24" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="200" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aea60207c4cedc8946a70ada62e38da8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::DoubleNearPredFormat</definition>
        <argsstring>(const char *expr1, const char *expr2, const char *abs_error_expr, double val1, double val2, double abs_error)</argsstring>
        <name>DoubleNearPredFormat</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>abs_error_expr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>abs_error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1362" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1362" bodyend="1379" declfile="lib/googletest/include/gtest/gtest.h" declline="1659" declcolumn="28"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1a1a1aed3fe00908b8a45d5ab4a33665" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To testing::internal::DownCast_</definition>
        <argsstring>(From *f)</argsstring>
        <name>DownCast_</name>
        <param>
          <type>From *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1367" column="11" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1367" bodyend="1384"/>
        <references refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" compoundref="gtest-port_8h" startline="1295">GTEST_CHECK_</references>
        <references refid="gtest-port_8h_1ad115e2c466f7e8a32f1cf23ef2e5f220" compoundref="gtest-port_8h" startline="899">GTEST_INTENTIONAL_CONST_COND_POP_</references>
        <references refid="gtest-port_8h_1a69b0cadb05bf2a1ef96151243c6b6241" compoundref="gtest-port_8h" startline="897">GTEST_INTENTIONAL_CONST_COND_PUSH_</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a290e3967783ec2de56981c8b1cec37de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>GTEST_API_ AssertionResult testing::internal::EqFailure</definition>
        <argsstring>(const char *lhs_expression, const char *rhs_expression, const std::string &amp;lhs_value, const std::string &amp;rhs_value, bool ignoring_case)</argsstring>
        <name>EqFailure</name>
        <param>
          <type>const char *</type>
          <declname>lhs_expression</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>rhs_expression</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>lhs_value</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>rhs_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoring_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1312" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1312" bodyend="1343" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="219" declcolumn="28"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1_1internal_1_1edit__distance_1aec6a04ff6b3487a6744d116dbc2dc3e7" compoundref="gtest_8cc" startline="1203" endline="1263">testing::internal::edit_distance::CreateUnifiedDiff</references>
        <references refid="cpp/string/basic_string/empty_1">std::string::empty</references>
        <references refid="cpp/container/vector/size_1">std::vector&lt; T &gt;::size</references>
        <references refid="namespacetesting_1_1internal_1_1anonymous__namespace_02gtest_8cc_03_1a87e3d38ad422ce7018c6fcd4d1f3a938" compoundref="gtest_8cc" startline="1272" endline="1293">testing::internal::anonymous_namespace{gtest.cc}::SplitEscapedString</references>
        <referencedby refid="namespacetesting_1_1internal_1a1edf90480571c0659a39d13e3777d9ce" compoundref="gtest_8cc" startline="1437" endline="1450">CmpHelperEQ</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a1def8ec9393360a1b34a20528703e7f7" compoundref="gtest_8h" startline="1375" endline="1383">CmpHelperEQFailure</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a98ce463e5dbe0c6120fa817e1f8f2944" compoundref="gtest_8h" startline="1631" endline="1654">CmpHelperFloatingPointEQ</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a898b1e47a9d978e99318b224f69a54e4" compoundref="gtest_8cc" startline="1503" endline="1516">CmpHelperSTRCASEEQ</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a2863c85877728b2c223cf6ade4a530c1" compoundref="gtest_8cc" startline="1487" endline="1500">CmpHelperSTREQ</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7540386ecf74d7ab7e2fa6089db94682" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>static std::string testing::internal::FlagToEnvVar</definition>
        <argsstring>(const char *flag)</argsstring>
        <name>FlagToEnvVar</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1134" column="20" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1134" bodyend="1144"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <references refid="gtest-port_8h_1a088e84784c589ba9b1fc48602ad8eabf" compoundref="gtest-port_8h" startline="286">GTEST_FLAG_PREFIX_</references>
        <references refid="cpp/string/basic_string/size_1">std::string::length</references>
        <references refid="namespacetesting_1_1internal_1ac1b876a8133895bd553d4780ecaa1e3a" compoundref="gtest-port_8h" startline="2280" endline="2282">ToUpper</references>
        <referencedby refid="namespacetesting_1_1internal_1a1055088bb9b867e1b7b8f096f519d7c5" compoundref="gtest-port_8cc" startline="1191" endline="1199">BoolFromGTestEnv</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a2196f070b2d28bceb45c7ad3b565b9ba" compoundref="gtest-port_8cc" startline="1204" endline="1225">Int32FromGTestEnv</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ab38c435530c97f10fd7a8008a76331f2" compoundref="gtest-port_8cc" startline="1229" endline="1256">StringFromGTestEnv</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a17b52b6b1f81f6dcad5cc4d12e5173a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RawType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::FloatingPointLE</definition>
        <argsstring>(const char *expr1, const char *expr2, RawType val1, RawType val2)</argsstring>
        <name>FloatingPointLE</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>RawType</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1384" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="1384" bodyend="1415"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="cpp/io/manip/setprecision_1">std::setprecision</references>
        <references refid="namespacetesting_1_1internal_1ab56e151d23ee7e14dbf03ac7aa1d182b" compoundref="gtest_8cc" startline="1982" endline="1998">StringStreamToString</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a2135f223bf6b527729aeaa651115183b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::FlushInfoLog</definition>
        <argsstring>()</argsstring>
        <name>FlushInfoLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1276" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1276" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a52f5504ed65d116201ccb8f99a44fd7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>typename Functor</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::ForEach</definition>
        <argsstring>(const Container &amp;c, Functor functor)</argsstring>
        <name>ForEach</name>
        <param>
          <type>const Container &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Functor</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="296" column="6" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="296" bodyend="298"/>
        <references refid="cpp/algorithm/for_each_1">std::for_each</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a96c2a5b23541ef01020c402644563ba1" compoundref="gtest-internal-inl_8h" startline="702" endline="704">testing::internal::UnitTestImpl::ClearNonAdHocTestResult</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a4d0498738f8903130a8d0400932e8b54" compoundref="gtest_8cc" startline="2787" endline="2790">testing::TestCase::ClearResult</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a96ab68dd1f8f64a7087ac34ff64a2e46" compoundref="gtest_8cc" startline="2732" endline="2735">testing::TestCase::~TestCase</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1TestEventRepeater_1a0f7129002fc4a33e29ce76a3b6df8d1b" compoundref="gtest_8cc" startline="3272" endline="3274">testing::internal::TestEventRepeater::~TestEventRepeater</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ae8bfe40adf9772237ea51299af113575" compoundref="gtest_8cc" startline="4357" endline="4365">testing::internal::UnitTestImpl::~UnitTestImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1ee4cde97868c53e442d3182496a9f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_::std::string testing::internal::FormatCompilerIndependentFileLocation</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>FormatCompilerIndependentFileLocation</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="898" column="26" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="898" bodyend="906" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1235" declcolumn="26"/>
        <references refid="namespacetesting_1_1internal_1abae7a5775c901f2fd12b058b00d09840" compoundref="gtest-port_8cc" startline="876">kUnknownFile</references>
        <references refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" compoundref="gtest-message_8h" startline="243" endline="245">StreamableToString</references>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1af642843faed4cd28c77d688f6f2820d7" compoundref="gtest_8cc" startline="3625" endline="3672">testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a5ef227c4a610e7ff638b12dfb25b068e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::FormatEpochTimeInMillisAsIso8601</definition>
        <argsstring>(TimeInMillis ms)</argsstring>
        <name>FormatEpochTimeInMillisAsIso8601</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3574" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="3574" bodyend="3585" declfile="lib/googletest/src/gtest-internal-inl.h" declline="125" declcolumn="24"/>
        <references refid="classtesting_1_1internal_1_1String_1af50b18d588355871e1982c4043523e0f" compoundref="gtest_8cc" startline="1959" endline="1963">testing::internal::String::FormatIntWidth2</references>
        <references refid="namespacetesting_1_1internal_1a60af94307ed4f00a57b5c6d9617c046d" compoundref="gtest_8cc" startline="3556" endline="3570">PortableLocaltime</references>
        <references refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" compoundref="gtest-message_8h" startline="243" endline="245">StreamableToString</references>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a3be1c8766241d0f34cdf59b45a52f73b" compoundref="gtest_8cc" startline="3701" endline="3737">testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a31b7c3abed4a7c395f42c61e993989f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_::std::string testing::internal::FormatFileLocation</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>FormatFileLocation</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="880" column="26" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="880" bodyend="891" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1230" declcolumn="26"/>
        <references refid="namespacetesting_1_1internal_1abae7a5775c901f2fd12b058b00d09840" compoundref="gtest-port_8cc" startline="876">kUnknownFile</references>
        <references refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" compoundref="gtest-message_8h" startline="243" endline="245">StreamableToString</references>
        <referencedby refid="classtesting_1_1UnitTest_1a1d157d2e9a5c1d3405333410c6b13932" compoundref="gtest_8cc" startline="4108" endline="4168">testing::UnitTest::AddTestPartResult</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1GTestLog_1a364691bf972983a59cfa2891062a64af" compoundref="gtest-port_8cc" startline="908" endline="916">testing::internal::GTestLog::GTestLog</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ada13cbf91139f0809a5a31ea2594c1ad" compoundref="gtest_8cc" startline="2850" endline="2857">PrintTestPartResultToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a91ab078f10adc669f09b7f604975c518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::FormatForComparisonFailureMessage</definition>
        <argsstring>(const T1 &amp;value, const T2 &amp;)</argsstring>
        <name>FormatForComparisonFailureMessage</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="349" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="349" bodyend="352"/>
        <references refid="classtesting_1_1internal_1_1FormatForComparison_1a2aeb688fc55b57abd3021d82eccad896" compoundref="gtest-printers_8h" startline="275" endline="277">testing::internal::FormatForComparison&lt; ToPrint, OtherOperand &gt;::Format</references>
        <referencedby refid="namespacetesting_1_1internal_1a1edf90480571c0659a39d13e3777d9ce" compoundref="gtest_8cc" startline="1437" endline="1450">CmpHelperEQ</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a1def8ec9393360a1b34a20528703e7f7" compoundref="gtest_8h" startline="1375" endline="1383">CmpHelperEQFailure</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a894ffccd936d78fd555f490020c27f0a" compoundref="gtest_8h" startline="1486" endline="1493">CmpHelperOpFailure</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a904485f27a54be8a5a92856e2d838797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::FormatTimeInMillisAsSeconds</definition>
        <argsstring>(TimeInMillis ms)</argsstring>
        <name>FormatTimeInMillisAsSeconds</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref></type>
          <declname>ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3550" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="3550" bodyend="3554" declfile="lib/googletest/src/gtest-internal-inl.h" declline="119" declcolumn="24"/>
        <references refid="cpp/io/basic_stringstream/str_1">std::stringstream::str</references>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1af642843faed4cd28c77d688f6f2820d7" compoundref="gtest_8cc" startline="3625" endline="3672">testing::internal::XmlUnitTestResultPrinter::OutputXmlTestInfo</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a7f7accabeac896d4271f36d24ca02dba" compoundref="gtest_8cc" startline="3675" endline="3698">testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a3be1c8766241d0f34cdf59b45a52f73b" compoundref="gtest_8cc" startline="3701" endline="3737">testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0aefb9deb60e90f19c236559837303d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::GetAnsiColorCode</definition>
        <argsstring>(GTestColor color)</argsstring>
        <name>GetAnsiColorCode</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4e" kindref="member">GTestColor</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2904" column="12" bodyfile="lib/googletest/src/gtest.cc" bodystart="2904" bodyend="2911"/>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea3b1e81f5b14a17b35a8672d57d166507" compoundref="gtest_8cc" startline="2883">COLOR_GREEN</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea9ebb3ddab9391781f6ee5021e1e443c3" compoundref="gtest_8cc" startline="2882">COLOR_RED</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea2cca441161aca75a208ff08d07f5b1a5" compoundref="gtest_8cc" startline="2884">COLOR_YELLOW</references>
        <referencedby refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4d364e5e40f433fff1604355617ea1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const ::<ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" kindref="member">testing::internal::string</ref> &gt; &amp;</type>
        <definition>GTEST_API_ const ::std::vector&lt; testing::internal::string &gt; &amp; testing::internal::GetArgvs</definition>
        <argsstring>()</argsstring>
        <name>GetArgvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="389" column="21" bodyfile="lib/googletest/src/gtest.cc" bodystart="389" bodyend="395" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1431" declcolumn="32"/>
        <references refid="namespacetesting_1_1internal_1ab7fe90df4f87f1bd8a244b0be2ccad79" compoundref="gtest_8cc" startline="387">g_argvs</references>
        <referencedby refid="namespacetesting_1_1internal_1a7a2bbf069f75bc99873976ad6fc356ad" compoundref="gtest_8cc" startline="399" endline="409">GetCurrentExecutableName</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a91e707e0d371fae0224ffd37f0d042af" compoundref="gtest_8cc" startline="330" endline="330">GTestIsInitialized</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aed8d3ad4341f8f2de53440e39c995632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::GetBoolAssertionFailureMessage</definition>
        <argsstring>(const AssertionResult &amp;assertion_result, const char *expression_text, const char *actual_predicate_value, const char *expected_predicate_value)</argsstring>
        <name>GetBoolAssertionFailureMessage</name>
        <param>
          <type>const <ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref> &amp;</type>
          <declname>assertion_result</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expression_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>actual_predicate_value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expected_predicate_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1346" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="1346" bodyend="1359" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="226" declcolumn="24"/>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <references refid="classtesting_1_1AssertionResult_1a33c14dafd28e3393c841e03f4b70a017" compoundref="gtest_8h" startline="297" endline="299">testing::AssertionResult::message</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a374156401da17704099d0c33fa53adfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::GetCapturedStderr</definition>
        <argsstring>()</argsstring>
        <name>GetCapturedStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1417" column="24" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1417" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aed657219a9856a8d249a3230de0c54ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::GetCapturedStdout</definition>
        <argsstring>()</argsstring>
        <name>GetCapturedStdout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1415" column="24" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1415" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7a2bbf069f75bc99873976ad6fc356ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="classtesting_1_1internal_1_1FilePath" kindref="compound">FilePath</ref></type>
        <definition>FilePath testing::internal::GetCurrentExecutableName</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentExecutableName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="399" column="10" bodyfile="lib/googletest/src/gtest.cc" bodystart="399" bodyend="409" declfile="lib/googletest/src/gtest-internal-inl.h" declline="415" declcolumn="21"/>
        <references refid="namespacetesting_1_1internal_1a4d364e5e40f433fff1604355617ea1a6" compoundref="gtest_8cc" startline="389" endline="395">GetArgvs</references>
        <references refid="classtesting_1_1internal_1_1FilePath_1a6b61ede2c81ecd870b8220c04aec3060" compoundref="gtest-filepath_8cc" startline="155" endline="158">testing::internal::FilePath::RemoveDirectoryName</references>
        <references refid="classtesting_1_1internal_1_1FilePath_1a15a42de7518e89254e0640dd9317d5f7" compoundref="gtest-filepath_8h" startline="73" endline="75">testing::internal::FilePath::Set</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestOptions_1a993fb30ad66104158c8c0ac508daca3f" compoundref="gtest_8cc" startline="426" endline="455">testing::internal::UnitTestOptions::GetAbsolutePathToOutputFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a9a8b7b80602acebfbe4149e57ba7d3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::GetCurrentOsStackTraceExceptTop</definition>
        <argsstring>(UnitTest *, int skip_count)</argsstring>
        <name>GetCurrentOsStackTraceExceptTop</name>
        <param>
          <type><ref refid="classtesting_1_1UnitTest" kindref="compound">UnitTest</ref> *</type>
          <defname>unit_test</defname>
        </param>
        <param>
          <type>int</type>
          <declname>skip_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4973" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="4973" bodyend="4978" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="726" declcolumn="24"/>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1a61c0a51ac4e57d9f884f646ca6dd2210" compoundref="gtest_8cc" startline="796" endline="803">testing::internal::UnitTestImpl::CurrentOsStackTraceExceptTop</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">GetUnitTestImpl</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a71fdd20a0686bea3dc0cdcd95e0bca1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>E</type>
        <definition>E testing::internal::GetElementOr</definition>
        <argsstring>(const std::vector&lt; E &gt; &amp;v, int i, E default_value)</argsstring>
        <name>GetElementOr</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; E &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>E</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="303" column="10" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="303" bodyend="305"/>
        <references refid="cpp/container/vector/size_1">std::vector&lt; T &gt;::size</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a2ca71a08060037357fc7e1a406b89add" compoundref="gtest-internal-inl_8h" startline="584" endline="587">testing::internal::UnitTestImpl::GetMutableTestCase</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1aee03569f8ecb89cfe479e71f11edc3ea" compoundref="gtest_8cc" startline="2746" endline="2749">testing::TestCase::GetMutableTestInfo</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a6438e18ea4904d239a3db7b036a52229" compoundref="gtest-internal-inl_8h" startline="577" endline="580">testing::internal::UnitTestImpl::GetTestCase</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a441e0eca232643671dc365c2924c255c" compoundref="gtest_8cc" startline="2739" endline="2742">testing::TestCase::GetTestInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a40bcfd87e26aae36e0cc51e5db64fd89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>GTEST_API_ size_t testing::internal::GetFileSize</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>GetFileSize</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1076" column="8" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1076" bodyend="1079" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1425" declcolumn="19"/>
        <referencedby refid="namespacetesting_1_1internal_1ab81b0af2a0131ea54dc11de00d5e6e51" compoundref="gtest-port_8cc" startline="1081" endline="1101">ReadEntireFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6e07a655cb987d131cd8fbeba9a7f1eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::GetNextRandomSeed</definition>
        <argsstring>(int seed)</argsstring>
        <name>GetNextRandomSeed</name>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="152" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="152" bodyend="158"/>
        <references refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" compoundref="gtest-port_8h" startline="1295">GTEST_CHECK_</references>
        <references refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" compoundref="gtest-internal-inl_8h" startline="106">kMaxRandomSeed</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ae74fedbdaebaac8d1202192266243b9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int testing::internal::GetRandomSeedFromFlag</definition>
        <argsstring>(Int32 random_seed_flag)</argsstring>
        <name>GetRandomSeedFromFlag</name>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref></type>
          <declname>random_seed_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="136" column="12" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="136" bodyend="147"/>
        <references refid="namespacetesting_1_1internal_1ae66b46943a429e6efb1db456d4cae90c" compoundref="gtest_8cc" startline="806" endline="847">GetTimeInMillis</references>
        <references refid="namespacetesting_1_1internal_1a41bd421ace53d23dbe85d9618c3afaee" compoundref="gtest-internal-inl_8h" startline="106">kMaxRandomSeed</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1e85cf16bb95b60f879d48ba1fbfc1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" kindref="member">TypeId</ref></type>
        <definition>GTEST_API_ TypeId testing::internal::GetTestTypeId</definition>
        <argsstring>()</argsstring>
        <name>GetTestTypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="620" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="620" bodyend="622" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="460" declcolumn="19"/>
        <referencedby refid="classtesting_1_1Test_1a5daca5a35e33e8fbdf36b7b666668b34" compoundref="gtest_8cc" startline="2269" endline="2328">testing::Test::HasSameFixtureClass</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8cbd8bf820517923d7f3c4477b3af5fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>GTEST_API_ size_t testing::internal::GetThreadCount</definition>
        <argsstring>()</argsstring>
        <name>GetThreadCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="169" column="8" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="169" bodyend="173" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="2178" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ae66b46943a429e6efb1db456d4cae90c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="namespacetesting_1_1internal_1a66a845df404b38fe85c5e14a069f255a" kindref="member">TimeInMillis</ref></type>
        <definition>TimeInMillis testing::internal::GetTimeInMillis</definition>
        <argsstring>()</argsstring>
        <name>GetTimeInMillis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="806" column="14" bodyfile="lib/googletest/src/gtest.cc" bodystart="806" bodyend="847" declfile="lib/googletest/src/gtest-internal-inl.h" declline="113" declcolumn="25"/>
        <references refid="gtest-port_8h_1ab4c44546d6d9aced68993b87b608fc06" compoundref="gtest-port_8h" startline="318">GTEST_DISABLE_MSC_WARNINGS_POP_</references>
        <references refid="gtest-port_8h_1a86994cc68e844d8b82089c70408dfc61" compoundref="gtest-port_8h" startline="317">GTEST_DISABLE_MSC_WARNINGS_PUSH_</references>
        <references refid="gtest_8cc_1a7c139c1711de5a69cbc934e8a082e4f9" compoundref="gtest_8cc" startline="116">GTEST_HAS_GETTIMEOFDAY_</references>
        <referencedby refid="namespacetesting_1_1internal_1ae74fedbdaebaac8d1202192266243b9e" compoundref="gtest-internal-inl_8h" startline="136" endline="147">GetRandomSeedFromFlag</referencedby>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a6f5b3724cd5a8e446cd48a6150d08cde" compoundref="gtest_8cc" startline="2759" endline="2784">testing::TestCase::Run</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6b108e56fdc68ea937ffb3759fb55ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" kindref="member">TypeId</ref></type>
        <definition>TypeId testing::internal::GetTypeId</definition>
        <argsstring>()</argsstring>
        <name>GetTypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="447" column="8" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="447" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a635606b4731f843c86ec8ca51cab83a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::GetTypeName</definition>
        <argsstring>()</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-type-util.h" line="64" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-type-util.h" bodystart="64" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesting_1_1internal_1_1UnitTestImpl" kindref="compound">UnitTestImpl</ref> *</type>
        <definition>class UnitTestImpl * testing::internal::GetUnitTestImpl</definition>
        <argsstring>()</argsstring>
        <name>GetUnitTestImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="927" column="21" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="927" bodyend="929" declfile="lib/googletest/include/gtest/gtest.h" declline="163" declcolumn="20"/>
        <references refid="classtesting_1_1UnitTest_1a24192400b70b3b946746954e9574fb8e" compoundref="gtest_8cc" startline="3972" endline="3991">testing::UnitTest::GetInstance</references>
        <references refid="classtesting_1_1UnitTest_1a4df5d11a58affb337d7fa62eaa07690e" compoundref="gtest_8h" startline="1287" endline="1287">testing::UnitTest::impl</references>
        <referencedby refid="namespacetesting_1_1internal_1a9a8b7b80602acebfbe4149e57ba7d3eb" compoundref="gtest_8cc" startline="4973" endline="4978">GetCurrentOsStackTraceExceptTop</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1addb2ed165b92b74e25fe9ebe9e46b9f9" compoundref="gtest_8cc" startline="2410" endline="2460">HandleExceptionsInMethodIfSupported</referencedby>
        <referencedby refid="classtesting_1_1Test_1aa8d0725cfb519f82eaf4fd2d2f46d97d" compoundref="gtest_8cc" startline="2487" endline="2489">testing::Test::HasFatalFailure</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1HasNewFatalFailureHelper_1a59190a7188db558c00b4c6bf9251859a" compoundref="gtest-test-part_8cc" startline="89" endline="94">testing::internal::HasNewFatalFailureHelper::HasNewFatalFailureHelper</referencedby>
        <referencedby refid="classtesting_1_1Test_1a3b933cea62eff67a05e23aa07f38bf29" compoundref="gtest_8cc" startline="2492" endline="2495">testing::Test::HasNonfatalFailure</referencedby>
        <referencedby refid="classtesting_1_1Test_1a5daca5a35e33e8fbdf36b7b666668b34" compoundref="gtest_8cc" startline="2269" endline="2328">testing::Test::HasSameFixtureClass</referencedby>
        <referencedby refid="classtesting_1_1ScopedFakeTestPartResultReporter_1a28d280a3f5d172d63b94f70b8e7660d7" compoundref="gtest_8cc" startline="580" endline="589">testing::ScopedFakeTestPartResultReporter::Init</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" compoundref="gtest_8cc" startline="5344" endline="5357">InitGoogleTestImpl</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a082a431211a960763865897fecb7cb27" compoundref="gtest_8cc" startline="2543" endline="2558">MakeAndRegisterTestInfo</referencedby>
        <referencedby refid="classtesting_1_1Test_1a939ae280a6f2f1c3d43708ec616684ed" compoundref="gtest_8cc" startline="2465" endline="2484">testing::Test::Run</referencedby>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a6f5b3724cd5a8e446cd48a6150d08cde" compoundref="gtest_8cc" startline="2759" endline="2784">testing::TestCase::Run</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1HasNewFatalFailureHelper_1a913b1bc7c372868c9b2dbb009044ee97" compoundref="gtest-test-part_8cc" startline="96" endline="99">testing::internal::HasNewFatalFailureHelper::~HasNewFatalFailureHelper</referencedby>
        <referencedby refid="classtesting_1_1ScopedFakeTestPartResultReporter_1a4817d59ca70228ebd5d5c3c4e8dd729d" compoundref="gtest_8cc" startline="593" endline="600">testing::ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad7c5625384cf5f6b714188f274537ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref></type>
        <definition>GTEST_API_ testing::internal::GTEST_DECLARE_STATIC_MUTEX_</definition>
        <argsstring>(g_linked_ptr_mutex)</argsstring>
        <name>GTEST_DECLARE_STATIC_MUTEX_</name>
        <param>
          <type>g_linked_ptr_mutex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" line="80" column="12" declfile="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" declline="80" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac20f635c3285878fc1195ce687f23950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_DECLARE_string_</definition>
        <argsstring>(internal_run_death_test)</argsstring>
        <name>GTEST_DECLARE_string_</name>
        <param>
          <type>internal_run_death_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" line="47" column="1" declfile="lib/googletest/include/gtest/internal/gtest-death-test-internal.h" declline="47" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aff419d76acc3727be48d195f927189c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref></type>
        <definition>GTEST_API_ testing::internal::GTEST_DEFINE_STATIC_MUTEX_</definition>
        <argsstring>(g_linked_ptr_mutex)</argsstring>
        <name>GTEST_DEFINE_STATIC_MUTEX_</name>
        <param>
          <type>g_linked_ptr_mutex</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="384" column="12" declfile="lib/googletest/src/gtest.cc" declline="384" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a20bfd9d47d8dd167ffc1c37a4c9ff73e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_DEFINE_string_</definition>
        <argsstring>(internal_run_death_test, &quot;&quot;, &quot;Indicates the file, line number, temporal index of &quot; &quot;the single death test to run, and a file descriptor to &quot; &quot;which a success code may be sent, all separated by &quot; &quot;the &apos;|&apos; characters.  This flag is specified if and only if the current &quot; &quot;process is a sub-process launched for running a thread-safe &quot; &quot;death test.  FOR INTERNAL USE ONLY.&quot;)</argsstring>
        <name>GTEST_DEFINE_string_</name>
        <param>
          <type>internal_run_death_test</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;Indicates the</type>
          <declname>file</declname>
        </param>
        <param>
          <type>line</type>
          <declname>number</declname>
        </param>
        <param>
          <type>temporal index of &quot; &quot;the single death test to</type>
          <declname>run</declname>
        </param>
        <param>
          <type>and a file descriptor to &quot; &quot;which a success code may be</type>
          <declname>sent</declname>
        </param>
        <param>
          <type>all separated by &quot; &quot;the &apos;|&apos; characters. This flag is specified if and only if the current &quot; &quot;process is a sub-process launched for running a thread-safe &quot; &quot;death test. FOR INTERNAL USE ONLY.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-death-test.cc" line="108" column="1" declfile="lib/googletest/src/gtest-death-test.cc" declline="108" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af969886067930ce70f6405cd5aa8b06b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_CMP_HELPER_</definition>
        <argsstring>(GE, &gt;=)</argsstring>
        <name>GTEST_IMPL_CMP_HELPER_</name>
        <param>
          <type>GE</type>
        </param>
        <param>
          <type>&gt;=</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1528" column="1" declfile="lib/googletest/include/gtest/gtest.h" declline="1528" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7fdb4fc164db83c51dfad17640bfeae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_CMP_HELPER_</definition>
        <argsstring>(GT, &gt;)</argsstring>
        <name>GTEST_IMPL_CMP_HELPER_</name>
        <param>
          <type>GT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1530" column="1" declfile="lib/googletest/include/gtest/gtest.h" declline="1530" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ade60646b18728043fff84d7b4125de2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_CMP_HELPER_</definition>
        <argsstring>(LE,&lt;=)</argsstring>
        <name>GTEST_IMPL_CMP_HELPER_</name>
        <param>
          <type>LE</type>
        </param>
        <param>
          <type>&lt;=</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1524" column="1" declfile="lib/googletest/include/gtest/gtest.h" declline="1524" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aabcbff15eac496f8487699d19f42c274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_CMP_HELPER_</definition>
        <argsstring>(LT,&lt;)</argsstring>
        <name>GTEST_IMPL_CMP_HELPER_</name>
        <param>
          <type>LT</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1526" column="1" declfile="lib/googletest/include/gtest/gtest.h" declline="1526" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa14e3caa94126d7fb8e06bfb3d24ae4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_CMP_HELPER_</definition>
        <argsstring>(NE, !=)</argsstring>
        <name>GTEST_IMPL_CMP_HELPER_</name>
        <param>
          <type>NE</type>
        </param>
        <param>
          <type>!</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest.h" line="1522" column="1" declfile="lib/googletest/include/gtest/gtest.h" declline="1522" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a3682f962ae0ec1c0eca6444ca0a09e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(char)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>char</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="301" column="1" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="301" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a85e08f00d443221e529a0a85a90fbaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</definition>
        <argsstring>(wchar_t)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_</name>
        <param>
          <type>wchar_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="303" column="1" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="303" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aeac30230dcc362221bdd07d61eaa4ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</definition>
        <argsstring>(char, ::std::string)</argsstring>
        <name>GTEST_IMPL_FORMAT_C_STRING_AS_STRING_</name>
        <param>
          <type>char</type>
        </param>
        <param>
          <type>::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="320" column="1" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="320" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a91e707e0d371fae0224ffd37f0d042af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::GTestIsInitialized</definition>
        <argsstring>()</argsstring>
        <name>GTestIsInitialized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="330" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="330" bodyend="330"/>
        <references refid="namespacetesting_1_1internal_1a4d364e5e40f433fff1604355617ea1a6" compoundref="gtest_8cc" startline="389" endline="395">GetArgvs</references>
        <referencedby refid="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" compoundref="gtest_8cc" startline="5344" endline="5357">InitGoogleTestImpl</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1addb2ed165b92b74e25fe9ebe9e46b9f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename Result</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>Result testing::internal::HandleExceptionsInMethodIfSupported</definition>
        <argsstring>(T *object, Result(T::*method)(), const char *location)</argsstring>
        <name>HandleExceptionsInMethodIfSupported</name>
        <param>
          <type>T *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Result(T::*)()</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2410" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2410" bodyend="2460"/>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">GetUnitTestImpl</references>
        <references refid="namespacetesting_1_1internal_1ac5293b438139ef7ed05cb7fcaaf63545" compoundref="gtest_8cc" startline="2383" endline="2404">HandleSehExceptionsInMethodIfSupported</references>
        <references refid="classtesting_1_1TestPartResult_1a65ae656b33fdfdfffaf34858778a52d5ae1bf0b610b697a43fee97628cdab4ea1" compoundref="gtest-test-part_8h" startline="54">testing::TestPartResult::kFatalFailure</references>
        <references refid="namespacetesting_1_1internal_1a85f6ff0e40f9a5f10af66a73cf1364fa" compoundref="gtest_8cc" startline="2250" endline="2260">ReportFailureInUnknownLocation</references>
        <references refid="cpp/error/exception/what_1">std::exception::what</references>
        <referencedby refid="classtesting_1_1Test_1a939ae280a6f2f1c3d43708ec616684ed" compoundref="gtest_8cc" startline="2465" endline="2484">testing::Test::Run</referencedby>
        <referencedby refid="classtesting_1_1TestInfo_1ade784915e9be3a01e3a6ef509b77d6c9" compoundref="gtest_8cc" startline="2630" endline="2672">testing::TestInfo::Run</referencedby>
        <referencedby refid="classtesting_1_1TestCase_1a6f5b3724cd5a8e446cd48a6150d08cde" compoundref="gtest_8cc" startline="2759" endline="2784">testing::TestCase::Run</referencedby>
        <referencedby refid="classtesting_1_1UnitTest_1a2febc800536b44500565f4c423f359d3" compoundref="gtest_8cc" startline="4185" endline="4261">testing::UnitTest::Run</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac5293b438139ef7ed05cb7fcaaf63545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>typename Result</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>Result testing::internal::HandleSehExceptionsInMethodIfSupported</definition>
        <argsstring>(T *object, Result(T::*method)(), const char *location)</argsstring>
        <name>HandleSehExceptionsInMethodIfSupported</name>
        <param>
          <type>T *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>Result(T::*)()</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2383" column="8" bodyfile="lib/googletest/src/gtest.cc" bodystart="2383" bodyend="2404"/>
        <references refid="classtesting_1_1TestPartResult_1a65ae656b33fdfdfffaf34858778a52d5ae1bf0b610b697a43fee97628cdab4ea1" compoundref="gtest-test-part_8h" startline="54">testing::TestPartResult::kFatalFailure</references>
        <references refid="namespacetesting_1_1internal_1a85f6ff0e40f9a5f10af66a73cf1364fa" compoundref="gtest_8cc" startline="2250" endline="2260">ReportFailureInUnknownLocation</references>
        <referencedby refid="namespacetesting_1_1internal_1addb2ed165b92b74e25fe9ebe9e46b9f9" compoundref="gtest_8cc" startline="2410" endline="2460">HandleExceptionsInMethodIfSupported</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6fff795269f50673e358438721710d6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::HasGoogleTestFlagPrefix</definition>
        <argsstring>(const char *str)</argsstring>
        <name>HasGoogleTestFlagPrefix</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5105" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="5105" bodyend="5112"/>
        <references refid="gtest-port_8h_1a088e84784c589ba9b1fc48602ad8eabf" compoundref="gtest-port_8h" startline="286">GTEST_FLAG_PREFIX_</references>
        <references refid="gtest-port_8h_1a4251ff898f9f94ec6b8b9402c3436759" compoundref="gtest-port_8h" startline="287">GTEST_FLAG_PREFIX_DASH_</references>
        <references refid="namespacetesting_1_1internal_1aac72b20299ad4a99554ce161e1769560" compoundref="gtest_8cc" startline="5001" endline="5008">SkipPrefix</references>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a14ff02e6d151f45e998657674e9af88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1AssertionResult" kindref="compound">AssertionResult</ref></type>
        <definition>AssertionResult testing::internal::HasOneFailure</definition>
        <argsstring>(const char *, const char *, const char *, const TestPartResultArray &amp;results, TestPartResult::Type type, const string &amp;substr)</argsstring>
        <name>HasOneFailure</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1TestPartResultArray" kindref="compound">TestPartResultArray</ref> &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1TestPartResult_1a65ae656b33fdfdfffaf34858778a52d5" kindref="member">TestPartResult::Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="namespacetesting_1_1internal_1a8e8ff5b11e64078831112677156cb111" kindref="member">string</ref> &amp;</type>
          <declname>substr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="631" column="17" bodyfile="lib/googletest/src/gtest.cc" bodystart="631" bodyend="665"/>
        <references refid="namespacetesting_1a8d91083190a5914bfe8c5666e2dbca9b" compoundref="gtest_8cc" startline="1015" endline="1017">testing::AssertionFailure</references>
        <references refid="namespacetesting_1a74a3d26c1286bd4d7c189c5dff2483ab" compoundref="gtest_8cc" startline="1010" endline="1012">testing::AssertionSuccess</references>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="classtesting_1_1TestPartResultArray_1aa44d02a01c87f47393b07951bab6e025" compoundref="gtest-test-part_8cc" startline="73" endline="80">testing::TestPartResultArray::GetTestPartResult</references>
        <references refid="classtesting_1_1TestPartResult_1a65ae656b33fdfdfffaf34858778a52d5ae1bf0b610b697a43fee97628cdab4ea1" compoundref="gtest-test-part_8h" startline="54">testing::TestPartResult::kFatalFailure</references>
        <references refid="classtesting_1_1TestPartResult_1a5019dc9d753aba5949777270de255d49" compoundref="gtest-test-part_8h" startline="88" endline="88">testing::TestPartResult::message</references>
        <references refid="classtesting_1_1TestPartResultArray_1a31555f11ba42b81ddad0a26a87710d0a" compoundref="gtest-test-part_8cc" startline="83" endline="85">testing::TestPartResultArray::size</references>
        <references refid="classtesting_1_1TestPartResult_1aab92b225e8a472e78bd3889ca6df0d2a" compoundref="gtest-test-part_8h" startline="72" endline="72">testing::TestPartResult::type</references>
        <referencedby refid="classtesting_1_1internal_1_1SingleFailureChecker_1a4b0a907c9c1b350c79d70af138e9f0bf" compoundref="gtest_8cc" startline="682" endline="684">testing::internal::SingleFailureChecker::~SingleFailureChecker</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a982df3f369643b175f79cda4048bc3b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To testing::internal::ImplicitCast_</definition>
        <argsstring>(To x)</argsstring>
        <name>ImplicitCast_</name>
        <param>
          <type>To</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1343" column="11" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1343" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::InitGoogleTestImpl</definition>
        <argsstring>(int *argc, CharType **argv)</argsstring>
        <name>InitGoogleTestImpl</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>CharType **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5344" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5344" bodyend="5357"/>
        <references refid="namespacetesting_1_1internal_1ab7fe90df4f87f1bd8a244b0be2ccad79" compoundref="gtest_8cc" startline="387">g_argvs</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">GetUnitTestImpl</references>
        <references refid="namespacetesting_1_1internal_1a91e707e0d371fae0224ffd37f0d042af" compoundref="gtest_8cc" startline="330" endline="330">GTestIsInitialized</references>
        <references refid="namespacetesting_1_1internal_1a472880afbcc592a41e3d623e2dec8412" compoundref="gtest_8cc" startline="5332" endline="5334">ParseGoogleTestFlagsOnly</references>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1a772894193104b1b2516f16e6ff813168" compoundref="gtest_8cc" startline="4436" endline="4465">testing::internal::UnitTestImpl::PostFlagParsingInit</references>
        <references refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" compoundref="gtest-message_8h" startline="243" endline="245">StreamableToString</references>
        <referencedby refid="namespacetesting_1aee3f6f99df893f576f705f66c0559482" compoundref="gtest_8cc" startline="5370" endline="5376">testing::InitGoogleTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aaa576613655c2f380278c255c3ec5fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref></type>
        <definition>Int32 testing::internal::Int32FromEnvOrDie</definition>
        <argsstring>(const char *env_var, Int32 default_val)</argsstring>
        <name>Int32FromEnvOrDie</name>
        <param>
          <type>const char *</type>
          <declname>env_var</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref></type>
          <declname>default_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4760" column="7" bodyfile="lib/googletest/src/gtest.cc" bodystart="4760" bodyend="4772" declfile="lib/googletest/src/gtest-internal-inl.h" declline="269" declcolumn="18"/>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
        <references refid="namespacetesting_1_1internal_1ac06fc81336a3d80755f4020d34321766" compoundref="gtest-port_8cc" startline="1149" endline="1185">ParseInt32</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1abd47e447f0c2557ed528db0350671bed" compoundref="gtest_8cc" startline="4789" endline="4840">testing::internal::UnitTestImpl::FilterTests</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1abdba10a8c97e272ab4cee97cb652c957" compoundref="gtest_8cc" startline="3056" endline="3089">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a0fe41657b1d1ab7ec4e37ec07403ee6c" compoundref="gtest_8cc" startline="4715" endline="4755">ShouldShard</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a2196f070b2d28bceb45c7ad3b565b9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref></type>
        <definition>GTEST_API_ Int32 testing::internal::Int32FromGTestEnv</definition>
        <argsstring>(const char *flag, Int32 default_value)</argsstring>
        <name>Int32FromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref></type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1204" column="7" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1204" bodyend="1225" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="2548" declcolumn="18"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1a7540386ecf74d7ab7e2fa6089db94682" compoundref="gtest-port_8cc" startline="1134" endline="1144">FlagToEnvVar</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
        <references refid="namespacetesting_1_1internal_1ac06fc81336a3d80755f4020d34321766" compoundref="gtest-port_8cc" startline="1149" endline="1185">ParseInt32</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a83802e7f23324cd512232203662e1a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsAlNum</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsAlNum</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2254" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2254" bodyend="2256"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aeb957087fd6bbf9db98ab7cd41b0c129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsAlpha</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsAlpha</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2251" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2251" bodyend="2253"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1acb6ea1086293c1d6636e3c67941351fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetesting_1_1internal_1ad8f0c2883245f1df2a53618a49f0deb3" kindref="member">IsContainer</ref></type>
        <definition>IsContainer testing::internal::IsContainerTest</definition>
        <argsstring>(int, typename C::iterator *=NULL, typename C::const_iterator *=NULL)</argsstring>
        <name>IsContainerTest</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>typename C::iterator *</type>
          <defval>NULL</defval>
        </param>
        <param>
          <type>typename C::const_iterator *</type>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="932" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="932" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af545a2ae928b8a9e7581978234464275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetesting_1_1internal_1abf080521ce135deb510e0a7830fd3d33" kindref="member">IsNotContainer</ref></type>
        <definition>IsNotContainer testing::internal::IsContainerTest</definition>
        <argsstring>(long)</argsstring>
        <name>IsContainerTest</name>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="940" column="16" bodyfile="lib/googletest/include/gtest/internal/gtest-internal.h" bodystart="940" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4bd96b7fa6486802d33ddc217af55a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsDigit</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsDigit</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2257" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2257" bodyend="2259"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac26ce3883bc8919c27074975e958f3b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsLower</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsLower</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2260" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2260" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab53ecfa1632a871ce7c692d722a75a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char(&amp;</type>
        <definition>char(&amp; testing::internal::IsNullLiteralHelper</definition>
        <argsstring>(...))[2]</argsstring>
        <name>IsNullLiteralHelper</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="122" column="1" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="122" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afb0731ba39ffef1fa1730ac0699c9025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char testing::internal::IsNullLiteralHelper</definition>
        <argsstring>(Secret *p)</argsstring>
        <name>IsNullLiteralHelper</name>
        <param>
          <type>Secret *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-internal.h" line="121" column="6" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="121" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6b8d22cee9edbbfe56077420a6fa1cb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::IsPathSeparator</definition>
        <argsstring>(char c)</argsstring>
        <name>IsPathSeparator</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-filepath.cc" line="90" column="13" bodyfile="lib/googletest/src/gtest-filepath.cc" bodystart="90" bodyend="96"/>
        <references refid="namespacetesting_1_1internal_1afcd71adaa9d1e6df7b282a17fc48125c" compoundref="gtest-filepath_8cc" startline="85">kPathSeparator</references>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1ae17e5581e7996021e598851fe947df9c" compoundref="gtest-filepath_8cc" startline="265" endline="276">testing::internal::FilePath::IsAbsolutePath</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1a73fc042ad65e85bbecb956eb4603a6f2" compoundref="gtest-filepath_8cc" startline="300" endline="303">testing::internal::FilePath::IsDirectory</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1a0661adf59aec40c40c8e39b888d68142" compoundref="gtest-filepath_8cc" startline="253" endline="262">testing::internal::FilePath::IsRootDirectory</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1aa2f6d7d7823f71f25de50d309c966ef7" compoundref="gtest-filepath_8cc" startline="356" endline="384">testing::internal::FilePath::Normalize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a744a6dd74c12d1e2c16b3c03e14ed4d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsPrintableAscii</definition>
        <argsstring>(wchar_t c)</argsstring>
        <name>IsPrintableAscii</name>
        <param>
          <type>wchar_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="137" column="13" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="137" bodyend="139"/>
        <referencedby refid="namespacetesting_1_1internal_1ab73d250fde6dfbf16111afb7a071dc3f" compoundref="gtest-printers_8cc" startline="146" endline="188">PrintAsCharLiteralTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af429e04f70f9c10f6aa76a5d1ccd389f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsSpace</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsSpace</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2263" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2263" bodyend="2265"/>
        <referencedby refid="namespacetesting_1_1internal_1aa6afda12e567c353e2e9b9c2e8cae14f" compoundref="gtest-port_8h" startline="2284" endline="2289">StripTrailingSpaces</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab2709373c78eb8b1c22a6ba30cceba52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>GTEST_API_ bool testing::internal::IsTrue</definition>
        <argsstring>(bool condition)</argsstring>
        <name>IsTrue</name>
        <param>
          <type>bool</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4986" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="4986" bodyend="4986" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1108" declcolumn="17"/>
        <referencedby refid="namespacetesting_1_1internal_1a4d46f09c3bfe68700b7f728d2cc3782f" compoundref="gtest_8cc" startline="4988" endline="4996">AlwaysTrue</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1affa1f94e3ba8db8b964553c2871bf339" compoundref="gtest-printers_8h" startline="404" endline="431">DefaultPrintTo</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1scoped__ptr_1acac03266a43359801aff0de5c990bec0" compoundref="gtest-port_8h" startline="1132" endline="1139">testing::internal::scoped_ptr&lt; T &gt;::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a84f3baa379fec6bf5947cb5165aa8cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsUpper</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsUpper</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2266" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2266" bodyend="2268"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a681895f8cc32286211be9889da107394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsUtf16SurrogatePair</definition>
        <argsstring>(wchar_t first, wchar_t second)</argsstring>
        <name>IsUtf16SurrogatePair</name>
        <param>
          <type>wchar_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1794" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="1794" bodyend="1797"/>
        <referencedby refid="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" compoundref="gtest_8cc" startline="1823" endline="1844">WideStringToUtf8</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa234ef141278263fb143b616c74c86e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(char ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2269" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2269" bodyend="2271"/>
        <referencedby refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6ab68a30f8291c09b2289c132bbe3b16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::IsXDigit</definition>
        <argsstring>(wchar_t ch)</argsstring>
        <name>IsXDigit</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2272" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2272" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a06b1b20029fbd1dbeb59752f914fab84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::LogToStderr</definition>
        <argsstring>()</argsstring>
        <name>LogToStderr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1275" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1275" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0d79fad1f772844eff35dfe955f24fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtesting_1_1internal_1_1linked__ptr" kindref="compound">linked_ptr</ref>&lt; T &gt;</type>
        <definition>linked_ptr&lt;T&gt; testing::internal::make_linked_ptr</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>make_linked_ptr</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" line="236" column="12" bodyfile="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a082a431211a960763865897fecb7cb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref> *</type>
        <definition>GTEST_API_ TestInfo * testing::internal::MakeAndRegisterTestInfo</definition>
        <argsstring>(const char *test_case_name, const char *name, const char *type_param, const char *value_param, CodeLocation code_location, TypeId fixture_class_id, SetUpTestCaseFunc set_up_tc, TearDownTestCaseFunc tear_down_tc, TestFactoryBase *factory)</argsstring>
        <name>MakeAndRegisterTestInfo</name>
        <param>
          <type>const char *</type>
          <declname>test_case_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type_param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value_param</declname>
        </param>
        <param>
          <type><ref refid="structtesting_1_1internal_1_1CodeLocation" kindref="compound">CodeLocation</ref></type>
          <declname>code_location</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1ab1114197d3c657d8b7f8e0c5caa12d00" kindref="member">TypeId</ref></type>
          <declname>fixture_class_id</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a30037044c0b57cdd647c7e2e97cb2cff" kindref="member">SetUpTestCaseFunc</ref></type>
          <declname>set_up_tc</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a085e31321d0d029c04d2a79234f60c1a" kindref="member">TearDownTestCaseFunc</ref></type>
          <declname>tear_down_tc</declname>
        </param>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1TestFactoryBase" kindref="compound">TestFactoryBase</ref> *</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2543" column="10" bodyfile="lib/googletest/src/gtest.cc" bodystart="2543" bodyend="2558" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="529" declcolumn="21"/>
        <references refid="classtesting_1_1internal_1_1UnitTestImpl_1a1cc87dfc91377ebec4a3ff4192dfcba9" compoundref="gtest-internal-inl_8h" startline="645" endline="665">testing::internal::UnitTestImpl::AddTestInfo</references>
        <references refid="namespacetesting_1_1internal_1a18ef697b64e28a78625c7a53cf28344c" compoundref="gtest-internal-inl_8h" startline="927" endline="929">GetUnitTestImpl</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0f6d06bf8c3093b9c22bb08723db201e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; testing::internal::move</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>move</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="1317" column="9" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="1317" bodyend="1319"/>
        <referencedby refid="namespacetesting_1_1internal_1_1edit__distance_1a455a044d22764a657122b69b0238840a" compoundref="gtest_8cc" startline="1028" endline="1083">testing::internal::edit_distance::CalculateOptimalEdits</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6910869259f8f31825b471e9190fa09a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::operator!=</definition>
        <argsstring>(T *ptr, const linked_ptr&lt; T &gt; &amp;x)</argsstring>
        <name>operator!=</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1linked__ptr" kindref="compound">linked_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" line="228" column="6" bodyfile="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" bodystart="228" bodyend="230"/>
        <references refid="classtesting_1_1internal_1_1linked__ptr_1a0c2ba99eb3521806f83f5c4435465ce0" compoundref="gtest-linked__ptr_8h" startline="182" endline="182">testing::internal::linked_ptr&lt; T &gt;::get</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad1cb54a206a209ddace17a05359d38ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool testing::internal::operator==</definition>
        <argsstring>(T *ptr, const linked_ptr&lt; T &gt; &amp;x)</argsstring>
        <name>operator==</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="classtesting_1_1internal_1_1linked__ptr" kindref="compound">linked_ptr</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" line="223" column="6" bodyfile="lib/googletest/include/gtest/internal/gtest-linked_ptr.h" bodystart="223" bodyend="225"/>
        <references refid="classtesting_1_1internal_1_1linked__ptr_1a0c2ba99eb3521806f83f5c4435465ce0" compoundref="gtest-linked__ptr_8h" startline="182" endline="182">testing::internal::linked_ptr&lt; T &gt;::get</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ada3b98e7cfe93f4ba2053c470d9e3e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::ParseBoolFlag</definition>
        <argsstring>(const char *str, const char *flag, bool *value)</argsstring>
        <name>ParseBoolFlag</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5053" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5053" bodyend="5063"/>
        <references refid="namespacetesting_1_1internal_1a8bfd56af5e4a89bfb76f7e1723e41b03" compoundref="gtest_8cc" startline="5015" endline="5041">ParseFlagValue</references>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8bfd56af5e4a89bfb76f7e1723e41b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* testing::internal::ParseFlagValue</definition>
        <argsstring>(const char *str, const char *flag, bool def_optional)</argsstring>
        <name>ParseFlagValue</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>def_optional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5015" column="12" bodyfile="lib/googletest/src/gtest.cc" bodystart="5015" bodyend="5041"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="gtest-port_8h_1a088e84784c589ba9b1fc48602ad8eabf" compoundref="gtest-port_8h" startline="286">GTEST_FLAG_PREFIX_</references>
        <references refid="cpp/string/basic_string/size_1">std::string::length</references>
        <referencedby refid="namespacetesting_1_1internal_1ada3b98e7cfe93f4ba2053c470d9e3e51" compoundref="gtest_8cc" startline="5053" endline="5063">ParseBoolFlag</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" compoundref="gtest_8cc" startline="5070" endline="5080">ParseInt32Flag</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1aa4ce312efaaf7a97aac2303173afe021" compoundref="gtest_8cc" startline="5087" endline="5097">ParseStringFlag</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::ParseGoogleTestFlag</definition>
        <argsstring>(const char *const arg)</argsstring>
        <name>ParseGoogleTestFlag</name>
        <param>
          <type>const char *const</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5223" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5223" bodyend="5250"/>
        <references refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" compoundref="gtest-port_8h" startline="2504">GTEST_FLAG</references>
        <references refid="namespacetesting_1_1internal_1ad5882ed0ceadc0f23090f0f08b5d495b" compoundref="gtest-internal-inl_8h" startline="89">kAlsoRunDisabledTestsFlag</references>
        <references refid="namespacetesting_1_1internal_1a804c907155bfee3a6616ae3ca04048d0" compoundref="gtest-internal-inl_8h" startline="90">kBreakOnFailureFlag</references>
        <references refid="namespacetesting_1_1internal_1af4bb309802e83df0927097e6e4201a38" compoundref="gtest-internal-inl_8h" startline="91">kCatchExceptionsFlag</references>
        <references refid="namespacetesting_1_1internal_1a884ff13b75232fbe7daa0caf46f1de66" compoundref="gtest-internal-inl_8h" startline="92">kColorFlag</references>
        <references refid="namespacetesting_1_1internal_1a008ebfe0c0347d65e5e06e4d310981b3" compoundref="gtest-death-test-internal_8h" startline="50">kDeathTestStyleFlag</references>
        <references refid="namespacetesting_1_1internal_1a32051e2574562b548be3e26a52eaa553" compoundref="gtest-death-test-internal_8h" startline="51">kDeathTestUseFork</references>
        <references refid="namespacetesting_1_1internal_1a8cb8ee7fe7659e6916a0108dffa2f7dc" compoundref="gtest-internal-inl_8h" startline="93">kFilterFlag</references>
        <references refid="namespacetesting_1_1internal_1a8572303d929880adf30db00952e1c45d" compoundref="gtest-death-test-internal_8h" startline="52">kInternalRunDeathTestFlag</references>
        <references refid="namespacetesting_1_1internal_1a1d3cfebffefbf35f7033d4941493a8ff" compoundref="gtest-internal-inl_8h" startline="94">kListTestsFlag</references>
        <references refid="namespacetesting_1_1internal_1abd5368e00a31d175c6696cf76cbbde10" compoundref="gtest-internal-inl_8h" startline="95">kOutputFlag</references>
        <references refid="namespacetesting_1_1internal_1aa6c13109bb4c78740ddb082b1ec0de56" compoundref="gtest-internal-inl_8h" startline="96">kPrintTimeFlag</references>
        <references refid="namespacetesting_1_1internal_1a964ad71443cfda304b3208bf5d2daa75" compoundref="gtest-internal-inl_8h" startline="97">kRandomSeedFlag</references>
        <references refid="namespacetesting_1_1internal_1a764ee423d39ebb8e10c53ab9b685cd9b" compoundref="gtest-internal-inl_8h" startline="98">kRepeatFlag</references>
        <references refid="namespacetesting_1_1internal_1affd2c1118505cb97d8ff728c95fc722b" compoundref="gtest-internal-inl_8h" startline="99">kShuffleFlag</references>
        <references refid="namespacetesting_1_1internal_1ad6f90e66d431ca3a9084408878c2cc77" compoundref="gtest-internal-inl_8h" startline="100">kStackTraceDepthFlag</references>
        <references refid="namespacetesting_1_1internal_1a84f8a2102d45c8b2b35be06d14ffefb8" compoundref="gtest-internal-inl_8h" startline="101">kStreamResultToFlag</references>
        <references refid="namespacetesting_1_1internal_1ad9efcf363de3483afd91c7393a4fefb8" compoundref="gtest-internal-inl_8h" startline="102">kThrowOnFailureFlag</references>
        <references refid="namespacetesting_1_1internal_1ada3b98e7cfe93f4ba2053c470d9e3e51" compoundref="gtest_8cc" startline="5053" endline="5063">ParseBoolFlag</references>
        <references refid="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" compoundref="gtest_8cc" startline="5070" endline="5080">ParseInt32Flag</references>
        <references refid="namespacetesting_1_1internal_1aa4ce312efaaf7a97aac2303173afe021" compoundref="gtest_8cc" startline="5087" endline="5097">ParseStringFlag</references>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a472880afbcc592a41e3d623e2dec8412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>void testing::internal::ParseGoogleTestFlagsOnly</definition>
        <argsstring>(int *argc, char **argv)</argsstring>
        <name>ParseGoogleTestFlagsOnly</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5332" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5332" bodyend="5334" declfile="lib/googletest/src/gtest-internal-inl.h" declline="953" declcolumn="17"/>
        <references refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</references>
        <referencedby refid="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" compoundref="gtest_8cc" startline="5344" endline="5357">InitGoogleTestImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa3c81a67914856448d0778990d9d9cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>void testing::internal::ParseGoogleTestFlagsOnly</definition>
        <argsstring>(int *argc, wchar_t **argv)</argsstring>
        <name>ParseGoogleTestFlagsOnly</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>wchar_t **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5335" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5335" bodyend="5337" declfile="lib/googletest/src/gtest-internal-inl.h" declline="954" declcolumn="17"/>
        <references refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::ParseGoogleTestFlagsOnlyImpl</definition>
        <argsstring>(int *argc, CharType **argv)</argsstring>
        <name>ParseGoogleTestFlagsOnlyImpl</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>CharType **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5279" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5279" bodyend="5328"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1a93a772f5e51973b105d91cbb66a203f4" compoundref="gtest_8cc" startline="188">g_help_flag</references>
        <references refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" compoundref="gtest-port_8h" startline="2504">GTEST_FLAG</references>
        <references refid="namespacetesting_1_1internal_1a6fff795269f50673e358438721710d6f" compoundref="gtest_8cc" startline="5105" endline="5112">HasGoogleTestFlagPrefix</references>
        <references refid="namespacetesting_1_1internal_1a159395e649dd7728b09b25f70847f1ca" compoundref="gtest_8cc" startline="5159">kColorEncodedHelpMessage</references>
        <references refid="namespacetesting_1_1internal_1aa1ffe15dea227d4dded912e43a8eed84" compoundref="gtest-internal-inl_8h" startline="103">kFlagfileFlag</references>
        <references refid="namespacetesting_1_1internal_1ada3b98e7cfe93f4ba2053c470d9e3e51" compoundref="gtest_8cc" startline="5053" endline="5063">ParseBoolFlag</references>
        <references refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</references>
        <references refid="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" compoundref="gtest_8cc" startline="5070" endline="5080">ParseInt32Flag</references>
        <references refid="namespacetesting_1_1internal_1aa4ce312efaaf7a97aac2303173afe021" compoundref="gtest_8cc" startline="5087" endline="5097">ParseStringFlag</references>
        <references refid="namespacetesting_1_1internal_1a7d8c446a29c7e22d7d4dde8f530bb57e" compoundref="gtest_8cc" startline="5125" endline="5157">PrintColorEncoded</references>
        <references refid="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" compoundref="gtest-message_8h" startline="243" endline="245">StreamableToString</references>
        <referencedby refid="namespacetesting_1_1internal_1a472880afbcc592a41e3d623e2dec8412" compoundref="gtest_8cc" startline="5332" endline="5334">ParseGoogleTestFlagsOnly</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac06fc81336a3d80755f4020d34321766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::ParseInt32</definition>
        <argsstring>(const Message &amp;src_text, const char *str, Int32 *value)</argsstring>
        <name>ParseInt32</name>
        <param>
          <type>const <ref refid="classtesting_1_1Message" kindref="compound">Message</ref> &amp;</type>
          <declname>src_text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1149" column="6" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1149" bodyend="1185" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="2543" declcolumn="6"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <referencedby refid="namespacetesting_1_1internal_1aaa576613655c2f380278c255c3ec5fef" compoundref="gtest_8cc" startline="4760" endline="4772">Int32FromEnvOrDie</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a2196f070b2d28bceb45c7ad3b565b9ba" compoundref="gtest-port_8cc" startline="1204" endline="1225">Int32FromGTestEnv</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" compoundref="gtest_8cc" startline="5070" endline="5080">ParseInt32Flag</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ae3449e173767750b613114ceac6d916a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> bool</type>
        <definition>bool testing::internal::ParseInt32Flag</definition>
        <argsstring>(const char *str, const char *flag, Int32 *value)</argsstring>
        <name>ParseInt32Flag</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="namespacetesting_1_1internal_1a8ee38faaf875f133358abaf9bc056cec" kindref="member">Int32</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5070" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5070" bodyend="5080" declfile="lib/googletest/src/gtest-internal-inl.h" declline="131" declcolumn="17"/>
        <references refid="namespacetesting_1_1internal_1a8bfd56af5e4a89bfb76f7e1723e41b03" compoundref="gtest_8cc" startline="5015" endline="5041">ParseFlagValue</references>
        <references refid="namespacetesting_1_1internal_1ac06fc81336a3d80755f4020d34321766" compoundref="gtest-port_8cc" startline="1149" endline="1185">ParseInt32</references>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa4ce312efaaf7a97aac2303173afe021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool testing::internal::ParseStringFlag</definition>
        <argsstring>(const char *str, const char *flag, std::string *value)</argsstring>
        <name>ParseStringFlag</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5087" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5087" bodyend="5097"/>
        <references refid="namespacetesting_1_1internal_1a8bfd56af5e4a89bfb76f7e1723e41b03" compoundref="gtest_8cc" startline="5015" endline="5041">ParseFlagValue</references>
        <referencedby refid="namespacetesting_1_1internal_1afccff08aa2b1ede0dd32c1364a5dee42" compoundref="gtest_8cc" startline="5223" endline="5250">ParseGoogleTestFlag</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a60af94307ed4f00a57b5c6d9617c046d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::PortableLocaltime</definition>
        <argsstring>(time_t seconds, struct tm *out)</argsstring>
        <name>PortableLocaltime</name>
        <param>
          <type>time_t</type>
          <declname>seconds</declname>
        </param>
        <param>
          <type>struct tm *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3556" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="3556" bodyend="3570"/>
        <referencedby refid="namespacetesting_1_1internal_1a5ef227c4a610e7ff638b12dfb25b068e" compoundref="gtest_8cc" startline="3574" endline="3585">FormatEpochTimeInMillisAsIso8601</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab73d250fde6dfbf16111afb7a071dc3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UnsignedChar</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793" kindref="member">CharFormat</ref></type>
        <definition>static CharFormat testing::internal::PrintAsCharLiteralTo</definition>
        <argsstring>(Char c, ostream *os)</argsstring>
        <name>PrintAsCharLiteralTo</name>
        <param>
          <type>Char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="146" column="19" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="146" bodyend="188"/>
        <references refid="classtesting_1_1internal_1_1String_1affe59102e49092fc0684388e9b0c5c1e" compoundref="gtest_8cc" startline="1966" endline="1970">testing::internal::String::FormatHexInt</references>
        <references refid="namespacetesting_1_1internal_1a744a6dd74c12d1e2c16b3c03e14ed4d4" compoundref="gtest-printers_8cc" startline="137" endline="139">IsPrintableAscii</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793af7038866be92e9978360b831e376ffaa" compoundref="gtest-printers_8cc" startline="129">kAsIs</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793aebfa5293302338a8e8678744c103f113" compoundref="gtest-printers_8cc" startline="130">kHexEscape</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793ae1211108e9f35f891d9951da64794d03" compoundref="gtest-printers_8cc" startline="131">kSpecialEscape</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a82e5b3cf45fd9c4603dbe14bc4cb38c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793" kindref="member">CharFormat</ref></type>
        <definition>static CharFormat testing::internal::PrintAsStringLiteralTo</definition>
        <argsstring>(char c, ostream *os)</argsstring>
        <name>PrintAsStringLiteralTo</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="207" column="19" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="207" bodyend="210"/>
        <references refid="namespacetesting_1_1internal_1a8c5838995d7bb9e4232b69e6bcdb9ab8" compoundref="gtest-printers_8cc" startline="192" endline="203">PrintAsStringLiteralTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8c5838995d7bb9e4232b69e6bcdb9ab8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793" kindref="member">CharFormat</ref></type>
        <definition>static CharFormat testing::internal::PrintAsStringLiteralTo</definition>
        <argsstring>(wchar_t c, ostream *os)</argsstring>
        <name>PrintAsStringLiteralTo</name>
        <param>
          <type>wchar_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="192" column="19" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="192" bodyend="203"/>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793af7038866be92e9978360b831e376ffaa" compoundref="gtest-printers_8cc" startline="129">kAsIs</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793ae1211108e9f35f891d9951da64794d03" compoundref="gtest-printers_8cc" startline="131">kSpecialEscape</references>
        <referencedby refid="namespacetesting_1_1internal_1a82e5b3cf45fd9c4603dbe14bc4cb38c2" compoundref="gtest-printers_8cc" startline="207" endline="210">PrintAsStringLiteralTo</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0c577e598e61d339ba45dd6643fb1969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UnsignedChar</type>
          </param>
          <param>
            <type>typename Char</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintCharAndCodeTo</definition>
        <argsstring>(Char c, ostream *os)</argsstring>
        <name>PrintCharAndCodeTo</name>
        <param>
          <type>Char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="217" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="217" bodyend="239"/>
        <references refid="classtesting_1_1internal_1_1String_1affe59102e49092fc0684388e9b0c5c1e" compoundref="gtest_8cc" startline="1966" endline="1970">testing::internal::String::FormatHexInt</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793aebfa5293302338a8e8678744c103f113" compoundref="gtest-printers_8cc" startline="130">kHexEscape</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="gtest-port_8h_1a2a83dd79037e53814a509cc3f5702650" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_</ref> <ref refid="gtest-port_8h_1af18b465f4ba6e36eea7a8d2d79521873" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_</ref> static <ref refid="gtest-port_8h_1abf30a6b1b3a12ecb2cc1bc1a6f5f9646" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_</ref> void</type>
        <definition>GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ static GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void testing::internal::PrintCharsAsStringTo</definition>
        <argsstring>(const CharType *begin, size_t len, ostream *os)</argsstring>
        <name>PrintCharsAsStringTo</name>
        <param>
          <type>const CharType *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="262" column="13" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="262" bodyend="278"/>
        <references refid="namespacetesting_1_1internal_1aa234ef141278263fb143b616c74c86e7" compoundref="gtest-port_8h" startline="2269" endline="2271">IsXDigit</references>
        <references refid="namespacetesting_1_1internal_1ae2ef98247c76a50cdc80ceb4a6c81793aebfa5293302338a8e8678744c103f113" compoundref="gtest-printers_8cc" startline="130">kHexEscape</references>
        <references refid="namespacetesting_1_1internal_1a8c5838995d7bb9e4232b69e6bcdb9ab8" compoundref="gtest-printers_8cc" startline="192" endline="203">PrintAsStringLiteralTo</references>
        <referencedby refid="namespacetesting_1_1internal_1ad609167d8d6792b0fb186539e0e159bd" compoundref="gtest-printers_8cc" startline="354" endline="356">PrintStringTo</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1adc6c98306d40b53fd07be4e295102a0a" compoundref="gtest-printers_8cc" startline="320" endline="327">PrintTo</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ad896a4e4d9133ce43dc18b6038d95dc3" compoundref="gtest-printers_8cc" startline="286" endline="306">UniversalPrintCharArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7d8c446a29c7e22d7d4dde8f530bb57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::internal::PrintColorEncoded</definition>
        <argsstring>(const char *str)</argsstring>
        <name>PrintColorEncoded</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5125" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="5125" bodyend="5157"/>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4eafcd8803dc9e37e374d5a4486afc230b7" compoundref="gtest_8cc" startline="2881">COLOR_DEFAULT</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea3b1e81f5b14a17b35a8672d57d166507" compoundref="gtest_8cc" startline="2883">COLOR_GREEN</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea9ebb3ddab9391781f6ee5021e1e443c3" compoundref="gtest_8cc" startline="2882">COLOR_RED</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea2cca441161aca75a208ff08d07f5b1a5" compoundref="gtest_8cc" startline="2884">COLOR_YELLOW</references>
        <references refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</references>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7a85ebe3b4de93a1edb091f92f1fb393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintFullTestCommentIfPresent</definition>
        <argsstring>(const TestInfo &amp;test_info)</argsstring>
        <name>PrintFullTestCommentIfPresent</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestInfo" kindref="compound">TestInfo</ref> &amp;</type>
          <declname>test_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="3009" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="3009" bodyend="3024"/>
        <references refid="namespacetesting_1_1internal_1ae6e5e31b85dac8586d4cc1ab1671f438" compoundref="gtest_8cc" startline="3006">kTypeParamLabel</references>
        <references refid="namespacetesting_1_1internal_1ae57eee0bf5371ff8e9688fb4464bc62b" compoundref="gtest_8cc" startline="3007">kValueParamLabel</references>
        <references refid="classtesting_1_1TestInfo_1a942c68285165e3bb7e6e53feaf4be53d" compoundref="gtest_8h" startline="718">testing::TestInfo::type_param</references>
        <references refid="classtesting_1_1TestInfo_1a09f74f774783cbae3ccbb01aa82df160" compoundref="gtest_8h" startline="719">testing::TestInfo::value_param</references>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1aca5a9dc08998948e293b307d931b3f86" compoundref="gtest_8cc" startline="3169" endline="3191">testing::internal::PrettyUnitTestResultPrinter::PrintFailedTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a4a8708bfb808411f9d918c7356ae7362" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::internal::PrintOnOneLine</definition>
        <argsstring>(const char *str, int max_length)</argsstring>
        <name>PrintOnOneLine</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4846" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="4846" bodyend="4862"/>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ad2cfedef41d3d29aad23c2c64214e6f3" compoundref="gtest_8cc" startline="4865" endline="4900">testing::internal::UnitTestImpl::ListTestsMatchingFilter</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad3013b6b4c825edee9fe18ff1d982faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintRawArrayTo</definition>
        <argsstring>(const T a[], size_t count, ::std::ostream *os)</argsstring>
        <name>PrintRawArrayTo</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="548" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="548" bodyend="554"/>
        <references refid="namespacetesting_1_1internal_1a30708fa2bacf11895b03bdb21eb72309" compoundref="gtest-printers_8h" startline="852" endline="857">UniversalPrint</references>
        <referencedby refid="namespacetesting_1_1internal_1ad79d71c3110f8eb24ab352d68f29436a" compoundref="gtest-printers_8h" startline="716" endline="736">UniversalPrintArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8b53e46cea3f8bdfc9342057c4f6ba62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::PrintStringTo</definition>
        <argsstring>(const ::std::string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintStringTo</name>
        <param>
          <type>const ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="564" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="564" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad609167d8d6792b0fb186539e0e159bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintStringTo</definition>
        <argsstring>(const ::std::string &amp;s, ostream *os)</argsstring>
        <name>PrintStringTo</name>
        <param>
          <type>const ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="354" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="354" bodyend="356"/>
        <references refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</references>
        <referencedby refid="namespacetesting_1_1internal_1af59b4f5d83276cd807c45063b14bad44" compoundref="gtest-printers_8h" startline="565" endline="567">PrintTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac844b3d05dd6f665f72e2a1cec1872ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::internal::PrintTestPartResult</definition>
        <argsstring>(const TestPartResult &amp;test_part_result)</argsstring>
        <name>PrintTestPartResult</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &amp;</type>
          <declname>test_part_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2860" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="2860" bodyend="2876"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1ada13cbf91139f0809a5a31ea2594c1ad" compoundref="gtest_8cc" startline="2850" endline="2857">PrintTestPartResultToString</references>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a7589e8df7485349498a3a81bf16e2f68" compoundref="gtest_8cc" startline="3119" endline="3128">testing::internal::PrettyUnitTestResultPrinter::OnTestPartResult</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ada13cbf91139f0809a5a31ea2594c1ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>static std::string testing::internal::PrintTestPartResultToString</definition>
        <argsstring>(const TestPartResult &amp;test_part_result)</argsstring>
        <name>PrintTestPartResultToString</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestPartResult" kindref="compound">TestPartResult</ref> &amp;</type>
          <declname>test_part_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2850" column="20" bodyfile="lib/googletest/src/gtest.cc" bodystart="2850" bodyend="2857"/>
        <references refid="classtesting_1_1TestPartResult_1a0be40512f50a0086c4d3dc43938978aa" compoundref="gtest-test-part_8h" startline="76" endline="78">testing::TestPartResult::file_name</references>
        <references refid="namespacetesting_1_1internal_1a31b7c3abed4a7c395f42c61e993989f4" compoundref="gtest-port_8cc" startline="880" endline="891">FormatFileLocation</references>
        <references refid="classtesting_1_1TestPartResult_1ad4c5da5f13245ac18cf256d0d9f3eda9" compoundref="gtest-test-part_8h" startline="82" endline="82">testing::TestPartResult::line_number</references>
        <references refid="classtesting_1_1TestPartResult_1a5019dc9d753aba5949777270de255d49" compoundref="gtest-test-part_8h" startline="88" endline="88">testing::TestPartResult::message</references>
        <references refid="namespacetesting_1a4e9fdeef31f7e49afccfde0532f76864" compoundref="gtest_8cc" startline="2830" endline="2845">testing::TestPartResultTypeToString</references>
        <references refid="classtesting_1_1TestPartResult_1aab92b225e8a472e78bd3889ca6df0d2a" compoundref="gtest-test-part_8h" startline="72" endline="72">testing::TestPartResult::type</references>
        <referencedby refid="namespacetesting_1_1internal_1ac844b3d05dd6f665f72e2a1cec1872ba" compoundref="gtest_8cc" startline="2860" endline="2876">PrintTestPartResult</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a2979ac1ad3e05c51dcd7dca2eb34e6ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(bool x, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="495" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a553eec7bb50de01c9e91cac4accc606f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="510" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="510" bodyend="512"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a476bd3d411d4f129620aaf8999c257c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="487" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="487" bodyend="492"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af2c33928facbf2edf7af564278724d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::pair&lt; T1, T2 &gt; &amp;value, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::<ref refid="cpp/utility/pair" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::pair</ref>&lt; T1, T2 &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="676" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="676" bodyend="684"/>
        <references refid="classtesting_1_1internal_1_1UniversalPrinter_1aecec021e1abbaa260b701e24e3fe33eb" compoundref="gtest-printers_8h" startline="698" endline="708">testing::internal::UniversalPrinter&lt; T &gt;::Print</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1af59b4f5d83276cd807c45063b14bad44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const ::std::string &amp;s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="565" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="565" bodyend="567"/>
        <references refid="namespacetesting_1_1internal_1ad609167d8d6792b0fb186539e0e159bd" compoundref="gtest-printers_8cc" startline="354" endline="356">PrintStringTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac226053b96d7d61f9407e3b75bab07d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="509" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="509" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1adc6c98306d40b53fd07be4e295102a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const char *s, ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="320" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="320" bodyend="327"/>
        <references refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a792cc5665a34619ed7a6d54711433456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const signed char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const signed char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="516" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="516" bodyend="518"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1adb3c27150dbe661db0e0c4be27533460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="454" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="454" bodyend="478"/>
        <references refid="namespacetesting_1_1internal_1ac7dfe02c4c1cbfe89c23a93d873079c5" compoundref="gtest-printers_8h" startline="370" endline="395">DefaultPrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a42c591f2164ad105b502a9262333aed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const unsigned char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="522" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="522" bodyend="524"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afb038075e9e2166d1d9158a19e0eed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(const wchar_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const wchar_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="536" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="536" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afc20fb56b2547a8f91f9ff99650f2024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(const wchar_t *s, ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>const wchar_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="337" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="337" bodyend="344"/>
        <references refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</references>
        <references refid="cpp/string/wide/wcslen_1">std::wcslen</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a1320096b116f8cc4b688acbd5b783051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(signed char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>signed char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="519" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="519" bodyend="521"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1abf6c518b437569187c1218166c702807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(signed char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>signed char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="244" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="244" bodyend="246" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="486" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a7fae797c500d66d0f5a9db4f205e3416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(unsigned char *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="525" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="525" bodyend="527"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(unsigned char c, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>unsigned char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="241" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="241" bodyend="243" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="485" declcolumn="17"/>
        <referencedby refid="classtesting_1_1internal_1_1UniversalPrinter_1aecec021e1abbaa260b701e24e3fe33eb" compoundref="gtest-printers_8h" startline="698" endline="708">testing::internal::UniversalPrinter&lt; T &gt;::Print</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a476bd3d411d4f129620aaf8999c257c0" compoundref="gtest-printers_8h" startline="487" endline="492">PrintTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8d41baa371fad3eb5a3dbe1bbc02c290" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(wchar_t *s, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>wchar_t *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="537" column="13" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="537" bodyend="539"/>
        <references refid="namespacetesting_1_1internal_1aa7e70a85d66f0c109e3e69629ef577f2" compoundref="gtest-printers_8cc" startline="241" endline="243">PrintTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a6c50fd437a2ae2ff6f182ccd6c2744dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::PrintTo</definition>
        <argsstring>(wchar_t wc, ::std::ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>wchar_t</type>
          <declname>wc</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="506" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="506" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa74ea9d64f76ce69eceb225ca5ebef58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::PrintTo</definition>
        <argsstring>(wchar_t wc, ostream *os)</argsstring>
        <name>PrintTo</name>
        <param>
          <type>wchar_t</type>
          <declname>wc</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="250" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab81b0af2a0131ea54dc11de00d5e6e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::ReadEntireFile</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>ReadEntireFile</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1081" column="13" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1081" bodyend="1101" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1428" declcolumn="24"/>
        <references refid="namespacetesting_1_1internal_1a40bcfd87e26aae36e0cc51e5db64fd89" compoundref="gtest-port_8cc" startline="1076" endline="1079">GetFileSize</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a85f6ff0e40f9a5f10af66a73cf1364fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::ReportFailureInUnknownLocation</definition>
        <argsstring>(TestPartResult::Type result_type, const std::string &amp;message)</argsstring>
        <name>ReportFailureInUnknownLocation</name>
        <param>
          <type><ref refid="classtesting_1_1TestPartResult_1a65ae656b33fdfdfffaf34858778a52d5" kindref="member">TestPartResult::Type</ref></type>
          <declname>result_type</declname>
        </param>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2250" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="2250" bodyend="2260" declfile="lib/googletest/include/gtest/gtest.h" declline="164" declcolumn="6"/>
        <references refid="classtesting_1_1UnitTest_1a1d157d2e9a5c1d3405333410c6b13932" compoundref="gtest_8cc" startline="4108" endline="4168">testing::UnitTest::AddTestPartResult</references>
        <references refid="classtesting_1_1UnitTest_1a24192400b70b3b946746954e9574fb8e" compoundref="gtest_8cc" startline="3972" endline="3991">testing::UnitTest::GetInstance</references>
        <referencedby refid="namespacetesting_1_1internal_1addb2ed165b92b74e25fe9ebe9e46b9f9" compoundref="gtest_8cc" startline="2410" endline="2460">HandleExceptionsInMethodIfSupported</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ac5293b438139ef7ed05cb7fcaaf63545" compoundref="gtest_8cc" startline="2383" endline="2404">HandleSehExceptionsInMethodIfSupported</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a5f5535012d4548788a5d1a4e0f18e19e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::internal::SetUpEnvironment</definition>
        <argsstring>(Environment *env)</argsstring>
        <name>SetUpEnvironment</name>
        <param>
          <type><ref refid="classtesting_1_1Environment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4539" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="4539" bodyend="4539"/>
        <references refid="classtesting_1_1Environment_1a1bf8cafaa9d4eba9feb98655ee434eb3" compoundref="gtest_8h" startline="978" endline="978">testing::Environment::SetUp</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a73e562dfef3eb7b30dfbb7b5e88e6df2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::ShouldRunTestCase</definition>
        <argsstring>(const TestCase *test_case)</argsstring>
        <name>ShouldRunTestCase</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref> *</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="356" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="356" bodyend="358"/>
        <references refid="classtesting_1_1TestCase_1a843d6cd43f3e587bfa8681990b9d59df" compoundref="gtest_8h" startline="811" endline="811">testing::TestCase::should_run</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1aff65061646c6b9857b37097423500bfe" compoundref="gtest_8cc" startline="746" endline="748">testing::internal::UnitTestImpl::test_case_to_run_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a437bd89f5bc532778d7467600e210395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> bool</type>
        <definition>bool testing::internal::ShouldRunTestOnShard</definition>
        <argsstring>(int total_shards, int shard_index, int test_id)</argsstring>
        <name>ShouldRunTestOnShard</name>
        <param>
          <type>int</type>
          <declname>total_shards</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shard_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4778" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="4778" bodyend="4780" declfile="lib/googletest/src/gtest-internal-inl.h" declline="275" declcolumn="17"/>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1abd47e447f0c2557ed528db0350671bed" compoundref="gtest_8cc" startline="4789" endline="4840">testing::internal::UnitTestImpl::FilterTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0fe41657b1d1ab7ec4e37ec07403ee6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> bool</type>
        <definition>bool testing::internal::ShouldShard</definition>
        <argsstring>(const char *total_shards_str, const char *shard_index_str, bool in_subprocess_for_death_test)</argsstring>
        <name>ShouldShard</name>
        <param>
          <type>const char *</type>
          <declname>total_shards_str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shard_index_str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>in_subprocess_for_death_test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4715" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="4715" bodyend="4755" declfile="lib/googletest/src/gtest-internal-inl.h" declline="262" declcolumn="17"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea9ebb3ddab9391781f6ee5021e1e443c3" compoundref="gtest_8cc" startline="2882">COLOR_RED</references>
        <references refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</references>
        <references refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</references>
        <references refid="namespacetesting_1_1internal_1aaa576613655c2f380278c255c3ec5fef" compoundref="gtest_8cc" startline="4760" endline="4772">Int32FromEnvOrDie</references>
        <references refid="namespacetesting_1a5f76dfdb8cb2664da54e320ecaba3643" compoundref="gtest_8cc" startline="174">testing::kTestShardIndex</references>
        <references refid="namespacetesting_1a7542311baba200ebabd4065717606f6e" compoundref="gtest_8cc" startline="176">testing::kTestTotalShards</references>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1abdba10a8c97e272ab4cee97cb652c957" compoundref="gtest_8cc" startline="3056" endline="3089">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac1db1b4603967a6c4404f31cbbac31a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> bool</type>
        <definition>bool testing::internal::ShouldUseColor</definition>
        <argsstring>(bool stdout_is_tty)</argsstring>
        <name>ShouldUseColor</name>
        <param>
          <type>bool</type>
          <declname>stdout_is_tty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="2916" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="2916" bodyend="2950" declfile="lib/googletest/src/gtest-internal-inl.h" declline="116" declcolumn="17"/>
        <references refid="classtesting_1_1internal_1_1String_1a116ca435d63306927ba19f90a3596787" compoundref="gtest_8cc" startline="1905" endline="1911">testing::internal::String::CaseInsensitiveCStringEquals</references>
        <references refid="classtesting_1_1internal_1_1String_1a8bea7b33e7effbd299a0b4a5522ea96e" compoundref="gtest_8cc" startline="894" endline="900">testing::internal::String::CStringEquals</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
        <references refid="gtest-port_8h_1a828f4e34a1c4b510da50ec1563e3562a" compoundref="gtest-port_8h" startline="2504">GTEST_FLAG</references>
        <referencedby refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a90d9e6ffe8522a7eb1b2ce9b1a0c4673" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::Shuffle</definition>
        <argsstring>(internal::Random *random, std::vector&lt; E &gt; *v)</argsstring>
        <name>Shuffle</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; E &gt; *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="333" column="13" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="333" bodyend="335"/>
        <references refid="namespacetesting_1_1internal_1a0e1d3dc36138a591769412d4c7779861" compoundref="gtest-internal-inl_8h" startline="312" endline="329">ShuffleRange</references>
        <references refid="cpp/container/vector/size_1">std::vector&lt; T &gt;::size</references>
        <referencedby refid="classtesting_1_1TestCase_1ac26160e2aeb3d8c86b611843c5abdb29" compoundref="gtest_8cc" startline="2793" endline="2795">testing::TestCase::ShuffleTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a0e1d3dc36138a591769412d4c7779861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::ShuffleRange</definition>
        <argsstring>(internal::Random *random, int begin, int end, std::vector&lt; E &gt; *v)</argsstring>
        <name>ShuffleRange</name>
        <param>
          <type><ref refid="classtesting_1_1internal_1_1Random" kindref="compound">internal::Random</ref> *</type>
          <declname>random</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; E &gt; *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-internal-inl.h" line="312" column="6" bodyfile="lib/googletest/src/gtest-internal-inl.h" bodystart="312" bodyend="329"/>
        <references refid="classtesting_1_1internal_1_1Random_1a9315b7fb621cbcfdf92ed4b5e584c0db" compoundref="gtest_8cc" startline="311" endline="325">testing::internal::Random::Generate</references>
        <references refid="gtest-port_8h_1ab54343f0a36dc4cb0ce8a478dd7847b8" compoundref="gtest-port_8h" startline="1295">GTEST_CHECK_</references>
        <references refid="cpp/container/vector/size_1">std::vector&lt; T &gt;::size</references>
        <references refid="cpp/algorithm/swap_1">std::swap</references>
        <referencedby refid="namespacetesting_1_1internal_1a90d9e6ffe8522a7eb1b2ce9b1a0c4673" compoundref="gtest-internal-inl_8h" startline="333" endline="335">Shuffle</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1aaaa38e6a4372e6bb9bbe3143a3a32b65" compoundref="gtest_8cc" startline="4939" endline="4951">testing::internal::UnitTestImpl::ShuffleTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aac72b20299ad4a99554ce161e1769560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>GTEST_API_ bool testing::internal::SkipPrefix</definition>
        <argsstring>(const char *prefix, const char **pstr)</argsstring>
        <name>SkipPrefix</name>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>pstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="5001" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="5001" bodyend="5008" declfile="lib/googletest/include/gtest/internal/gtest-internal.h" declline="543" declcolumn="17"/>
        <referencedby refid="namespacetesting_1_1internal_1a6fff795269f50673e358438721710d6f" compoundref="gtest_8cc" startline="5105" endline="5112">HasGoogleTestFlagPrefix</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a8eb8eddf760375a490e007b20777ec56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::SplitString</definition>
        <argsstring>(const ::std::string &amp;str, char delimiter, ::std::vector&lt; ::std::string &gt; *dest)</argsstring>
        <name>SplitString</name>
        <param>
          <type>const ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; ::<ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref> &gt; *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="922" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="922" bodyend="937"/>
        <references refid="namespacetesting_1_1internal_1a4d46f09c3bfe68700b7f728d2cc3782f" compoundref="gtest_8cc" startline="4988" endline="4996">AlwaysTrue</references>
        <references refid="cpp/container/vector/push_back_1">std::vector&lt; T &gt;::push_back</references>
        <references refid="cpp/container/vector/swap_1">std::vector&lt; T &gt;::swap</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aad4beed95d0846e6ffc5da0978ef3bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::StreamableToString</definition>
        <argsstring>(const T &amp;streamable)</argsstring>
        <name>StreamableToString</name>
        <param>
          <type>const T &amp;</type>
          <declname>streamable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-message.h" line="243" column="13" bodyfile="lib/googletest/include/gtest/gtest-message.h" bodystart="243" bodyend="245"/>
        <referencedby refid="namespacetesting_1_1internal_1a1ee4cde97868c53e442d3182496a9f3c" compoundref="gtest-port_8cc" startline="898" endline="906">FormatCompilerIndependentFileLocation</referencedby>
        <referencedby refid="namespacetesting_1a33e070c3e994cb75f9017fa2a044d536" compoundref="gtest_8cc" startline="2809" endline="2814">testing::FormatCountableNoun</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a5ef227c4a610e7ff638b12dfb25b068e" compoundref="gtest_8cc" startline="3574" endline="3585">FormatEpochTimeInMillisAsIso8601</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a31b7c3abed4a7c395f42c61e993989f4" compoundref="gtest-port_8cc" startline="880" endline="891">FormatFileLocation</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ac3c6fa93391768aa91c6238b31aaeeb5" compoundref="gtest_8cc" startline="5344" endline="5357">InitGoogleTestImpl</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1FilePath_1aa8c102da670261eb4fa8e2f2481df139" compoundref="gtest-filepath_8cc" startline="183" endline="195">testing::internal::FilePath::MakeFileName</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a7a62fe58fa6f6aace813eb62b31e5a51" compoundref="gtest_8cc" startline="3149" endline="3159">testing::internal::PrettyUnitTestResultPrinter::OnTestCaseEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1a06749ff2b32a16c127374ecd015f13e0" compoundref="gtest_8cc" startline="3130" endline="3147">testing::internal::PrettyUnitTestResultPrinter::OnTestEnd</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1PrettyUnitTestResultPrinter_1ac29b30216023baddda04ef5889f484ff" compoundref="gtest_8cc" startline="3193" endline="3229">testing::internal::PrettyUnitTestResultPrinter::OnTestIterationEnd</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ae4c46ce8c3d016848fff52cc5133f2ac" compoundref="gtest_8cc" startline="5279" endline="5328">ParseGoogleTestFlagsOnlyImpl</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a7f7accabeac896d4271f36d24ca02dba" compoundref="gtest_8cc" startline="3675" endline="3698">testing::internal::XmlUnitTestResultPrinter::PrintXmlTestCase</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a3be1c8766241d0f34cdf59b45a52f73b" compoundref="gtest_8cc" startline="3701" endline="3737">testing::internal::XmlUnitTestResultPrinter::PrintXmlUnitTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab38c435530c97f10fd7a8008a76331f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::StringFromGTestEnv</definition>
        <argsstring>(const char *flag, const char *default_value)</argsstring>
        <name>StringFromGTestEnv</name>
        <param>
          <type>const char *</type>
          <declname>flag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1229" column="13" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1229" bodyend="1256" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="2549" declcolumn="13"/>
        <references refid="cpp/string/basic_string/c_str_1">std::string::c_str</references>
        <references refid="namespacetesting_1_1internal_1a7540386ecf74d7ab7e2fa6089db94682" compoundref="gtest-port_8cc" startline="1134" endline="1144">FlagToEnvVar</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ab56e151d23ee7e14dbf03ac7aa1d182b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::StringStreamToString</definition>
        <argsstring>(::std::stringstream *ss)</argsstring>
        <name>StringStreamToString</name>
        <param>
          <type>::<ref refid="cpp/io/basic_stringstream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::stringstream</ref> *</type>
          <declname>ss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1982" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="1982" bodyend="1998" declfile="lib/googletest/include/gtest/internal/gtest-string.h" declline="162" declcolumn="24"/>
        <references refid="cpp/string/basic_string/reserve_1">std::string::reserve</references>
        <references refid="cpp/io/basic_stringstream/str_1">std::stringstream::str</references>
        <referencedby refid="namespacetesting_1_1internal_1a98ce463e5dbe0c6120fa817e1f8f2944" compoundref="gtest_8h" startline="1631" endline="1654">CmpHelperFloatingPointEQ</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a17b52b6b1f81f6dcad5cc4d12e5173a6" compoundref="gtest_8cc" startline="1384" endline="1415">FloatingPointLE</referencedby>
        <referencedby refid="classtesting_1_1Message_1a2cdc4df62bdcc9df37651a1cf527704e" compoundref="gtest_8cc" startline="981" endline="983">testing::Message::GetString</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1XmlUnitTestResultPrinter_1a2ae986dd2f4f2aed31cc6f3bc8c56898" compoundref="gtest_8cc" startline="3432" endline="3462">testing::internal::XmlUnitTestResultPrinter::OnTestIterationEnd</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" compoundref="gtest_8cc" startline="1823" endline="1844">WideStringToUtf8</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aa6afda12e567c353e2e9b9c2e8cae14f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::StripTrailingSpaces</definition>
        <argsstring>(std::string str)</argsstring>
        <name>StripTrailingSpaces</name>
        <param>
          <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2284" column="20" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2284" bodyend="2289"/>
        <references refid="cpp/string/basic_string/begin_1">std::string::begin</references>
        <references refid="cpp/string/basic_string/end_1">std::string::end</references>
        <references refid="cpp/string/basic_string/erase_1">std::string::erase</references>
        <references refid="namespacetesting_1_1internal_1af429e04f70f9c10f6aa76a5d1ccd389f" compoundref="gtest-port_8h" startline="2263" endline="2265">IsSpace</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad1b758141e7e064d00a2bf0355c8ee43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int testing::internal::SumOverTestCaseList</definition>
        <argsstring>(const std::vector&lt; TestCase * &gt; &amp;case_list, int(TestCase::*method)() const)</argsstring>
        <name>SumOverTestCaseList</name>
        <param>
          <type>const <ref refid="cpp/container/vector" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::vector</ref>&lt; <ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref> * &gt; &amp;</type>
          <declname>case_list</declname>
        </param>
        <param>
          <type>int(TestCase::*)() const</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="335" column="12" bodyfile="lib/googletest/src/gtest.cc" bodystart="335" bodyend="342"/>
        <references refid="cpp/container/vector/size_1">std::vector&lt; T &gt;::size</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a0c18b2a9cb240722b1e38a3530aa2269" compoundref="gtest_8cc" startline="767" endline="769">testing::internal::UnitTestImpl::disabled_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ad0abe95b66466268363d7fa407bac41b" compoundref="gtest_8cc" startline="756" endline="758">testing::internal::UnitTestImpl::failed_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a04827d118a329af68a1de2d6b93eb4e5" compoundref="gtest_8cc" startline="761" endline="764">testing::internal::UnitTestImpl::reportable_disabled_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1addb3896c4e0973bb5d2744fcb158afce" compoundref="gtest_8cc" startline="772" endline="774">testing::internal::UnitTestImpl::reportable_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1ac363f681cbecf10fea5c04408b98e744" compoundref="gtest_8cc" startline="751" endline="753">testing::internal::UnitTestImpl::successful_test_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a0f15365d1d1ce00eaeb6f8a1370113ec" compoundref="gtest_8cc" startline="782" endline="784">testing::internal::UnitTestImpl::test_to_run_count</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a89e8531ee2ba3f0aadc27a95ac6149f1" compoundref="gtest_8cc" startline="777" endline="779">testing::internal::UnitTestImpl::total_test_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac467e871e4781da3f5ebed2a4465aec4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void testing::internal::TearDownEnvironment</definition>
        <argsstring>(Environment *env)</argsstring>
        <name>TearDownEnvironment</name>
        <param>
          <type><ref refid="classtesting_1_1Environment" kindref="compound">Environment</ref> *</type>
          <declname>env</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4540" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="4540" bodyend="4540"/>
        <references refid="classtesting_1_1Environment_1a039bdaa705c46b9b88234cf4d3bb6254" compoundref="gtest_8h" startline="981" endline="981">testing::Environment::TearDown</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a9183d29a7f57e2906d03b644e6a12a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>GTEST_API_ std::string testing::internal::TempDir</definition>
        <argsstring>()</argsstring>
        <name>TempDir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-port.cc" line="1058" column="13" bodyfile="lib/googletest/src/gtest-port.cc" bodystart="1058" bodyend="1074" declfile="lib/googletest/include/gtest/internal/gtest-port.h" declline="1422" declcolumn="24"/>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a53454b6089c1c5b25319caa9de6c5c02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::TestCaseFailed</definition>
        <argsstring>(const TestCase *test_case)</argsstring>
        <name>TestCaseFailed</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref> *</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="350" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="350" bodyend="352"/>
        <references refid="classtesting_1_1TestCase_1ae71c30eab6f1673b82090a0e745c2aa5" compoundref="gtest_8h" startline="838" endline="838">testing::TestCase::Failed</references>
        <references refid="classtesting_1_1TestCase_1a843d6cd43f3e587bfa8681990b9d59df" compoundref="gtest_8h" startline="811" endline="811">testing::TestCase::should_run</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1af981a537231e1dad4c1f092c6fdec1ff" compoundref="gtest_8cc" startline="735" endline="737">testing::internal::UnitTestImpl::failed_test_case_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1aadc7afca7aab40f7f1d41bc17974459a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool testing::internal::TestCasePassed</definition>
        <argsstring>(const TestCase *test_case)</argsstring>
        <name>TestCasePassed</name>
        <param>
          <type>const <ref refid="classtesting_1_1TestCase" kindref="compound">TestCase</ref> *</type>
          <declname>test_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="345" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="345" bodyend="347"/>
        <references refid="classtesting_1_1TestCase_1a29bbfd227b732a90198b5280c039c271" compoundref="gtest_8h" startline="835" endline="835">testing::TestCase::Passed</references>
        <references refid="classtesting_1_1TestCase_1a843d6cd43f3e587bfa8681990b9d59df" compoundref="gtest_8h" startline="811" endline="811">testing::TestCase::should_run</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a2db3a2b3fed8065dbdd768ee407bf67e" compoundref="gtest_8cc" startline="730" endline="732">testing::internal::UnitTestImpl::successful_test_case_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad9c627ef2a94245e3fd69e7ab3d49b42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char testing::internal::ToLower</definition>
        <argsstring>(char ch)</argsstring>
        <name>ToLower</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2277" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2277" bodyend="2279"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ac1b876a8133895bd553d4780ecaa1e3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char testing::internal::ToUpper</definition>
        <argsstring>(char ch)</argsstring>
        <name>ToUpper</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/internal/gtest-port.h" line="2280" column="13" bodyfile="lib/googletest/include/gtest/internal/gtest-port.h" bodystart="2280" bodyend="2282"/>
        <referencedby refid="namespacetesting_1_1internal_1a7540386ecf74d7ab7e2fa6089db94682" compoundref="gtest-port_8cc" startline="1134" endline="1144">FlagToEnvVar</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a30708fa2bacf11895b03bdb21eb72309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalPrint</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>UniversalPrint</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="852" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="852" bodyend="857" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="365" declcolumn="6"/>
        <references refid="classtesting_1_1internal_1_1UniversalPrinter_1aecec021e1abbaa260b701e24e3fe33eb" compoundref="gtest-printers_8h" startline="698" endline="708">testing::internal::UniversalPrinter&lt; T &gt;::Print</references>
        <referencedby refid="namespacetesting_1_1internal_1ac7dfe02c4c1cbfe89c23a93d873079c5" compoundref="gtest-printers_8h" startline="370" endline="395">DefaultPrintTo</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01const_01char_01_5_01_4_1a37a3be2d26dc07b24d16c2b5eb88ecda" compoundref="gtest-printers_8h" startline="804" endline="810">testing::internal::UniversalTersePrinter&lt; const char * &gt;::Print</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UniversalPrinter_3_01T_01_6_01_4_1a923a694be8aa66117848c1c5f57ede35" compoundref="gtest-printers_8h" startline="764" endline="771">testing::internal::UniversalPrinter&lt; T &amp; &gt;::Print</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UniversalTersePrinter_1a042249cdb42fdb77588c9ad54ea7ed54" compoundref="gtest-printers_8h" startline="783" endline="785">testing::internal::UniversalTersePrinter&lt; T &gt;::Print</referencedby>
        <referencedby refid="classtesting_1_1internal_1_1UniversalTersePrinter_3_01T_01_6_01_4_1a931f93cc52a3046706c87d0a90640483" compoundref="gtest-printers_8h" startline="790" endline="792">testing::internal::UniversalTersePrinter&lt; T &amp; &gt;::Print</referencedby>
        <referencedby refid="namespacetesting_1_1internal_1ad3013b6b4c825edee9fe18ff1d982faa" compoundref="gtest-printers_8h" startline="548" endline="554">PrintRawArrayTo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a72c997dbd2c562110b2cb56c359decfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const char *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="738" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="738" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a070107e7a8205ad6ec4d538d52b15b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const char *begin, size_t len, ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="309" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="309" bodyend="311"/>
        <references refid="namespacetesting_1_1internal_1ad896a4e4d9133ce43dc18b6038d95dc3" compoundref="gtest-printers_8cc" startline="286" endline="306">UniversalPrintCharArray</references>
        <referencedby refid="classtesting_1_1internal_1_1UniversalPrinter_3_01T_0fN_0e_4_1a1cf0e7c8db59c090f769116c6421b212" compoundref="gtest-printers_8h" startline="751" endline="753">testing::internal::UniversalPrinter&lt; T[N]&gt;::Print</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad79d71c3110f8eb24ab352d68f29436a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const T *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="716" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="716" bodyend="736"/>
        <references refid="namespacetesting_1_1internal_1ad3013b6b4c825edee9fe18ff1d982faa" compoundref="gtest-printers_8h" startline="548" endline="554">PrintRawArrayTo</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ae31e146c35fd75afc6a9cc73ae2692d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> void</type>
        <definition>GTEST_API_ void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const wchar_t *begin, size_t len, ::std::ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const wchar_t *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="742" column="17" declfile="lib/googletest/include/gtest/gtest-printers.h" declline="742" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a52394019018eb5079f9f1bcca23dcd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::UniversalPrintArray</definition>
        <argsstring>(const wchar_t *begin, size_t len, ostream *os)</argsstring>
        <name>UniversalPrintArray</name>
        <param>
          <type>const wchar_t *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="315" column="6" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="315" bodyend="317"/>
        <references refid="namespacetesting_1_1internal_1ad896a4e4d9133ce43dc18b6038d95dc3" compoundref="gtest-printers_8cc" startline="286" endline="306">UniversalPrintCharArray</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1ad896a4e4d9133ce43dc18b6038d95dc3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
        </templateparamlist>
        <type><ref refid="gtest-port_8h_1a2a83dd79037e53814a509cc3f5702650" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_</ref> <ref refid="gtest-port_8h_1af18b465f4ba6e36eea7a8d2d79521873" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_</ref> static <ref refid="gtest-port_8h_1abf30a6b1b3a12ecb2cc1bc1a6f5f9646" kindref="member">GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_</ref> void</type>
        <definition>GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ static GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void testing::internal::UniversalPrintCharArray</definition>
        <argsstring>(const CharType *begin, size_t len, ostream *os)</argsstring>
        <name>UniversalPrintCharArray</name>
        <param>
          <type>const CharType *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>ostream *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest-printers.cc" line="286" column="13" bodyfile="lib/googletest/src/gtest-printers.cc" bodystart="286" bodyend="306"/>
        <references refid="namespacetesting_1_1internal_1a0be71e6d7cb274131c559193f81c83e2" compoundref="gtest-printers_8cc" startline="262" endline="278">PrintCharsAsStringTo</references>
        <referencedby refid="namespacetesting_1_1internal_1a070107e7a8205ad6ec4d538d52b15b38" compoundref="gtest-printers_8cc" startline="309" endline="311">UniversalPrintArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1afa92f5a284929dc3723e654a25feb7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void testing::internal::UniversalTersePrint</definition>
        <argsstring>(const T &amp;value, ::std::ostream *os)</argsstring>
        <name>UniversalTersePrint</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>::<ref refid="cpp/io/basic_ostream" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::ostream</ref> *</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/include/gtest/gtest-printers.h" line="843" column="6" bodyfile="lib/googletest/include/gtest/gtest-printers.h" bodystart="843" bodyend="845"/>
        <references refid="classtesting_1_1internal_1_1UniversalTersePrinter_1a042249cdb42fdb77588c9ad54ea7ed54" compoundref="gtest-printers_8h" startline="783" endline="785">testing::internal::UniversalTersePrinter&lt; T &gt;::Print</references>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a05b8c86ff38243f34d8f839a0eadefb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gtest-port_8h_1aa73be6f0ba4a7456180a94904ce17790" kindref="member">GTEST_API_</ref> <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string testing::internal::WideStringToUtf8</definition>
        <argsstring>(const wchar_t *str, int num_chars)</argsstring>
        <name>WideStringToUtf8</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="1823" column="13" bodyfile="lib/googletest/src/gtest.cc" bodystart="1823" bodyend="1844" declfile="lib/googletest/src/gtest-internal-inl.h" declline="248" declcolumn="24"/>
        <references refid="namespacetesting_1_1internal_1a0c0f9558efb9abb965851c4738cdc725" compoundref="gtest_8cc" startline="1759" endline="1785">CodePointToUtf8</references>
        <references refid="namespacetesting_1_1internal_1ac8ef1bb10cd9e69de939789b759e6bc9" compoundref="gtest_8cc" startline="1800" endline="1808">CreateCodePointFromUtf16SurrogatePair</references>
        <references refid="namespacetesting_1_1internal_1a681895f8cc32286211be9889da107394" compoundref="gtest_8cc" startline="1794" endline="1797">IsUtf16SurrogatePair</references>
        <references refid="namespacetesting_1_1internal_1ab56e151d23ee7e14dbf03ac7aa1d182b" compoundref="gtest_8cc" startline="1982" endline="1998">StringStreamToString</references>
        <referencedby refid="classtesting_1_1internal_1_1String_1aaf7e376ff580677ea4954d5913d5b917" compoundref="gtest_8cc" startline="1848" endline="1852">testing::internal::String::ShowWideCString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetesting_1_1internal_1a19b35b39782d41e6ef76e1910a3a502e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testing::internal::WriteToShardStatusFileIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>WriteToShardStatusFileIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/googletest/src/gtest.cc" line="4693" column="6" bodyfile="lib/googletest/src/gtest.cc" bodystart="4693" bodyend="4707" declfile="lib/googletest/src/gtest-internal-inl.h" declline="254" declcolumn="6"/>
        <references refid="namespacetesting_1_1internal_1a648c1bc94c2ef9e868ff3f9dff0f9c4ea9ebb3ddab9391781f6ee5021e1e443c3" compoundref="gtest_8cc" startline="2882">COLOR_RED</references>
        <references refid="namespacetesting_1_1internal_1adef3055706176001364e54eb73a87e31" compoundref="gtest_8cc" startline="2956" endline="3002">ColoredPrintf</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a4042201dcc4932641d484e7ddf94de7d" compoundref="gtest-port_8h" startline="2367" endline="2369">testing::internal::posix::FOpen</references>
        <references refid="namespacetesting_1_1internal_1_1posix_1a1d5e3da5a27eed25986859fa83cafe95" compoundref="gtest-port_8h" startline="2387" endline="2400">testing::internal::posix::GetEnv</references>
        <references refid="namespacetesting_1a57d3eeb1e968b4f1efc4787b2d39fbfa" compoundref="gtest_8cc" startline="178">testing::kTestShardStatusFile</references>
        <referencedby refid="classtesting_1_1internal_1_1UnitTestImpl_1a1fb6be9971f4768c4136a05aa9e7e375" compoundref="gtest_8cc" startline="4551" endline="4687">testing::internal::UnitTestImpl::RunAllTests</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/googletest/src/gtest-death-test.cc" line="107" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="dd/d7c/binary__search_8cc" kind="file" language="C++">
    <compoundname>binary_search.cc</compoundname>
    <includes refid="d8/d1e/binary__search_8h" local="yes">binary_search.h</includes>
    <includedby refid="d0/dd3/binary__search_2main_8cc" local="yes">binary_search/main.cc</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>binary_search.h</label>
        <link refid="d8/d1e/binary__search_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>queue</label>
        <link refid="cpp/header/queue" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="4">
        <label>iostream</label>
        <link refid="cpp/header/iostream" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml"/>
      </node>
      <node id="1">
        <label>binary_search/binary_search.cc</label>
        <link refid="dd/d7c/binary__search_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>binary_search/main.cc</label>
        <link refid="d0/dd3/binary__search_2main_8cc"/>
      </node>
      <node id="1">
        <label>binary_search/binary_search.cc</label>
        <link refid="dd/d7c/binary__search_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="d9/d0c/namespacecommon">common</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d1e/binary__search_8h" kindref="compound">binary_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/d0c/namespacecommon" kindref="compound">common</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="dc/df2/classcommon_1_1_binary_search_1a6503f14a85365c1f079c5d12df5ed745" refkind="member"><highlight class="normal"><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a6503f14a85365c1f079c5d12df5ed745" kindref="member">BinarySearch::GetNewNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="dc/df2/classcommon_1_1_binary_search_1a3cf5342919cdec20fc2c8379955ad4e5" refkind="member"><highlight class="normal"><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a3cf5342919cdec20fc2c8379955ad4e5" kindref="member">BinarySearch::Insert</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a6503f14a85365c1f079c5d12df5ed745" kindref="member">GetNewNode</ref>(value);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a3cf5342919cdec20fc2c8379955ad4e5" kindref="member">Insert</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a3cf5342919cdec20fc2c8379955ad4e5" kindref="member">Insert</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="dc/df2/classcommon_1_1_binary_search_1afe66ca6c3ab93b983018b3f0d2ee8efa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1afe66ca6c3ab93b983018b3f0d2ee8efa" kindref="member">BinarySearch::Search</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1afe66ca6c3ab93b983018b3f0d2ee8efa" kindref="member">Search</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1afe66ca6c3ab93b983018b3f0d2ee8efa" kindref="member">Search</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="dc/df2/classcommon_1_1_binary_search_1ac4add1a294b751548369c6b56dc606d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ac4add1a294b751548369c6b56dc606d1" kindref="member">BinarySearch::IsBinarySearchTree</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a896cb182f6f64ffc3d125aa2f0bb952f" kindref="member">IsBetween</ref>(node,<sp/>INT_MIN,<sp/>INT_MAX);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="dc/df2/classcommon_1_1_binary_search_1a896cb182f6f64ffc3d125aa2f0bb952f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a896cb182f6f64ffc3d125aa2f0bb952f" kindref="member">BinarySearch::IsBetween</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>&gt;<sp/>min<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>&lt;<sp/>max<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a896cb182f6f64ffc3d125aa2f0bb952f" kindref="member">IsBetween</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>,<sp/>min,<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a896cb182f6f64ffc3d125aa2f0bb952f" kindref="member">IsBetween</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>,<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>,<sp/>max))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="dc/df2/classcommon_1_1_binary_search_1a7efb4ad9a581ea73b1f8f113c880ef03" refkind="member"><highlight class="normal"><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a7efb4ad9a581ea73b1f8f113c880ef03" kindref="member">BinarySearch::GetMinNode</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a7efb4ad9a581ea73b1f8f113c880ef03" kindref="member">GetMinNode</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="dc/df2/classcommon_1_1_binary_search_1a3425efaa7b0eceb7de47489d889a547d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a3425efaa7b0eceb7de47489d889a547d" kindref="member">BinarySearch::GetMin</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a3425efaa7b0eceb7de47489d889a547d" kindref="member">GetMin</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="dc/df2/classcommon_1_1_binary_search_1a9c7dd3d0ae66558cb44fc3d3325a8527" refkind="member"><highlight class="normal"><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a9c7dd3d0ae66558cb44fc3d3325a8527" kindref="member">BinarySearch::GetMaxNode</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a9c7dd3d0ae66558cb44fc3d3325a8527" kindref="member">GetMaxNode</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="dc/df2/classcommon_1_1_binary_search_1a4fae01adf7146be44b4e612e1e5363f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a4fae01adf7146be44b4e612e1e5363f7" kindref="member">BinarySearch::GetMax</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a4fae01adf7146be44b4e612e1e5363f7" kindref="member">GetMax</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="dc/df2/classcommon_1_1_binary_search_1a830ecb4604864d9945c4d387ad075e4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a830ecb4604864d9945c4d387ad075e4e" kindref="member">BinarySearch::GetHeight</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="cpp/algorithm/max" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::max</ref>(<ref refid="dc/df2/classcommon_1_1_binary_search_1a830ecb4604864d9945c4d387ad075e4e" kindref="member">GetHeight</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>),<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a830ecb4604864d9945c4d387ad075e4e" kindref="member">GetHeight</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>));</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="dc/df2/classcommon_1_1_binary_search_1ab89a1784c9175d6b5ed4b076a227ebca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab89a1784c9175d6b5ed4b076a227ebca" kindref="member">BinarySearch::DeleteTree</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab89a1784c9175d6b5ed4b076a227ebca" kindref="member">DeleteTree</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab89a1784c9175d6b5ed4b076a227ebca" kindref="member">DeleteTree</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="dc/df2/classcommon_1_1_binary_search_1ac6a38c0d2012009cd2d753b7dad3ec8a" refkind="member"><highlight class="normal"><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ac6a38c0d2012009cd2d753b7dad3ec8a" kindref="member">BinarySearch::DeleteValue</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>node-&gt;data)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ac6a38c0d2012009cd2d753b7dad3ec8a" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>&gt;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ac6a38c0d2012009cd2d753b7dad3ec8a" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>matching<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>temp<sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1a7efb4ad9a581ea73b1f8f113c880ef03" kindref="member">GetMinNode</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>=<sp/>temp-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>;<sp/></highlight><highlight class="comment">//<sp/>replace<sp/>min<sp/>data<sp/>in<sp/>the<sp/>right<sp/>node<sp/>with<sp/>deleted<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>=<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ac6a38c0d2012009cd2d753b7dad3ec8a" kindref="member">DeleteValue</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>,<sp/>temp-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref>);<sp/></highlight><highlight class="comment">//<sp/>reconstruct<sp/>binary<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="dc/df2/classcommon_1_1_binary_search_1adee198c434de62ae34e599ab3fef7b06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1adee198c434de62ae34e599ab3fef7b06" kindref="member">BinarySearch::PrintBFS</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/container/queue" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::queue&lt;BSTNode*&gt;</ref><sp/>node_queue;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>current;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>node_queue.<ref refid="cpp/container/queue/push" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">push</ref>(node);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>node_queue.<ref refid="cpp/container/queue/empty" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>node_queue.<ref refid="cpp/container/queue/front" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">front</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_queue.<ref refid="cpp/container/queue/pop" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">pop</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/>current-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>node_queue.<ref refid="cpp/container/queue/push" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">push</ref>(current-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>node_queue.<ref refid="cpp/container/queue/push" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">push</ref>(current-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="dc/df2/classcommon_1_1_binary_search_1ab40530361f48f7098215865a6076977a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab40530361f48f7098215865a6076977a" kindref="member">BinarySearch::PrintInOrder</ref>(<ref refid="d5/d36/structcommon_1_1_b_s_t_node" kindref="compound">BSTNode</ref>*<sp/>node)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab40530361f48f7098215865a6076977a" kindref="member">PrintInOrder</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a2238204dbbc8dabdda64f3f235f71224" kindref="member">left</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cpp/io/cout" kindref="compound" external="/Users/shi-rongliu/html_book_20190607/cppreference-doxygen-web.tag.xml">std::cout</ref><sp/>&lt;&lt;<sp/>node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a9eab91667db4d35c7231dcddf7b89a76" kindref="member">data</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="dc/df2/classcommon_1_1_binary_search_1ab40530361f48f7098215865a6076977a" kindref="member">PrintInOrder</ref>(node-&gt;<ref refid="d5/d36/structcommon_1_1_b_s_t_node_1a4a656f5c32861942beaf30262c31baa1" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="binary_search/binary_search.cc"/>
  </compounddef>
</doxygen>

{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/googletest/test/gtest-death-test_test.cc File Reference\par \pard\plain 
{\tc\tcl2 \v lib/googletest/test/gtest-death-test_test.cc(d4ab02d08ceed19dab4276c86042b1520529304b)}
{\xe \v lib/googletest/test/gtest-death-test_test.cc(d4ab02d08ceed19dab4276c86042b1520529304b)}
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/gtest-death-test.h"}\par
{\f2 #include "gtest/gtest.h"}\par
{\f2 #include "gtest/internal/gtest-filepath.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gtest-death-test_test.cc:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d90/gtest-death-test__test_8cc__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 FuncWithAssert}}}
 (int *n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSG" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ConditionalDeathMacrosSyntaxDeathTest, SingleStatement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSH" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ConditionalDeathMacrosSyntaxDeathTest, SwitchStatement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSI" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ConditionalDeathMacrosTest, AssertDeatDoesNotReturnhIfUnsupported)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSJ" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ConditionalDeathMacrosTest, WarnsWhenDeathTestsNotAvailable)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSK" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (NotADeathTest, Test)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v FuncWithAssert\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:FuncWithAssert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FuncWithAssert (int *  {\i n})}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1363 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1363                             \{\par
1364   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
({\cf19 return};, {\cf22 ""});\par
1365   (*n)++;\par
1366 \}\par
}
{
\ql
References ASSERT_DEATH_IF_SUPPORTED.}\par
{
\ql
Referenced by TEST().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d88/gtest-death-test__test_8cc_afe40addf0e0bb4657d18f512092ef03b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ConditionalDeathMacrosSyntaxDeathTest , SingleStatement )}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1383 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1383                                                              \{\par
1384   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 AlwaysFalse}}}
())\par
1385     {\cf20 // This would fail if executed; this is a compilation test only}\par
1386     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
({\cf19 return}, {\cf22 ""});\par
1387 \par
1388   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJD" }{}}{\fldrslt {\cs37\ul\cf2 AlwaysTrue}}}
())\par
1389     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_DEATH_IF_SUPPORTED}}}
(_exit(1), {\cf22 ""});\par
1390   {\cf19 else}\par
1391     {\cf20 // This empty "else" branch is meant to ensure that EXPECT_DEATH}\par
1392     {\cf20 // doesn't expand into an "if" statement without an "else"}\par
1393     ;  {\cf20 // NOLINT}\par
1394 \par
1395   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 AlwaysFalse}}}
())\par
1396     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
({\cf19 return}, {\cf22 ""}) << {\cf22 "did not die"};\par
1397 \par
1398   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJB" }{}}{\fldrslt {\cs37\ul\cf2 AlwaysFalse}}}
())\par
1399     ;  {\cf20 // NOLINT}\par
1400   {\cf19 else}\par
1401     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_DEATH_IF_SUPPORTED}}}
(_exit(1), {\cf22 ""}) << 1 << 2 << 3;\par
1402 \}\par
}
{
\ql
References testing::internal::AlwaysFalse(), testing::internal::AlwaysTrue(), ASSERT_DEATH_IF_SUPPORTED, and EXPECT_DEATH_IF_SUPPORTED.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d88/gtest-death-test__test_8cc_aacb04a80e0263de84b203b95cc421437_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ConditionalDeathMacrosSyntaxDeathTest , SwitchStatement )}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1406 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1406                                                              \{\par
1407   {\cf20 // Microsoft compiler usually complains about switch statements without}\par
1408   {\cf20 // case labels. We suppress that warning for this test.}\par
1409   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRB" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISABLE_MSC_WARNINGS_PUSH_}}}
(4065)\par
1410 \par
1411   switch (0)\par
1412     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJQ" }{}}{\fldrslt {\cs37\ul\cf2 default}}}
:\par
1413       {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
(_exit(1), "")\par
1414           << "exit in {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACJQ" }{}}{\fldrslt {\cs37\ul\cf2 default}}}
 switch handler";\par
1415 \par
1416   switch (0)\par
1417     case 0:\par
1418       {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_DEATH_IF_SUPPORTED}}}
(_exit(1), "") << "exit in switch case";\par
1419 \par
1420   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRA" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_DISABLE_MSC_WARNINGS_POP_}}}
()\par
1421 \}\par
}
{
\ql
References ASSERT_DEATH_IF_SUPPORTED, EXPECT_DEATH_IF_SUPPORTED, GTEST_DISABLE_MSC_WARNINGS_POP_, and GTEST_DISABLE_MSC_WARNINGS_PUSH_.}\par
}
{\xe \v TEST\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ConditionalDeathMacrosTest , AssertDeatDoesNotReturnhIfUnsupported )}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1370 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1370                                                                         \{\par
1371   {\cf18 int} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
 = 0;\par
1372   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSF" }{}}{\fldrslt {\cs37\ul\cf2 FuncWithAssert}}}
(&{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
1373   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
1374 \}\par
}
{
\ql
References EXPECT_EQ, FuncWithAssert(), and testing::internal::posix::n.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d88/gtest-death-test__test_8cc_acdbff3626995270fcbcc0b97e303d742_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ConditionalDeathMacrosTest , WarnsWhenDeathTestsNotAvailable )}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1334 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1334                                                                   \{\par
1335   {\cf20 // Empty statement will not crash, but that should not trigger a failure}\par
1336   {\cf20 // when death tests are not supported.}\par
1337   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 CaptureStderr}}}
();\par
1338   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_DEATH_IF_SUPPORTED}}}
(;, {\cf22 ""});\par
1339   std::string {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 GetCapturedStderr}}}
();\par
1340   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL != strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(),\par
1341                              {\cf22 "Death tests are not supported on this platform"}));\par
1342   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL != strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(), {\cf22 ";"}));\par
1343 \par
1344   {\cf20 // The streamed message should not be printed as there is no test failure.}\par
1345   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 CaptureStderr}}}
();\par
1346   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFZ" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_DEATH_IF_SUPPORTED}}}
(;, {\cf22 ""}) << {\cf22 "streamed message"};\par
1347   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 GetCapturedStderr}}}
();\par
1348   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL == strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(), {\cf22 "streamed message"}));\par
1349 \par
1350   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 CaptureStderr}}}
();\par
1351   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
(;, {\cf22 ""});  {\cf20 // NOLINT}\par
1352   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 GetCapturedStderr}}}
();\par
1353   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL != strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(),\par
1354                              {\cf22 "Death tests are not supported on this platform"}));\par
1355   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL != strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(), {\cf22 ";"}));\par
1356 \par
1357   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTG" }{}}{\fldrslt {\cs37\ul\cf2 CaptureStderr}}}
();\par
1358   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFX" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_DEATH_IF_SUPPORTED}}}
(;, {\cf22 ""}) << {\cf22 "streamed message"};  {\cf20 // NOLINT}\par
1359   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
 = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTW" }{}}{\fldrslt {\cs37\ul\cf2 GetCapturedStderr}}}
();\par
1360   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKY" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_TRUE}}}
(NULL == strstr({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACSL" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
.c_str(), {\cf22 "streamed message"}));\par
1361 \}\par
}
{
\ql
References ASSERT_DEATH_IF_SUPPORTED, ASSERT_TRUE, testing::internal::CaptureStderr(), EXPECT_DEATH_IF_SUPPORTED, testing::internal::GetCapturedStderr(), and gtest_output_test::output.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d88/gtest-death-test__test_8cc_a8a47cdbd11c2456db464fe098d134aa0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest-death-test_test.cc}
{\xe \v gtest-death-test_test.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (NotADeathTest , Test )}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1425 of file gtest-death-test_test.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1425                           \{\par
1426   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 SUCCEED}}}
();\par
1427 \}\par
}
{
\ql
References SUCCEED.}\par
}
}
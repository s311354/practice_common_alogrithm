{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
std::tr1 Namespace Reference\par \pard\plain 
{\tc\tcl2 \v std::tr1}
{\xe \v std::tr1}
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
 {\b gtest_internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_element}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_10_TYPENAMES_(T) > {\b GTEST_10_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_1_TYPENAMES_(T) > class {\b GTEST_1_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_1_TYPENAMES_(T) > {\b GTEST_1_TUPLE_} (T) {\b make_tuple}(const T0 &f0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_2_TYPENAMES_(T) > class {\b GTEST_2_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_2_TYPENAMES_(T) > {\b GTEST_2_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_3_TYPENAMES_(T) > class {\b GTEST_3_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_3_TYPENAMES_(T) > {\b GTEST_3_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_4_TYPENAMES_(T) > class {\b GTEST_4_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_4_TYPENAMES_(T) > {\b GTEST_4_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_5_TYPENAMES_(T) > class {\b GTEST_5_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_5_TYPENAMES_(T) > {\b GTEST_5_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_6_TYPENAMES_(T) > class {\b GTEST_6_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_6_TYPENAMES_(T) > {\b GTEST_6_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_7_TYPENAMES_(T) > class {\b GTEST_7_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_7_TYPENAMES_(T) > {\b GTEST_7_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_8_TYPENAMES_(T) > class {\b GTEST_8_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_8_TYPENAMES_(T) > {\b GTEST_8_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_9_TYPENAMES_(T) > class {\b GTEST_9_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_9_TYPENAMES_(T) > {\b GTEST_9_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, GTEST_10_TYPENAMES_(T) > {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get({\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, GTEST_10_TYPENAMES_(T) > {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get(const {\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} {\b make_tuple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_10_TYPENAMES_(T) , GTEST_10_TYPENAMES_(U) > bool {\b operator!=} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<GTEST_10_TYPENAMES_(T) , GTEST_10_TYPENAMES_(U) > bool {\b operator==} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constants\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 & {\b f1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 & {\b f2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 & {\b f3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 & {\b f4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 & {\b f5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 & {\b f6}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 & {\b f7}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 & {\b f8}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9 & {\b f9}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v std::tr1::tuple_element}
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct std::tr1::tuple_element\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int k, class Tuple>\par
struct std::tr1::tuple_element< k, Tuple >\par
}

\par
}
Collaboration diagram for std::tr1::tuple_element< k, Tuple >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d53/structstd_1_1tr1_1_1tuple__element__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GTEST_10_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_10_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_10_TYPENAMES_(T) > std::tr1::GTEST_10_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\ql
Referenced by operator==().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db7/namespacestd_1_1tr1_aa636d3269bf1f368a7bc09ff158bc482_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v GTEST_1_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_1_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_1_TYPENAMES_(T) > class std::tr1::GTEST_1_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 213                         \{\par
214  {\cf17 public}:\par
215   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
216 \par
217   tuple() : f0_() \{\}\par
218 \par
219   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0) : f0_(f0) \{\}\par
220 \par
221   tuple({\cf17 const} tuple& t) : f0_(t.f0_) \{\}\par
222 \par
223   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
224   tuple({\cf17 const} GTEST_1_TUPLE_(U)& t) : f0_(t.f0_) \{\}\par
225 \par
226   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
227 \par
228   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
229   tuple& operator=({\cf17 const} GTEST_1_TUPLE_(U)& t) \{\par
230     {\cf19 return} CopyFrom(t);\par
231   \}\par
232 \par
233   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
234 \par
235   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
236   tuple& CopyFrom({\cf17 const} GTEST_1_TUPLE_(U)& t) \{\par
237     f0_ = t.f0_;\par
238     {\cf19 return} *{\cf17 this};\par
239   \}\par
240 \par
241   T0 f0_;\par
242 \};\par
}
{
\ql
Referenced by GTEST_1_TUPLE_().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db7/namespacestd_1_1tr1_a9971f52f994f142fe36c786b991cfd3e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v GTEST_1_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_1_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_1_TYPENAMES_(T) > std::tr1::GTEST_1_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 678                                                   \{\par
679   {\cf19 return} GTEST_1_TUPLE_(T)(f0);\par
680 \}\par
}
{
\ql
References GTEST_1_TUPLE_().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db7/namespacestd_1_1tr1_a8b196fb65b7521a688f59c51418ab191_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v GTEST_2_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_2_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_2_TYPENAMES_(T) > class std::tr1::GTEST_2_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 245                         \{\par
246  {\cf17 public}:\par
247   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
248 \par
249   tuple() : f0_(), f1_() \{\}\par
250 \par
251   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1) : f0_(f0),\par
252       f1_(f1) \{\}\par
253 \par
254   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_) \{\}\par
255 \par
256   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
257   tuple({\cf17 const} GTEST_2_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_) \{\}\par
258   {\cf17 template} <{\cf17 typename} U0, {\cf17 typename} U1>\par
259   tuple(const ::std::pair<U0, U1>& p) : f0_(p.first), f1_(p.second) \{\}\par
260 \par
261   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
262 \par
263   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
264   tuple& operator=({\cf17 const} GTEST_2_TUPLE_(U)& t) \{\par
265     {\cf19 return} CopyFrom(t);\par
266   \}\par
267   {\cf17 template} <{\cf17 typename} U0, {\cf17 typename} U1>\par
268   tuple& operator=(const ::std::pair<U0, U1>& p) \{\par
269     f0_ = p.first;\par
270     f1_ = p.second;\par
271     {\cf19 return} *{\cf17 this};\par
272   \}\par
273 \par
274   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
275 \par
276   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
277   tuple& CopyFrom({\cf17 const} GTEST_2_TUPLE_(U)& t) \{\par
278     f0_ = t.f0_;\par
279     f1_ = t.f1_;\par
280     {\cf19 return} *{\cf17 this};\par
281   \}\par
282 \par
283   T0 f0_;\par
284   T1 f1_;\par
285 \};\par
}
}
{\xe \v GTEST_2_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_2_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_2_TYPENAMES_(T) > std::tr1::GTEST_2_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_3_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_3_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_3_TYPENAMES_(T) > class std::tr1::GTEST_3_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 288                         \{\par
289  {\cf17 public}:\par
290   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
291 \par
292   tuple() : f0_(), f1_(), f2_() \{\}\par
293 \par
294   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
295       GTEST_BY_REF_(T2) f2) : f0_(f0), f1_(f1), f2_(f2) \{\}\par
296 \par
297   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_) \{\}\par
298 \par
299   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
300   tuple({\cf17 const} GTEST_3_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_) \{\}\par
301 \par
302   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
303 \par
304   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
305   tuple& operator=({\cf17 const} GTEST_3_TUPLE_(U)& t) \{\par
306     {\cf19 return} CopyFrom(t);\par
307   \}\par
308 \par
309   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
310 \par
311   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
312   tuple& CopyFrom({\cf17 const} GTEST_3_TUPLE_(U)& t) \{\par
313     f0_ = t.f0_;\par
314     f1_ = t.f1_;\par
315     f2_ = t.f2_;\par
316     {\cf19 return} *{\cf17 this};\par
317   \}\par
318 \par
319   T0 f0_;\par
320   T1 f1_;\par
321   T2 f2_;\par
322 \};\par
}
}
{\xe \v GTEST_3_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_3_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_3_TYPENAMES_(T) > std::tr1::GTEST_3_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_4_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_4_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_4_TYPENAMES_(T) > class std::tr1::GTEST_4_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 325                         \{\par
326  {\cf17 public}:\par
327   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
328 \par
329   tuple() : f0_(), f1_(), f2_(), f3_() \{\}\par
330 \par
331   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
332       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3) : f0_(f0), f1_(f1), f2_(f2),\par
333       f3_(f3) \{\}\par
334 \par
335   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_) \{\}\par
336 \par
337   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
338   tuple({\cf17 const} GTEST_4_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
339       f3_(t.f3_) \{\}\par
340 \par
341   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
342 \par
343   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
344   tuple& operator=({\cf17 const} GTEST_4_TUPLE_(U)& t) \{\par
345     {\cf19 return} CopyFrom(t);\par
346   \}\par
347 \par
348   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
349 \par
350   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
351   tuple& CopyFrom({\cf17 const} GTEST_4_TUPLE_(U)& t) \{\par
352     f0_ = t.f0_;\par
353     f1_ = t.f1_;\par
354     f2_ = t.f2_;\par
355     f3_ = t.f3_;\par
356     {\cf19 return} *{\cf17 this};\par
357   \}\par
358 \par
359   T0 f0_;\par
360   T1 f1_;\par
361   T2 f2_;\par
362   T3 f3_;\par
363 \};\par
}
}
{\xe \v GTEST_4_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_4_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_4_TYPENAMES_(T) > std::tr1::GTEST_4_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_5_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_5_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_5_TYPENAMES_(T) > class std::tr1::GTEST_5_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 366                         \{\par
367  {\cf17 public}:\par
368   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
369 \par
370   tuple() : f0_(), f1_(), f2_(), f3_(), f4_() \{\}\par
371 \par
372   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
373       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3,\par
374       GTEST_BY_REF_(T4) f4) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4) \{\}\par
375 \par
376   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
377       f4_(t.f4_) \{\}\par
378 \par
379   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
380   tuple({\cf17 const} GTEST_5_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
381       f3_(t.f3_), f4_(t.f4_) \{\}\par
382 \par
383   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
384 \par
385   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
386   tuple& operator=({\cf17 const} GTEST_5_TUPLE_(U)& t) \{\par
387     {\cf19 return} CopyFrom(t);\par
388   \}\par
389 \par
390   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
391 \par
392   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
393   tuple& CopyFrom({\cf17 const} GTEST_5_TUPLE_(U)& t) \{\par
394     f0_ = t.f0_;\par
395     f1_ = t.f1_;\par
396     f2_ = t.f2_;\par
397     f3_ = t.f3_;\par
398     f4_ = t.f4_;\par
399     {\cf19 return} *{\cf17 this};\par
400   \}\par
401 \par
402   T0 f0_;\par
403   T1 f1_;\par
404   T2 f2_;\par
405   T3 f3_;\par
406   T4 f4_;\par
407 \};\par
}
}
{\xe \v GTEST_5_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_5_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_5_TYPENAMES_(T) > std::tr1::GTEST_5_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_6_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_6_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_6_TYPENAMES_(T) > class std::tr1::GTEST_6_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 410                         \{\par
411  {\cf17 public}:\par
412   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
413 \par
414   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_() \{\}\par
415 \par
416   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
417       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
418       GTEST_BY_REF_(T5) f5) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
419       f5_(f5) \{\}\par
420 \par
421   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
422       f4_(t.f4_), f5_(t.f5_) \{\}\par
423 \par
424   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
425   tuple({\cf17 const} GTEST_6_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
426       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_) \{\}\par
427 \par
428   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
429 \par
430   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
431   tuple& operator=({\cf17 const} GTEST_6_TUPLE_(U)& t) \{\par
432     {\cf19 return} CopyFrom(t);\par
433   \}\par
434 \par
435   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
436 \par
437   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
438   tuple& CopyFrom({\cf17 const} GTEST_6_TUPLE_(U)& t) \{\par
439     f0_ = t.f0_;\par
440     f1_ = t.f1_;\par
441     f2_ = t.f2_;\par
442     f3_ = t.f3_;\par
443     f4_ = t.f4_;\par
444     f5_ = t.f5_;\par
445     {\cf19 return} *{\cf17 this};\par
446   \}\par
447 \par
448   T0 f0_;\par
449   T1 f1_;\par
450   T2 f2_;\par
451   T3 f3_;\par
452   T4 f4_;\par
453   T5 f5_;\par
454 \};\par
}
}
{\xe \v GTEST_6_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_6_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_6_TYPENAMES_(T) > std::tr1::GTEST_6_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_7_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_7_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_7_TYPENAMES_(T) > class std::tr1::GTEST_7_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 457                         \{\par
458  {\cf17 public}:\par
459   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
460 \par
461   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_() \{\}\par
462 \par
463   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
464       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
465       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6) : f0_(f0), f1_(f1), f2_(f2),\par
466       f3_(f3), f4_(f4), f5_(f5), f6_(f6) \{\}\par
467 \par
468   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
469       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_) \{\}\par
470 \par
471   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
472   tuple({\cf17 const} GTEST_7_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
473       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_) \{\}\par
474 \par
475   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
476 \par
477   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
478   tuple& operator=({\cf17 const} GTEST_7_TUPLE_(U)& t) \{\par
479     {\cf19 return} CopyFrom(t);\par
480   \}\par
481 \par
482   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
483 \par
484   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
485   tuple& CopyFrom({\cf17 const} GTEST_7_TUPLE_(U)& t) \{\par
486     f0_ = t.f0_;\par
487     f1_ = t.f1_;\par
488     f2_ = t.f2_;\par
489     f3_ = t.f3_;\par
490     f4_ = t.f4_;\par
491     f5_ = t.f5_;\par
492     f6_ = t.f6_;\par
493     {\cf19 return} *{\cf17 this};\par
494   \}\par
495 \par
496   T0 f0_;\par
497   T1 f1_;\par
498   T2 f2_;\par
499   T3 f3_;\par
500   T4 f4_;\par
501   T5 f5_;\par
502   T6 f6_;\par
503 \};\par
}
}
{\xe \v GTEST_7_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_7_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_7_TYPENAMES_(T) > std::tr1::GTEST_7_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_8_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_8_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_8_TYPENAMES_(T) > class std::tr1::GTEST_8_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 506                         \{\par
507  {\cf17 public}:\par
508   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
509 \par
510   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_() \{\}\par
511 \par
512   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
513       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
514       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6,\par
515       GTEST_BY_REF_(T7) f7) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
516       f5_(f5), f6_(f6), f7_(f7) \{\}\par
517 \par
518   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
519       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_) \{\}\par
520 \par
521   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
522   tuple({\cf17 const} GTEST_8_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
523       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_) \{\}\par
524 \par
525   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
526 \par
527   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
528   tuple& operator=({\cf17 const} GTEST_8_TUPLE_(U)& t) \{\par
529     {\cf19 return} CopyFrom(t);\par
530   \}\par
531 \par
532   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
533 \par
534   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
535   tuple& CopyFrom({\cf17 const} GTEST_8_TUPLE_(U)& t) \{\par
536     f0_ = t.f0_;\par
537     f1_ = t.f1_;\par
538     f2_ = t.f2_;\par
539     f3_ = t.f3_;\par
540     f4_ = t.f4_;\par
541     f5_ = t.f5_;\par
542     f6_ = t.f6_;\par
543     f7_ = t.f7_;\par
544     {\cf19 return} *{\cf17 this};\par
545   \}\par
546 \par
547   T0 f0_;\par
548   T1 f1_;\par
549   T2 f2_;\par
550   T3 f3_;\par
551   T4 f4_;\par
552   T5 f5_;\par
553   T6 f6_;\par
554   T7 f7_;\par
555 \};\par
}
}
{\xe \v GTEST_8_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_8_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_8_TYPENAMES_(T) > std::tr1::GTEST_8_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_9_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_9_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_9_TYPENAMES_(T) > class std::tr1::GTEST_9_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 558                         \{\par
559  {\cf17 public}:\par
560   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
561 \par
562   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_() \{\}\par
563 \par
564   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
565       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
566       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,\par
567       GTEST_BY_REF_(T8) f8) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
568       f5_(f5), f6_(f6), f7_(f7), f8_(f8) \{\}\par
569 \par
570   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
571       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_) \{\}\par
572 \par
573   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
574   tuple({\cf17 const} GTEST_9_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
575       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_) \{\}\par
576 \par
577   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
578 \par
579   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
580   tuple& operator=({\cf17 const} GTEST_9_TUPLE_(U)& t) \{\par
581     {\cf19 return} CopyFrom(t);\par
582   \}\par
583 \par
584   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
585 \par
586   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
587   tuple& CopyFrom({\cf17 const} GTEST_9_TUPLE_(U)& t) \{\par
588     f0_ = t.f0_;\par
589     f1_ = t.f1_;\par
590     f2_ = t.f2_;\par
591     f3_ = t.f3_;\par
592     f4_ = t.f4_;\par
593     f5_ = t.f5_;\par
594     f6_ = t.f6_;\par
595     f7_ = t.f7_;\par
596     f8_ = t.f8_;\par
597     {\cf19 return} *{\cf17 this};\par
598   \}\par
599 \par
600   T0 f0_;\par
601   T1 f1_;\par
602   T2 f2_;\par
603   T3 f3_;\par
604   T4 f4_;\par
605   T5 f5_;\par
606   T6 f6_;\par
607   T7 f7_;\par
608   T8 f8_;\par
609 \};\par
}
}
{\xe \v GTEST_9_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_9_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_9_TYPENAMES_(T) > std::tr1::GTEST_9_TUPLE_ (T ) const &}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_ADD_REF_\:std::tr1}
{\xe \v std::tr1\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int k, GTEST_10_TYPENAMES_(T) > std::tr1::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T)) ) &}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 931                            \{\par
932   {\cf19 return} gtest_internal::Get<k>::Field(t);\par
933 \}\par
}
}
{\xe \v GTEST_BY_REF_\:std::tr1}
{\xe \v std::tr1\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int k, GTEST_10_TYPENAMES_(T) > std::tr1::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T)) ) const &}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 937                                  \{\par
938   {\cf19 return} gtest_internal::Get<k>::ConstField(t);\par
939 \}\par
}
}
{\xe \v make_tuple\:std::tr1}
{\xe \v std::tr1\:make_tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tuple} std::tr1::make_tuple ()}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 675 \{ {\cf19 return} tuple<>(); \}\par
}
}
{\xe \v operator!=\:std::tr1}
{\xe \v std::tr1\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_10_TYPENAMES_(T) , GTEST_10_TYPENAMES_(U) > bool std::tr1::operator!= (const {\b GTEST_10_TUPLE_}(T)&  {\i t}, const {\b GTEST_10_TUPLE_}(U)&  {\i u})}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 983                                                     \{ {\cf19 return} !(t == u); \}\par
}
}
{\xe \v operator==\:std::tr1}
{\xe \v std::tr1\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<GTEST_10_TYPENAMES_(T) , GTEST_10_TYPENAMES_(U) > bool std::tr1::operator== (const {\b GTEST_10_TUPLE_}(T)&  {\i t}, const {\b GTEST_10_TUPLE_}(U)&  {\i u})}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 975                                                     \{\par
976   {\cf19 return} gtest_internal::SameSizeTuplePrefixComparator<\par
977       tuple_size<GTEST_10_TUPLE_(T) >::value,\par
978       tuple_size<GTEST_10_TUPLE_(U) >::value>::Eq(t, u);\par
979 \}\par
}
{
\ql
References GTEST_10_TUPLE_().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db7/namespacestd_1_1tr1_af4516de784404381f9b14797694b6311_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constant Documentation\par
\pard\plain 
{\xe \v f1\:std::tr1}
{\xe \v std::tr1\:f1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 & std::tr1::f1}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_2_TUPLE_(T)(f0, f1)\par
}
}
{\xe \v f2\:std::tr1}
{\xe \v std::tr1\:f2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 & std::tr1::f2}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_3_TUPLE_(T)(f0, f1, f2)\par
}
}
{\xe \v f3\:std::tr1}
{\xe \v std::tr1\:f3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 & std::tr1::f3}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_4_TUPLE_(T)(f0, f1, f2, f3)\par
}
}
{\xe \v f4\:std::tr1}
{\xe \v std::tr1\:f4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 & std::tr1::f4}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_5_TUPLE_(T)(f0, f1, f2, f3, f4)\par
}
}
{\xe \v f5\:std::tr1}
{\xe \v std::tr1\:f5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 & std::tr1::f5}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_6_TUPLE_(T)(f0, f1, f2, f3, f4, f5)\par
}
}
{\xe \v f6\:std::tr1}
{\xe \v std::tr1\:f6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 & std::tr1::f6}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_7_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6)\par
}
}
{\xe \v f7\:std::tr1}
{\xe \v std::tr1\:f7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 & std::tr1::f7}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_8_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7)\par
}
}
{\xe \v f8\:std::tr1}
{\xe \v std::tr1\:f8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 & std::tr1::f8}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_9_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8)\par
}
}
{\xe \v f9\:std::tr1}
{\xe \v std::tr1\:f9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9& std::tr1::f9}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_10_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8, f9)\par
}
}
}
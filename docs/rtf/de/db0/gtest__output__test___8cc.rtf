{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lib/googletest/test/gtest_output_test_.cc File Reference\par \pard\plain 
{\tc\tcl2 \v lib/googletest/test/gtest_output_test_.cc(d4ab02d08ceed19dab4276c86042b1520529304b)}
{\xe \v lib/googletest/test/gtest_output_test_.cc(d4ab02d08ceed19dab4276c86042b1520529304b)}
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/gtest-spi.h"}\par
{\f2 #include "gtest/gtest.h"}\par
{\f2 #include "src/gtest-internal-inl.h"}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for gtest_output_test_.cc:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d4a/gtest__output__test___8cc__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPM" }{}}{\fldrslt {\cs37\ul\cf2 MixedUpTestCaseTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPN" }{}}{\fldrslt {\cs37\ul\cf2 MixedUpTestCaseWithSameTestNameTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPO" }{}}{\fldrslt {\cs37\ul\cf2 BarEnvironment}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPQ" }{}}{\fldrslt {\cs37\ul\cf2 FailingParamTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPR" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInFixtureConstructorTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPS" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInSetUpTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPT" }{}}{\fldrslt {\cs37\ul\cf2 MixedUpTestCaseTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPU" }{}}{\fldrslt {\cs37\ul\cf2 MixedUpTestCaseWithSameTestNameTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPV" }{}}{\fldrslt {\cs37\ul\cf2 FooEnvironment}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPW" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInFixtureConstructorTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPX" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInSetUpTest}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_before_TEST_F_in_same_test_case}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F_before_TEST_in_same_test_case}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQA" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACYW" }{}}{\fldrslt {\cs37\ul\cf2 foo}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQB" }{}}{\fldrslt {\cs37\ul\cf2 GTEST_IMPLEMENTATION_}}}
\~ 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQC" }{}}{\fldrslt {\cs37\ul\cf2 AdHocTest}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQD" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailure}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQE" }{}}{\fldrslt {\cs37\ul\cf2 INSTANTIATE_TEST_CASE_P}}}
 (PrintingFailingParams, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPQ" }{}}{\fldrslt {\cs37\ul\cf2 FailingParamTest}}}
, testing::Values(2))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQF" }{}}{\fldrslt {\cs37\ul\cf2 main}}}
 (int argc, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJO" }{}}{\fldrslt {\cs37\ul\cf2 RunAllTests}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQG" }{}}{\fldrslt {\cs37\ul\cf2 SubWithoutTrace}}}
 (int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQH" }{}}{\fldrslt {\cs37\ul\cf2 SubWithTrace}}}
 (int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQI" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (AddFailureAtTest, MessageContainsSpecifiedFileAndLineNumber)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQJ" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (DisabledTestsWarningTest, DISABLED_AlsoRunDisabledTestsFlagSuppressesWarning)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQK" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, CanReferenceGlobalVariables)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQL" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, CanReferenceLocalStaticVariables)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQM" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, FailsWhenStatementReturns)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQN" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, FailsWhenThereAreTwoFatalFailures)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQO" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, FailsWhenThereIsNoFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQP" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, FailsWhenThereIsOneNonfatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQQ" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectFatalFailureTest, SucceedsWhenThereIsOneFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQR" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, CanReferenceGlobalVariables)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQS" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, CanReferenceLocalVariables)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQT" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, FailsWhenStatementReturns)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQU" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, FailsWhenThereAreTwoNonfatalFailures)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQV" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, FailsWhenThereIsNoNonfatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQW" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, FailsWhenThereIsOneFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQX" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (ExpectNonfatalFailureTest, SucceedsWhenThereIsOneNonfatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQY" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (FatalFailureTest, FatalFailureInNestedSubroutine)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (FatalFailureTest, FatalFailureInSubroutine)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRA" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (FatalFailureTest, NonfatalFailureInSubroutine)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRB" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (LoggingTest, InterleavingLoggingAndAssertions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRC" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (NonfatalFailureTest, DiffForLongStrings)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRD" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (NonfatalFailureTest, EscapesStringOperands)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRE" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (PassingTest, PassingTest1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRF" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (PassingTest, PassingTest2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRG" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (SCOPED_TRACETest, CanBeNested)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRH" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (SCOPED_TRACETest, CanBeRepeated)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRI" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (SCOPED_TRACETest, ObeysScopes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRJ" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (SCOPED_TRACETest, WorksInLoop)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRK" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 (SCOPED_TRACETest, WorksInSubroutine)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRL" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_before_TEST_F_in_same_test_case}}}
, DefinedUsingTEST)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRM" }{}}{\fldrslt {\cs37\ul\cf2 TEST}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F_before_TEST_in_same_test_case}}}
, DefinedUsingTESTAndShouldFail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRN" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
, ExpectFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRO" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
, ExpectFatalFailureOnAllThreads)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRP" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
, ExpectNonFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRQ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
, ExpectNonFatalFailureOnAllThreads)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRR" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPR" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInFixtureConstructorTest}}}
, FailureInConstructor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRS" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPS" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInSetUpTest}}}
, FailureInSetUp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRT" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseTest, FirstTestFromNamespaceFoo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRU" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseTest, SecondTestFromNamespaceFoo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRV" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseTest, ThisShouldFail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRW" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseTest, ThisShouldFailToo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRX" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseWithSameTestNameTest, TheSecondTestWithThisNameShouldFail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 (MixedUpTestCaseWithSameTestNameTest, TheSecondTestWithThisNameShouldFail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADRZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPW" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInFixtureConstructorTest}}}
, FailureInConstructor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSA" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPX" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInSetUpTest}}}
, FailureInSetUp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSB" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_before_TEST_F_in_same_test_case}}}
, DefinedUsingTEST_FAndShouldFail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSC" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F_before_TEST_in_same_test_case}}}
, DefinedUsingTEST_F)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSD" }{}}{\fldrslt {\cs37\ul\cf2 TEST_P}}}
 ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPQ" }{}}{\fldrslt {\cs37\ul\cf2 FailingParamTest}}}
, Fails)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSE" }{}}{\fldrslt {\cs37\ul\cf2 TestEq1}}}
 (int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSF" }{}}{\fldrslt {\cs37\ul\cf2 TryTestSubroutine}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constants\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSG" }{}}{\fldrslt {\cs37\ul\cf2 global_integer}}}
 = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSH" }{}}{\fldrslt {\cs37\ul\cf2 kGoldenString}}}
 [] = "\\"Line\\0 1\\"\\nLine 2"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v GTEST_IMPLEMENTATION_\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:GTEST_IMPLEMENTATION_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IMPLEMENTATION_\~ 1}}
\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file gtest_output_test_.cc.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AdHocTest\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:AdHocTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AdHocTest ()}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 337 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 337                  \{\par
338   printf({\cf22 "The non-test part of the code is expected to have 2 failures.\\n\\n"});\par
339   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLS" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_TRUE}}}
({\cf17 false});\par
340   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(2, 3);\par
341 \}\par
}
{
\ql
References EXPECT_EQ, and EXPECT_TRUE.}\par
{
\ql
Referenced by RunAllTests().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a36cd4d21174efaa3066237d716028d49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v FatalFailure\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:FatalFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FatalFailure ()}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 710 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 710                     \{\par
711   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "Expected fatal failure."};\par
712 \}\par
}
{
\ql
References FAIL.}\par
{
\ql
Referenced by TEST().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_acdca9b16622e8a506a39240c8809af38_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v INSTANTIATE_TEST_CASE_P\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:INSTANTIATE_TEST_CASE_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
INSTANTIATE_TEST_CASE_P (PrintingFailingParams , {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPQ" }{}}{\fldrslt {\cs37\ul\cf2 FailingParamTest}}}
 , testing::Values(2) )}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v main\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1024 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1024                                 \{\par
1025   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQP" }{}}{\fldrslt {\cs37\ul\cf2 testing::GTEST_FLAG}}}
(print_time) = {\cf17 false};\par
1026 \par
1027   {\cf20 // We just run the tests, knowing some of them are intended to fail.}\par
1028   {\cf20 // We will use a separate Python script to compare the output of}\par
1029   {\cf20 // this program with the golden file.}\par
1030 \par
1031   {\cf20 // It's hard to test InitGoogleTest() directly, as it has many}\par
1032   {\cf20 // global side effects.  The following line serves as a sanity test}\par
1033   {\cf20 // for it.}\par
1034   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNN" }{}}{\fldrslt {\cs37\ul\cf2 testing::InitGoogleTest}}}
(&argc, argv);\par
1035   {\cf18 bool} internal_skip_environment_and_ad_hoc_tests =\par
1036       std::count(argv, argv + argc,\par
1037                  std::string({\cf22 "internal_skip_environment_and_ad_hoc_tests"})) > 0;\par
1038 \par
1039 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
1040   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABQP" }{}}{\fldrslt {\cs37\ul\cf2 testing::internal::GTEST_FLAG}}}
(internal_run_death_test) != {\cf22 ""}) \{\par
1041     {\cf20 // Skip the usual output capturing if we're running as the child}\par
1042     {\cf20 // process of an threadsafe-style death test.}\par
1043 {\cf21 # if GTEST_OS_WINDOWS}\par
1044     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTU" }{}}{\fldrslt {\cs37\ul\cf2 posix::FReopen}}}
({\cf22 "nul:"}, {\cf22 "w"}, stdout);\par
1045 {\cf21 # else}\par
1046     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTU" }{}}{\fldrslt {\cs37\ul\cf2 posix::FReopen}}}
({\cf22 "/dev/null"}, {\cf22 "w"}, stdout);\par
1047 {\cf21 # endif  }{\cf20 // GTEST_OS_WINDOWS}\par
1048     {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 RUN_ALL_TESTS}}}
();\par
1049   \}\par
1050 {\cf21 #endif  }{\cf20 // GTEST_HAS_DEATH_TEST}\par
1051 \par
1052   {\cf19 if} (internal_skip_environment_and_ad_hoc_tests)\par
1053     {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 RUN_ALL_TESTS}}}
();\par
1054 \par
1055   {\cf20 // Registers two global test environments.}\par
1056   {\cf20 // The golden file verifies that they are set up in the order they}\par
1057   {\cf20 // are registered, and torn down in the reverse order.}\par
1058   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 testing::AddGlobalTestEnvironment}}}
({\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPV" }{}}{\fldrslt {\cs37\ul\cf2 FooEnvironment}}}
);\par
1059   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABME" }{}}{\fldrslt {\cs37\ul\cf2 testing::AddGlobalTestEnvironment}}}
({\cf17 new} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPO" }{}}{\fldrslt {\cs37\ul\cf2 BarEnvironment}}}
);\par
1060 \par
1061   {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJO" }{}}{\fldrslt {\cs37\ul\cf2 RunAllTests}}}
();\par
1062 \}\par
}
{
\ql
References testing::AddGlobalTestEnvironment(), std::count(), testing::internal::posix::FReopen(), GTEST_FLAG, testing::InitGoogleTest(), RUN_ALL_TESTS(), and RunAllTests().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v RunAllTests\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:RunAllTests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RunAllTests ()}}
\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 344 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 344                   \{\par
345   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQC" }{}}{\fldrslt {\cs37\ul\cf2 AdHocTest}}}
();\par
346   {\cf19 return} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNW" }{}}{\fldrslt {\cs37\ul\cf2 RUN_ALL_TESTS}}}
();\par
347 \}\par
}
{
\ql
References AdHocTest(), and RUN_ALL_TESTS().}\par
{
\ql
Referenced by main().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_ae0ca194f6b730e168850ce3179ad4f63_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_ae0ca194f6b730e168850ce3179ad4f63_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SubWithoutTrace\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:SubWithoutTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SubWithoutTrace (int  {\i n})}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 167 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 167                             \{\par
168   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
169   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_EQ}}}
(2, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
170 \}\par
}
{
\ql
References ASSERT_EQ, EXPECT_EQ, and testing::internal::posix::n.}\par
{
\ql
Referenced by SubWithTrace(), and TEST().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a7e222b468bbde7215ce826f10993e746_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SubWithTrace\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:SubWithTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SubWithTrace (int  {\i n})}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 173 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 173                          \{\par
174   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 testing::Message}}}
() << {\cf22 "n = "} << {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
175 \par
176   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQG" }{}}{\fldrslt {\cs37\ul\cf2 SubWithoutTrace}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
);\par
177 \}\par
}
{
\ql
References testing::internal::posix::n, SCOPED_TRACE, and SubWithoutTrace().}\par
{
\ql
Referenced by TEST().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a543ee38e0824e47113bb12c3277e09ae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a543ee38e0824e47113bb12c3277e09ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (AddFailureAtTest , MessageContainsSpecifiedFileAndLineNumber )}}
\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 461 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 461                                                                   \{\par
462   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJP" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE_AT}}}
({\cf22 "foo.cc"}, 42) << {\cf22 "Expected failure in foo.cc"};\par
463 \}\par
}
{
\ql
References ADD_FAILURE_AT.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (DisabledTestsWarningTest , DISABLED_AlsoRunDisabledTestsFlagSuppressesWarning )}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 326 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327                                                          \{\par
328   {\cf20 // This test body is intentionally empty.  Its sole purpose is for}\par
329   {\cf20 // verifying that the --gtest_also_run_disabled_tests flag}\par
330   {\cf20 // suppresses the "YOU HAVE 12 DISABLED TESTS" warning at the end of}\par
331   {\cf20 // the test output.}\par
332 \}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , CanReferenceGlobalVariables )}}
\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 676 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 676                                                           \{\par
677   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSG" }{}}{\fldrslt {\cs37\ul\cf2 global_integer}}}
 = 0;\par
678   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
679     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_EQ}}}
(1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSG" }{}}{\fldrslt {\cs37\ul\cf2 global_integer}}}
) << {\cf22 "Expected fatal failure."};\par
680   \}, {\cf22 "Expected fatal failure."});\par
681 \}\par
}
{
\ql
References ASSERT_EQ, EXPECT_FATAL_FAILURE, and global_integer.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , CanReferenceLocalStaticVariables )}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 685 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 685                                                                \{\par
686   {\cf17 static} {\cf18 int} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
;\par
687   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
 = 1;\par
688   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
689     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_EQ}}}
(0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
) << {\cf22 "Expected fatal failure."};\par
690   \}, {\cf22 "Expected fatal failure."});\par
691 \}\par
}
{
\ql
References ASSERT_EQ, EXPECT_FATAL_FAILURE, and testing::internal::posix::n.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , FailsWhenStatementReturns )}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 735 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 735                                                         \{\par
736   printf({\cf22 "(expecting a failure)\\n"});\par
737   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
738     {\cf19 return};\par
739   \}, {\cf22 ""});\par
740 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , FailsWhenThereAreTwoFatalFailures )}}
\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 716 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 716                                                                 \{\par
717   printf({\cf22 "(expecting a failure)\\n"});\par
718   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
719     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQD" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailure}}}
();\par
720     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQD" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailure}}}
();\par
721   \}, {\cf22 ""});\par
722 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE, and FatalFailure().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a4fd11a245bf0e8eb46d78c8dc14c730e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , FailsWhenThereIsNoFatalFailure )}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 703 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 703                                                              \{\par
704   printf({\cf22 "(expecting a failure)\\n"});\par
705   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
706   \}, {\cf22 ""});\par
707 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , FailsWhenThereIsOneNonfatalFailure )}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 726 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 726                                                                  \{\par
727   printf({\cf22 "(expecting a failure)\\n"});\par
728   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
729     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "Expected non-fatal failure."};\par
730   \}, {\cf22 ""});\par
731 \}\par
}
{
\ql
References ADD_FAILURE, and EXPECT_FATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectFatalFailureTest , SucceedsWhenThereIsOneFatalFailure )}}
\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 695 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 695                                                                  \{\par
696   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(\{\par
697     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "Expected fatal failure."};\par
698   \}, {\cf22 "Expected fatal failure."});\par
699 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE, and FAIL.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , CanReferenceGlobalVariables )}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 597 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 597                                                              \{\par
598   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSG" }{}}{\fldrslt {\cs37\ul\cf2 global_integer}}}
 = 0;\par
599   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
600     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(1, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSG" }{}}{\fldrslt {\cs37\ul\cf2 global_integer}}}
) << {\cf22 "Expected non-fatal failure."};\par
601   \}, {\cf22 "Expected non-fatal failure."});\par
602 \}\par
}
{
\ql
References EXPECT_EQ, EXPECT_NONFATAL_FAILURE, and global_integer.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , CanReferenceLocalVariables )}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 606 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 606                                                             \{\par
607   {\cf18 int} m = 0;\par
608   {\cf17 static} {\cf18 int} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
;\par
609   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
 = 1;\par
610   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
611     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(m, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAP" }{}}{\fldrslt {\cs37\ul\cf2 n}}}
) << {\cf22 "Expected non-fatal failure."};\par
612   \}, {\cf22 "Expected non-fatal failure."});\par
613 \}\par
}
{
\ql
References EXPECT_EQ, EXPECT_NONFATAL_FAILURE, and testing::internal::posix::n.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , FailsWhenStatementReturns )}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 652 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 652                                                            \{\par
653   printf({\cf22 "(expecting a failure)\\n"});\par
654   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
655     {\cf19 return};\par
656   \}, {\cf22 ""});\par
657 \}\par
}
{
\ql
References EXPECT_NONFATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , FailsWhenThereAreTwoNonfatalFailures )}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 633 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 633                                                                       \{\par
634   printf({\cf22 "(expecting a failure)\\n"});\par
635   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
636     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "Expected non-fatal failure 1."};\par
637     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "Expected non-fatal failure 2."};\par
638   \}, {\cf22 ""});\par
639 \}\par
}
{
\ql
References ADD_FAILURE, and EXPECT_NONFATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , FailsWhenThereIsNoNonfatalFailure )}}
\par
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 625 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 625                                                                    \{\par
626   printf({\cf22 "(expecting a failure)\\n"});\par
627   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
628   \}, {\cf22 ""});\par
629 \}\par
}
{
\ql
References EXPECT_NONFATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , FailsWhenThereIsOneFatalFailure )}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 643 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 643                                                                  \{\par
644   printf({\cf22 "(expecting a failure)\\n"});\par
645   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
646     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "Expected fatal failure."};\par
647   \}, {\cf22 ""});\par
648 \}\par
}
{
\ql
References EXPECT_NONFATAL_FAILURE, and FAIL.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ExpectNonfatalFailureTest , SucceedsWhenThereIsOneNonfatalFailure )}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 617 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 617                                                                        \{\par
618   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(\{\par
619     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "Expected non-fatal failure."};\par
620   \}, {\cf22 "Expected non-fatal failure."});\par
621 \}\par
}
{
\ql
References ADD_FAILURE, and EXPECT_NONFATAL_FAILURE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (FatalFailureTest , FatalFailureInNestedSubroutine )}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                        \{\par
129   printf({\cf22 "(expecting a failure that x should be 1)\\n"});\par
130 \par
131   {\cf20 // Calls a subrountine that yields a fatal failure.}\par
132   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSF" }{}}{\fldrslt {\cs37\ul\cf2 TryTestSubroutine}}}
();\par
133 \par
134   {\cf20 // Catches the fatal failure and aborts the test.}\par
135   {\cf20 //}\par
136   {\cf20 // When calling HasFatalFailure() inside a TEST, TEST_F, or test}\par
137   {\cf20 // fixture, the testing::Test:: prefix is not needed.}\par
138   {\cf19 if} (HasFatalFailure()) {\cf19 return};\par
139 \par
140   {\cf20 // If we get here, something is wrong.}\par
141   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "This should never be reached."};\par
142 \}\par
}
{
\ql
References FAIL, and TryTestSubroutine().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a8763e3844bd21de9bd7126658a4279c5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (FatalFailureTest , FatalFailureInSubroutine )}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 121                                                  \{\par
122   printf({\cf22 "(expecting a failure that x should be 1)\\n"});\par
123 \par
124   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSF" }{}}{\fldrslt {\cs37\ul\cf2 TryTestSubroutine}}}
();\par
125 \}\par
}
{
\ql
References TryTestSubroutine().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a6076f79ee5f9e8982bba181cbbebb0ed_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (FatalFailureTest , NonfatalFailureInSubroutine )}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                                                     \{\par
146   printf({\cf22 "(expecting a failure on false)\\n"});\par
147   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLS" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_TRUE}}}
({\cf17 false});  {\cf20 // Generates a nonfatal failure}\par
148   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJW" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_FALSE}}}
(HasFatalFailure());  {\cf20 // This should succeed.}\par
149 \}\par
}
{
\ql
References ASSERT_FALSE, and EXPECT_TRUE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (LoggingTest , InterleavingLoggingAndAssertions )}}
\par
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152                                                     \{\par
153   {\cf17 static} {\cf17 const} {\cf18 int} a[4] = \{\par
154     3, 9, 2, 6\par
155   \};\par
156 \par
157   printf({\cf22 "(expecting 2 failures on (3) >= (a[i]))\\n"});\par
158   {\cf19 for} ({\cf18 int} i = 0; i < static_cast<int>({\cf17 sizeof}(a)/{\cf17 sizeof}(*a)); i++) \{\par
159     printf({\cf22 "i == %d\\n"}, i);\par
160     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLE" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_GE}}}
(3, a[i]);\par
161   \}\par
162 \}\par
}
{
\ql
References EXPECT_GE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (NonfatalFailureTest , DiffForLongStrings )}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 115                                               \{\par
116   std::string golden_str({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSH" }{}}{\fldrslt {\cs37\ul\cf2 kGoldenString}}}
, {\cf17 sizeof}({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSH" }{}}{\fldrslt {\cs37\ul\cf2 kGoldenString}}}
) - 1);\par
117   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(golden_str, {\cf22 "Line 2"});\par
118 \}\par
}
{
\ql
References EXPECT_EQ, and kGoldenString.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (NonfatalFailureTest , EscapesStringOperands )}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                  \{\par
108   std::string actual = {\cf22 "actual \\"string\\""};\par
109   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSH" }{}}{\fldrslt {\cs37\ul\cf2 kGoldenString}}}
, actual);\par
110 \par
111   {\cf17 const} {\cf18 char}* golden = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSH" }{}}{\fldrslt {\cs37\ul\cf2 kGoldenString}}}
;\par
112   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(golden, actual);\par
113 \}\par
}
{
\ql
References EXPECT_EQ, and kGoldenString.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (PassingTest , PassingTest1 )}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85                                 \{\par
86 \}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (PassingTest , PassingTest2 )}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 88                                 \{\par
89 \}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (SCOPED_TRACETest , CanBeNested )}}
\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 218 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 218                                     \{\par
219   printf({\cf22 "(expected to fail)\\n"});\par
220 \par
221   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 ""});  {\cf20 // A trace without a message.}\par
222 \par
223   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQH" }{}}{\fldrslt {\cs37\ul\cf2 SubWithTrace}}}
(2);\par
224 \}\par
}
{
\ql
References SCOPED_TRACE, and SubWithTrace().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_ae402e91f305e54f5f14a172a0fb0831b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (SCOPED_TRACETest , CanBeRepeated )}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 227 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 227                                       \{\par
228   printf({\cf22 "(expected to fail)\\n"});\par
229 \par
230   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 "A"});\par
231   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
()\par
232       << {\cf22 "This failure is expected, and should contain trace point A."};\par
233 \par
234   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 "B"});\par
235   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
()\par
236       << {\cf22 "This failure is expected, and should contain trace point A and B."};\par
237 \par
238   \{\par
239     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 "C"});\par
240     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "This failure is expected, and should "}\par
241                   << {\cf22 "contain trace point A, B, and C."};\par
242   \}\par
243 \par
244   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 "D"});\par
245   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "This failure is expected, and should "}\par
246                 << {\cf22 "contain trace point A, B, and D."};\par
247 \}\par
}
{
\ql
References ADD_FAILURE, and SCOPED_TRACE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (SCOPED_TRACETest , ObeysScopes )}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180                                     \{\par
181   printf({\cf22 "(expected to fail)\\n"});\par
182 \par
183   {\cf20 // There should be no trace before SCOPED_TRACE() is invoked.}\par
184   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "This failure is expected, and shouldn't have a trace."};\par
185 \par
186   \{\par
187     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\cf22 "Expected trace"});\par
188     {\cf20 // After SCOPED_TRACE(), a failure in the current scope should contain}\par
189     {\cf20 // the trace.}\par
190     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "This failure is expected, and should have a trace."};\par
191   \}\par
192 \par
193   {\cf20 // Once the control leaves the scope of the SCOPED_TRACE(), there}\par
194   {\cf20 // should be no trace again.}\par
195   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "This failure is expected, and shouldn't have a trace."};\par
196 \}\par
}
{
\ql
References ADD_FAILURE, and SCOPED_TRACE.}\par
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (SCOPED_TRACETest , WorksInLoop )}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 199                                     \{\par
200   printf({\cf22 "(expected to fail)\\n"});\par
201 \par
202   {\cf19 for} ({\cf18 int} i = 1; i <= 2; i++) \{\par
203     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLZ" }{}}{\fldrslt {\cs37\ul\cf2 SCOPED_TRACE}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 testing::Message}}}
() << {\cf22 "i = "} << i);\par
204 \par
205     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQG" }{}}{\fldrslt {\cs37\ul\cf2 SubWithoutTrace}}}
(i);\par
206   \}\par
207 \}\par
}
{
\ql
References SCOPED_TRACE, and SubWithoutTrace().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a46dcedbe67765adaebc7740ee17a88de_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (SCOPED_TRACETest , WorksInSubroutine )}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 210 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 210                                           \{\par
211   printf({\cf22 "(expected to fail)\\n"});\par
212 \par
213   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQH" }{}}{\fldrslt {\cs37\ul\cf2 SubWithTrace}}}
(1);\par
214   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADQH" }{}}{\fldrslt {\cs37\ul\cf2 SubWithTrace}}}
(2);\par
215 \}\par
}
{
\ql
References SubWithTrace().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a492695898501cea9f99ccd690c2b3991_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_before_TEST_F_in_same_test_case}}}
 , DefinedUsingTEST )}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 586 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 586 \{\}\par
}
}
{\xe \v TEST\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F_before_TEST_in_same_test_case}}}
 , DefinedUsingTESTAndShouldFail )}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 581 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 581 \{\}\par
}
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
 , ExpectFatalFailure )}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 892 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 892                                               \{\par
893   {\cf20 // Expected fatal failure, but succeeds.}\par
894   printf({\cf22 "(expecting 1 failure)\\n"});\par
895   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 SUCCEED}}}
(), {\cf22 "Expected fatal failure."});\par
896   {\cf20 // Expected fatal failure, but got a non-fatal failure.}\par
897   printf({\cf22 "(expecting 1 failure)\\n"});\par
898   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(AddFailure(NONFATAL_FAILURE), {\cf22 "Expected non-fatal "}\par
899                        {\cf22 "failure."});\par
900   {\cf20 // Wrong message.}\par
901   printf({\cf22 "(expecting 1 failure)\\n"});\par
902   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIV" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE}}}
(AddFailure({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 FATAL_FAILURE}}}
), {\cf22 "Some other fatal failure "}\par
903                        {\cf22 "expected."});\par
904 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE, anonymous_namespace\{gtest_environment_test.cc\}::FATAL_FAILURE, and SUCCEED.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
 , ExpectFatalFailureOnAllThreads )}}
\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 963 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 963                                                           \{\par
964   {\cf20 // Expected fatal failure, but succeeds.}\par
965   printf({\cf22 "(expecting 1 failure)\\n"});\par
966   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE_ON_ALL_THREADS}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 SUCCEED}}}
(), {\cf22 "Expected fatal failure."});\par
967   {\cf20 // Expected fatal failure, but got a non-fatal failure.}\par
968   printf({\cf22 "(expecting 1 failure)\\n"});\par
969   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE_ON_ALL_THREADS}}}
(AddFailure(NONFATAL_FAILURE),\par
970                                       {\cf22 "Expected non-fatal failure."});\par
971   {\cf20 // Wrong message.}\par
972   printf({\cf22 "(expecting 1 failure)\\n"});\par
973   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_FATAL_FAILURE_ON_ALL_THREADS}}}
(AddFailure({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 FATAL_FAILURE}}}
),\par
974                                       {\cf22 "Some other fatal failure expected."});\par
975 \}\par
}
{
\ql
References EXPECT_FATAL_FAILURE_ON_ALL_THREADS, anonymous_namespace\{gtest_environment_test.cc\}::FATAL_FAILURE, and SUCCEED.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
 , ExpectNonFatalFailure )}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 906 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 906                                                  \{\par
907   {\cf20 // Expected non-fatal failure, but succeeds.}\par
908   printf({\cf22 "(expecting 1 failure)\\n"});\par
909   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 SUCCEED}}}
(), {\cf22 "Expected non-fatal failure."});\par
910   {\cf20 // Expected non-fatal failure, but got a fatal failure.}\par
911   printf({\cf22 "(expecting 1 failure)\\n"});\par
912   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(AddFailure({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 FATAL_FAILURE}}}
), {\cf22 "Expected fatal failure."});\par
913   {\cf20 // Wrong message.}\par
914   printf({\cf22 "(expecting 1 failure)\\n"});\par
915   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE}}}
(AddFailure(NONFATAL_FAILURE), {\cf22 "Some other non-fatal "}\par
916                           {\cf22 "failure."});\par
917 \}\par
}
{
\ql
References EXPECT_NONFATAL_FAILURE, anonymous_namespace\{gtest_environment_test.cc\}::FATAL_FAILURE, and SUCCEED.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPP" }{}}{\fldrslt {\cs37\ul\cf2 ExpectFailureTest}}}
 , ExpectNonFatalFailureOnAllThreads )}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 977 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 977                                                              \{\par
978   {\cf20 // Expected non-fatal failure, but succeeds.}\par
979   printf({\cf22 "(expecting 1 failure)\\n"});\par
980   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS}}}
({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 SUCCEED}}}
(), {\cf22 "Expected non-fatal "}\par
981                                          {\cf22 "failure."});\par
982   {\cf20 // Expected non-fatal failure, but got a fatal failure.}\par
983   printf({\cf22 "(expecting 1 failure)\\n"});\par
984   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS}}}
(AddFailure({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADJH" }{}}{\fldrslt {\cs37\ul\cf2 FATAL_FAILURE}}}
),\par
985                                          {\cf22 "Expected fatal failure."});\par
986   {\cf20 // Wrong message.}\par
987   printf({\cf22 "(expecting 1 failure)\\n"});\par
988   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIY" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS}}}
(AddFailure(NONFATAL_FAILURE),\par
989                                          {\cf22 "Some other non-fatal failure."});\par
990 \}\par
}
{
\ql
References EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS, anonymous_namespace\{gtest_environment_test.cc\}::FATAL_FAILURE, and SUCCEED.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPR" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInFixtureConstructorTest}}}
 , FailureInConstructor )}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 404 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404                                                                    \{\par
405   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "UNEXPECTED failure in the test body.  "}\par
406                 << {\cf22 "We should never get here, as the test fixture c'tor "}\par
407                 << {\cf22 "had a fatal failure."};\par
408 \}\par
}
{
\ql
References ADD_FAILURE.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPS" }{}}{\fldrslt {\cs37\ul\cf2 FatalFailureInSetUpTest}}}
 , FailureInSetUp )}}
\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 456 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 456                                                 \{\par
457   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "UNEXPECTED failure in the test function.  "}\par
458          << {\cf22 "We should never get here, as SetUp() failed."};\par
459 \}\par
}
{
\ql
References FAIL.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPW" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInFixtureConstructorTest}}}
 , FailureInConstructor )}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 370 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 370                                                                       \{\par
371   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJN" }{}}{\fldrslt {\cs37\ul\cf2 ADD_FAILURE}}}
() << {\cf22 "Expected failure #3, in the test body."};\par
372 \}\par
}
{
\ql
References ADD_FAILURE.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPX" }{}}{\fldrslt {\cs37\ul\cf2 NonFatalFailureInSetUpTest}}}
 , FailureInSetUp )}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 431 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 431                                                    \{\par
432   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "Expected failure #2, in the test function."};\par
433 \}\par
}
{
\ql
References FAIL.}\par
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPY" }{}}{\fldrslt {\cs37\ul\cf2 TEST_before_TEST_F_in_same_test_case}}}
 , DefinedUsingTEST_FAndShouldFail )}}
\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 590 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 590                                                                               \{\par
591 \}\par
}
}
{\xe \v TEST_F\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPZ" }{}}{\fldrslt {\cs37\ul\cf2 TEST_F_before_TEST_in_same_test_case}}}
 , DefinedUsingTEST_F )}}
\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 577 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 577 \{\}\par
}
}
{\xe \v TEST_P\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TEST_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_P ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADPQ" }{}}{\fldrslt {\cs37\ul\cf2 FailingParamTest}}}
 , Fails )}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95                                 \{\par
96   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLB" }{}}{\fldrslt {\cs37\ul\cf2 EXPECT_EQ}}}
(1, GetParam());\par
97 \}\par
}
{
\ql
References EXPECT_EQ.}\par
}
{\xe \v TestEq1\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TestEq1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestEq1 (int  {\i x})}}
\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                     \{\par
66   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABJU" }{}}{\fldrslt {\cs37\ul\cf2 ASSERT_EQ}}}
(1, x);\par
67 \}\par
}
{
\ql
References ASSERT_EQ.}\par
{
\ql
Referenced by anonymous_namespace\{gtest_unittest.cc\}::TEST(), and TryTestSubroutine().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a8f28d985b030c6dd2714d1e884c62c41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TryTestSubroutine\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:TryTestSubroutine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TryTestSubroutine ()}}
\par
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file gtest_output_test_.cc.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71                          \{\par
72   {\cf20 // Calls a subrountine that yields a fatal failure.}\par
73   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSE" }{}}{\fldrslt {\cs37\ul\cf2 TestEq1}}}
(2);\par
74 \par
75   {\cf20 // Catches the fatal failure and aborts the test.}\par
76   {\cf20 //}\par
77   {\cf20 // The testing::Test:: prefix is necessary when calling}\par
78   {\cf20 // HasFatalFailure() outside of a TEST, TEST_F, or test fixture.}\par
79   {\cf19 if} ({\field {\*\fldinst { HYPERLINK  \\l "AAAAAAADSI" }{}}{\fldrslt {\cs37\ul\cf2 testing::Test::HasFatalFailure}}}
()) {\cf19 return};\par
80 \par
81   {\cf20 // If we get here, something is wrong.}\par
82   {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLT" }{}}{\fldrslt {\cs37\ul\cf2 FAIL}}}
() << {\cf22 "This should never be reached."};\par
83 \}\par
}
{
\ql
References FAIL, Test::HasFatalFailure(), and TestEq1().}\par
{
\ql
Referenced by TEST().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a14e796981ca8d3c71dbd2b839c1ce784_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/db0/gtest__output__test___8cc_a14e796981ca8d3c71dbd2b839c1ce784_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v global_integer\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:global_integer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_integer = 0}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 594 of file gtest_output_test_.cc.}\par
{
\ql
Referenced by TEST().}\par
}
{\xe \v kGoldenString\:gtest_output_test_.cc}
{\xe \v gtest_output_test_.cc\:kGoldenString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char kGoldenString[] = "\\"Line\\0 1\\"\\nLine 2"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file gtest_output_test_.cc.}\par
{
\ql
Referenced by TEST().}\par
}
}